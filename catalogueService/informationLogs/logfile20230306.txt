2023-03-06 21:17:01.673 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-06 21:17:03.214 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-06 21:17:03.216 +01:00 [INF] Hosting environment: Development
2023-03-06 21:17:03.226 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService
2023-03-06 21:17:03.334 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 21:17:05.099 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 1686.0166 ms
2023-03-06 21:17:05.153 +01:00 [INF] Request finished in 1827.8695ms 200 text/html;charset=utf-8
2023-03-06 21:17:05.172 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 21:17:05.180 +01:00 [INF] Request finished in 7.4414ms 200 application/javascript; charset=utf-8
2023-03-06 21:17:05.183 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 21:17:05.353 +01:00 [INF] Request finished in 169.7201ms 200 text/javascript; charset=UTF-8
2023-03-06 21:17:05.567 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 21:17:06.146 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 578.1357 ms
2023-03-06 21:17:06.147 +01:00 [INF] Request finished in 580.2271ms 200 application/json;charset=utf-8
2023-03-06 21:17:58.497 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-03-06 21:17:58.522 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:17:58.609 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 21:17:59.920 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-03-06 21:18:01.200 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:18:01.201 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:18:01.203 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:18:01.268 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:18:03.026 +01:00 [INF] Executed DbCommand (142ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 21:18:03.214 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-03-06 21:18:03.214 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-03-06 21:18:03.772 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:18:03.788 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 5167.3353ms
2023-03-06 21:18:03.790 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:18:03.790 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 5291.7238 ms
2023-03-06 21:18:03.806 +01:00 [INF] Request finished in 5311.6529ms 200 text/plain; charset=utf-8
2023-03-06 21:19:08.108 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Users  
2023-03-06 21:19:08.299 +01:00 [INF] Successfully validated the token.
2023-03-06 21:19:08.320 +01:00 [INF] Authorization was successful.
2023-03-06 21:19:08.321 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 21:19:08.338 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 21:19:08.426 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:19:08.519 +01:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 21:19:08.691 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.userModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:19:08.705 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService) in 366.4951ms
2023-03-06 21:19:08.708 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 21:19:08.708 +01:00 [INF] HTTP GET /api/Users responded 200 in 598.2447 ms
2023-03-06 21:19:08.709 +01:00 [INF] Request finished in 602.3357ms 200 application/json; charset=utf-8
2023-03-06 21:21:26.005 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Users application/json 192
2023-03-06 21:21:26.020 +01:00 [INF] Successfully validated the token.
2023-03-06 21:21:26.023 +01:00 [INF] Authorization was successful.
2023-03-06 21:21:26.023 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 21:21:26.033 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.userRequest) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 21:21:26.097 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:21:26.469 +01:00 [INF] Executed DbCommand (20ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (DbType = Int32), @p7='?' (Size = 4000), @p8='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([firstName], [lastName], [locationId], [password], [phoneNumber], [role], [typeId], [userName], [wallet])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [userId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [userId] = scope_identity();
2023-03-06 21:21:26.583 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 21:21:26.586 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService) in 551.7948ms
2023-03-06 21:21:26.586 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 21:21:26.586 +01:00 [INF] HTTP POST /api/Users responded 200 in 572.0441 ms
2023-03-06 21:21:26.588 +01:00 [INF] Request finished in 583.3178ms 200 application/json; charset=utf-8
2023-03-06 21:22:08.458 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Sales/View all Sales  
2023-03-06 21:22:08.466 +01:00 [INF] Successfully validated the token.
2023-03-06 21:22:08.470 +01:00 [INF] Authorization was successful.
2023-03-06 21:22:08.470 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 21:22:08.477 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-03-06 21:22:08.483 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:22:08.499 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[saleId], [s].[amount], [s].[customerID], [s].[datePaid], [s].[salesType]
FROM [sales] AS [s]
2023-03-06 21:22:08.531 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.saleModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:22:08.545 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService) in 67.0701ms
2023-03-06 21:22:08.545 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 21:22:08.545 +01:00 [INF] HTTP GET /api/Sales/View all Sales responded 200 in 86.4087 ms
2023-03-06 21:22:08.546 +01:00 [INF] Request finished in 88.7723ms 200 application/json; charset=utf-8
2023-03-06 21:23:08.254 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 70
2023-03-06 21:23:08.259 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:23:08.261 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 21:23:08.285 +01:00 [INF] Login request received is Username: mbokoemmanuel@gmail.com
2023-03-06 21:23:08.288 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:23:08.310 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 21:23:08.312 +01:00 [INF] The Username of the current user is: mbokoemmanuel@gmail.com
2023-03-06 21:23:08.312 +01:00 [INF] Username: mbokoemmanuel@gmail.com successfully logged in
2023-03-06 21:23:08.314 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:23:08.318 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 57.1001ms
2023-03-06 21:23:08.319 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:23:08.319 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 63.0570 ms
2023-03-06 21:23:08.319 +01:00 [INF] Request finished in 70.4986ms 200 text/plain; charset=utf-8
2023-03-06 21:25:23.391 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:25:23.400 +01:00 [INF] Successfully validated the token.
2023-03-06 21:25:23.402 +01:00 [INF] Authorization was successful.
2023-03-06 21:25:23.404 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:23.424 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:25:23.451 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:25:23.453 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 28.4708ms
2023-03-06 21:25:23.453 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:23.454 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 200 in 60.0199 ms
2023-03-06 21:25:23.456 +01:00 [INF] Request finished in 64.7656ms 200 text/plain; charset=utf-8
2023-03-06 21:25:34.099 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:25:34.109 +01:00 [INF] Successfully validated the token.
2023-03-06 21:25:34.142 +01:00 [INF] Authorization was successful.
2023-03-06 21:25:34.153 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:34.156 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:25:34.168 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:25:34.171 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 13.0605ms
2023-03-06 21:25:34.172 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:34.172 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 200 in 70.6570 ms
2023-03-06 21:25:34.174 +01:00 [INF] Request finished in 74.559ms 200 text/plain; charset=utf-8
2023-03-06 21:25:39.855 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:25:39.861 +01:00 [INF] Successfully validated the token.
2023-03-06 21:25:39.864 +01:00 [INF] Authorization was successful.
2023-03-06 21:25:39.865 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:39.867 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:25:39.881 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:25:39.885 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 16.394ms
2023-03-06 21:25:39.885 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:39.885 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 200 in 29.1870 ms
2023-03-06 21:25:39.886 +01:00 [INF] Request finished in 31.0697ms 200 text/plain; charset=utf-8
2023-03-06 21:25:46.076 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:25:46.079 +01:00 [INF] Successfully validated the token.
2023-03-06 21:25:46.081 +01:00 [INF] Authorization was successful.
2023-03-06 21:25:46.081 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:46.082 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:25:46.096 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:25:46.098 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 16.1955ms
2023-03-06 21:25:46.099 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:46.099 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 200 in 21.9937 ms
2023-03-06 21:25:46.100 +01:00 [INF] Request finished in 25.5382ms 200 text/plain; charset=utf-8
2023-03-06 21:25:53.223 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:25:53.226 +01:00 [INF] Successfully validated the token.
2023-03-06 21:25:53.228 +01:00 [INF] Authorization was successful.
2023-03-06 21:25:53.229 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:53.229 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:25:53.236 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:25:53.237 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 7.5068ms
2023-03-06 21:25:53.238 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:25:53.238 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 200 in 13.8167 ms
2023-03-06 21:25:53.239 +01:00 [INF] Request finished in 18.2438ms 200 text/plain; charset=utf-8
2023-03-06 21:26:13.047 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Users  
2023-03-06 21:26:13.060 +01:00 [INF] Successfully validated the token.
2023-03-06 21:26:13.062 +01:00 [INF] Authorization failed.
2023-03-06 21:26:13.086 +01:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-06 21:26:13.087 +01:00 [INF] HTTP GET /api/Users responded 403 in 39.6501 ms
2023-03-06 21:26:13.096 +01:00 [INF] Request finished in 48.3242ms 403 
2023-03-06 21:26:51.613 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Users/Get single user?id=3  
2023-03-06 21:26:51.633 +01:00 [INF] Successfully validated the token.
2023-03-06 21:26:51.635 +01:00 [INF] Authorization was successful.
2023-03-06 21:26:51.635 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.GetByIdAsync (catalogueService)'
2023-03-06 21:26:51.662 +01:00 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetByIdAsync(Int32) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 21:26:51.678 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:26:51.706 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 21:26:51.713 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.Models.userModel'.
2023-03-06 21:26:51.714 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.GetByIdAsync (catalogueService) in 52.3731ms
2023-03-06 21:26:51.715 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.GetByIdAsync (catalogueService)'
2023-03-06 21:26:51.715 +01:00 [INF] HTTP GET /api/Users/Get single user responded 200 in 101.3524 ms
2023-03-06 21:26:51.717 +01:00 [INF] Request finished in 104.8363ms 200 application/json; charset=utf-8
2023-03-06 21:27:25.261 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:27:25.266 +01:00 [INF] Successfully validated the token.
2023-03-06 21:27:25.267 +01:00 [INF] Authorization was successful.
2023-03-06 21:27:25.267 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:27:25.268 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:27:25.273 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:27:25.285 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 16.2474ms
2023-03-06 21:27:25.285 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:27:25.285 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 200 in 22.5419 ms
2023-03-06 21:27:25.286 +01:00 [INF] Request finished in 25.1176ms 200 text/plain; charset=utf-8
2023-03-06 21:28:25.299 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:28:25.303 +01:00 [INF] Successfully validated the token.
2023-03-06 21:28:25.304 +01:00 [INF] Authorization was successful.
2023-03-06 21:28:25.305 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:28:25.306 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:32:32.292 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:32:32.509 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Students] ([Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
SELECT [regNo]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [regNo] = scope_identity();
2023-03-06 21:32:32.530 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 21:32:50.532 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:32:50.534 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 265227.9667ms
2023-03-06 21:32:50.534 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:32:50.535 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 400 in 265234.7154 ms
2023-03-06 21:32:50.535 +01:00 [INF] Request finished in 265236.9353ms 400 text/plain; charset=utf-8
2023-03-06 21:32:55.418 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/StudentProfile/Register application/json 383
2023-03-06 21:32:55.423 +01:00 [INF] Successfully validated the token.
2023-03-06 21:32:55.425 +01:00 [INF] Authorization was successful.
2023-03-06 21:32:55.425 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:32:55.426 +01:00 [INF] Route matched with {action = "AddStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:32:55.434 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:32:55.450 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 21:33:11.901 +01:00 [INF] Executed DbCommand (43ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Students] ([Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
SELECT [regNo]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [regNo] = scope_identity();
2023-03-06 21:33:28.201 +01:00 [INF] Executed DbCommand (54ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 21:34:02.287 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 21:34:03.835 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService) in 68409.0085ms
2023-03-06 21:34:03.836 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.AddStudentAsync (catalogueService)'
2023-03-06 21:34:03.836 +01:00 [INF] HTTP POST /api/StudentProfile/Register responded 200 in 68418.0525 ms
2023-03-06 21:34:03.838 +01:00 [INF] Request finished in 68420.2338ms 200 application/json; charset=utf-8
2023-03-06 21:34:31.817 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View All Students  
2023-03-06 21:34:31.852 +01:00 [INF] Successfully validated the token.
2023-03-06 21:34:31.854 +01:00 [INF] Authorization was successful.
2023-03-06 21:34:31.854 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 21:34:31.879 +01:00 [INF] Route matched with {action = "GetStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:34:31.890 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:34:31.908 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 21:34:31.936 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:34:31.952 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService) in 72.1224ms
2023-03-06 21:34:31.952 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 21:34:31.952 +01:00 [INF] HTTP GET /api/StudentProfile/View All Students responded 200 in 133.7758 ms
2023-03-06 21:34:31.954 +01:00 [INF] Request finished in 136.8641ms 200 application/json; charset=utf-8
2023-03-06 21:35:13.016 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:35:13.020 +01:00 [INF] Successfully validated the token.
2023-03-06 21:35:13.023 +01:00 [INF] Authorization was successful.
2023-03-06 21:35:13.023 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:35:13.044 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:35:31.704 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 18659.9534ms
2023-03-06 21:35:31.706 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:35:31.707 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync(Int32 programID)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 21:35:31.811 +01:00 [ERR] HTTP GET /api/StudentProfile/View Students by Programs responded 500 in 18793.9193 ms
2023-03-06 21:35:31.813 +01:00 [INF] Request finished in 18796.4065ms 500 text/plain
2023-03-06 21:36:26.103 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Available Programs  
2023-03-06 21:36:26.109 +01:00 [INF] Successfully validated the token.
2023-03-06 21:36:26.111 +01:00 [INF] Authorization was successful.
2023-03-06 21:36:26.111 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-03-06 21:36:26.125 +01:00 [INF] Route matched with {action = "GetPrograms", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProgramsAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:36:26.129 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:36:26.146 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-03-06 21:36:26.163 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.Fee, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:36:26.170 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService) in 44.4334ms
2023-03-06 21:36:26.170 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-03-06 21:36:26.171 +01:00 [INF] HTTP GET /api/StudentProfile/View Available Programs responded 200 in 67.5210 ms
2023-03-06 21:36:26.172 +01:00 [INF] Request finished in 69.1235ms 200 application/json; charset=utf-8
2023-03-06 21:37:44.495 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:37:44.498 +01:00 [INF] Successfully validated the token.
2023-03-06 21:37:44.498 +01:00 [INF] Authorization was successful.
2023-03-06 21:37:44.499 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:37:44.503 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:38:46.007 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 61503.6269ms
2023-03-06 21:38:46.008 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:38:46.008 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync(Int32 programID)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 21:38:46.026 +01:00 [ERR] HTTP GET /api/StudentProfile/View Students by Programs responded 500 in 61529.7520 ms
2023-03-06 21:38:46.028 +01:00 [INF] Request finished in 61532.5152ms 500 text/plain
2023-03-06 21:38:54.529 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=2  
2023-03-06 21:38:54.533 +01:00 [INF] Successfully validated the token.
2023-03-06 21:38:54.535 +01:00 [INF] Authorization was successful.
2023-03-06 21:38:54.536 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:38:54.537 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:39:09.076 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 14539.1006ms
2023-03-06 21:39:09.080 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:39:09.080 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync(Int32 programID)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 21:39:09.108 +01:00 [ERR] HTTP GET /api/StudentProfile/View Students by Programs responded 500 in 14578.8004 ms
2023-03-06 21:39:09.113 +01:00 [INF] Request finished in 14583.5975ms 500 text/plain
2023-03-06 21:39:21.705 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Fees/View all Program  
2023-03-06 21:39:21.713 +01:00 [INF] Successfully validated the token.
2023-03-06 21:39:21.715 +01:00 [INF] Authorization was successful.
2023-03-06 21:39:21.716 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 21:39:21.736 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Fees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.FeesController (catalogueService).
2023-03-06 21:39:21.745 +01:00 [INF] The user for this session is Mboko Emmanuel
2023-03-06 21:39:21.749 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:39:21.756 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-03-06 21:39:21.772 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.FeeModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:39:21.779 +01:00 [INF] Executed action catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService) in 42.1097ms
2023-03-06 21:39:21.779 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 21:39:21.779 +01:00 [INF] HTTP GET /api/Fees/View all Program responded 200 in 73.3304 ms
2023-03-06 21:39:21.780 +01:00 [INF] Request finished in 75.1718ms 200 application/json; charset=utf-8
2023-03-06 21:39:32.698 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Fees/View Program Fees by FeeId?id=1  
2023-03-06 21:39:32.706 +01:00 [INF] Successfully validated the token.
2023-03-06 21:39:32.707 +01:00 [INF] Authorization was successful.
2023-03-06 21:39:32.707 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.FeesController.GetByIdAsync (catalogueService)'
2023-03-06 21:39:32.722 +01:00 [INF] Route matched with {action = "GetById", controller = "Fees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetByIdAsync(Int32) on controller catalogueService.Controllers.FeesController (catalogueService).
2023-03-06 21:39:32.732 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:39:32.779 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:39:32.794 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.Models.FeeModel'.
2023-03-06 21:39:32.796 +01:00 [INF] Executed action catalogueService.Controllers.FeesController.GetByIdAsync (catalogueService) in 74.1154ms
2023-03-06 21:39:32.801 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.FeesController.GetByIdAsync (catalogueService)'
2023-03-06 21:39:32.801 +01:00 [INF] HTTP GET /api/Fees/View Program Fees by FeeId responded 200 in 101.5277 ms
2023-03-06 21:39:32.802 +01:00 [INF] Request finished in 103.8387ms 200 application/json; charset=utf-8
2023-03-06 21:42:40.265 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:42:40.272 +01:00 [INF] Successfully validated the token.
2023-03-06 21:42:40.273 +01:00 [INF] Authorization was successful.
2023-03-06 21:42:40.274 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:42:40.274 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:42:47.643 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 7368.2124ms
2023-03-06 21:42:47.650 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:42:47.653 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync(Int32 programID)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 21:42:47.662 +01:00 [ERR] HTTP GET /api/StudentProfile/View Students by Programs responded 500 in 7396.4004 ms
2023-03-06 21:42:47.669 +01:00 [INF] Request finished in 7403.9391ms 500 text/plain
2023-03-06 21:43:13.357 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-06 21:43:14.033 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-06 21:43:14.037 +01:00 [INF] Hosting environment: Development
2023-03-06 21:43:14.045 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService
2023-03-06 21:43:14.089 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 21:43:14.681 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 522.9816 ms
2023-03-06 21:43:14.712 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 21:43:14.713 +01:00 [INF] Request finished in 626.1681ms 200 text/html;charset=utf-8
2023-03-06 21:43:14.715 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 21:43:14.732 +01:00 [INF] Request finished in 19.9171ms 200 application/javascript; charset=utf-8
2023-03-06 21:43:14.787 +01:00 [INF] Request finished in 72.4527ms 200 text/javascript; charset=UTF-8
2023-03-06 21:43:14.904 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 21:43:15.407 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 502.1586 ms
2023-03-06 21:43:15.408 +01:00 [INF] Request finished in 503.3881ms 200 application/json;charset=utf-8
2023-03-06 21:43:54.587 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 70
2023-03-06 21:43:54.623 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:43:54.729 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 21:43:56.091 +01:00 [INF] Login request received is Username: mbokoemmanuel@gmail.com
2023-03-06 21:43:57.916 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:43:57.917 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:43:57.919 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:43:58.044 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:43:59.242 +01:00 [INF] Executed DbCommand (136ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 21:43:59.413 +01:00 [INF] The Username of the current user is: mbokoemmanuel@gmail.com
2023-03-06 21:43:59.413 +01:00 [INF] Username: mbokoemmanuel@gmail.com successfully logged in
2023-03-06 21:43:59.684 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:43:59.695 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 4956.7703ms
2023-03-06 21:43:59.696 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:43:59.696 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 5105.8347 ms
2023-03-06 21:43:59.705 +01:00 [INF] Request finished in 5123.1474ms 200 text/plain; charset=utf-8
2023-03-06 21:44:31.730 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:44:31.930 +01:00 [INF] Successfully validated the token.
2023-03-06 21:44:31.957 +01:00 [INF] Authorization was successful.
2023-03-06 21:44:31.958 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:44:31.978 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:44:37.065 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:44:37.127 +01:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:45:07.740 +01:00 [INF] SQL About executing Select * from  Students where program = @program
2023-03-06 21:45:08.129 +01:00 [ERR]    at System.Data.SqlClient.MetaType.GetMetaTypeFromValue(Type dataType, Object value, Boolean inferLen, Boolean streamAllowed)
   at System.Data.SqlClient.MetaType.GetMetaTypeFromType(Type dataType)
   at System.Data.SqlClient.SqlParameter.GetMetaTypeOnly()
   at System.Data.SqlClient.SqlParameter.Validate(Int32 index, Boolean isCommandProc)
   at System.Data.SqlClient.SqlCommand.BuildParamList(TdsParser parser, SqlParameterCollection parameters)
   at System.Data.SqlClient.SqlCommand.BuildExecuteSql(CommandBehavior behavior, String commandText, SqlParameterCollection parameters, _SqlRPC& rpc)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, Boolean sendToPipe, Int32 timeout, Boolean asyncWrite, String methodName)
   at System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback callback, Object stateObject)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl(Func`3 beginMethod, Func`2 endFunction, Action`1 endAction, Object state, TaskCreationOptions creationOptions)
   at System.Threading.Tasks.TaskFactory`1.FromAsync(Func`3 beginMethod, Func`2 endMethod, Object state)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at catalogueService.Repositories.SqlRepo.retrieveRecords(String CommandQuery, CommandType cmdType, SqlParameter[] param) in C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService\Repositories\SqlRepo.cs:line 75
2023-03-06 21:46:02.469 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-06 21:46:03.207 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-06 21:46:03.208 +01:00 [INF] Hosting environment: Development
2023-03-06 21:46:03.208 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService
2023-03-06 21:46:03.270 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 21:46:03.803 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 461.6372 ms
2023-03-06 21:46:03.824 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 21:46:03.831 +01:00 [INF] Request finished in 568.7542ms 200 text/html;charset=utf-8
2023-03-06 21:46:03.836 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 21:46:03.837 +01:00 [INF] Request finished in 13.3981ms 200 application/javascript; charset=utf-8
2023-03-06 21:46:03.936 +01:00 [INF] Request finished in 99.3932ms 200 text/javascript; charset=UTF-8
2023-03-06 21:46:04.046 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 21:46:04.472 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 424.6958 ms
2023-03-06 21:46:04.473 +01:00 [INF] Request finished in 426.9095ms 200 application/json;charset=utf-8
2023-03-06 21:46:24.590 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:46:25.213 +01:00 [INF] Successfully validated the token.
2023-03-06 21:46:25.229 +01:00 [INF] Authorization was successful.
2023-03-06 21:46:25.230 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:46:25.370 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:46:30.352 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:46:30.353 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:46:30.354 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:46:30.439 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:46:31.961 +01:00 [INF] Executed DbCommand (174ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:46:43.483 +01:00 [INF] SQL About executing Select * from  Students where program = @program
2023-03-06 21:46:43.810 +01:00 [INF] Method finished executing with result: 
2023-03-06 21:47:08.675 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students where program = @program
2023-03-06 21:49:37.304 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-06 21:49:38.047 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-06 21:49:38.048 +01:00 [INF] Hosting environment: Development
2023-03-06 21:49:38.048 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService
2023-03-06 21:49:38.165 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 21:49:38.793 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 561.2796 ms
2023-03-06 21:49:38.861 +01:00 [INF] Request finished in 709.3357ms 200 text/html;charset=utf-8
2023-03-06 21:49:38.868 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 21:49:38.886 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 21:49:38.905 +01:00 [INF] Request finished in 37.6661ms 200 application/javascript; charset=utf-8
2023-03-06 21:49:38.973 +01:00 [INF] Request finished in 86.9296ms 200 text/javascript; charset=UTF-8
2023-03-06 21:49:39.105 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 21:49:39.642 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 534.8147 ms
2023-03-06 21:49:39.643 +01:00 [INF] Request finished in 537.4422ms 200 application/json;charset=utf-8
2023-03-06 21:50:22.312 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 70
2023-03-06 21:50:22.348 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:50:22.498 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 21:50:23.535 +01:00 [INF] Login request received is Username: mbokoemmanuel@gmail.com
2023-03-06 21:50:24.657 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:50:24.657 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:50:24.658 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 21:50:24.718 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:50:26.163 +01:00 [INF] Executed DbCommand (121ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 21:50:26.346 +01:00 [INF] The Username of the current user is: mbokoemmanuel@gmail.com
2023-03-06 21:50:26.346 +01:00 [INF] Username: mbokoemmanuel@gmail.com successfully logged in
2023-03-06 21:50:26.673 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:50:26.686 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 4177.1486ms
2023-03-06 21:50:26.686 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 21:50:26.687 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 4372.5308 ms
2023-03-06 21:50:26.694 +01:00 [INF] Request finished in 4388.794ms 200 text/plain; charset=utf-8
2023-03-06 21:51:12.987 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View All Students  
2023-03-06 21:51:13.151 +01:00 [INF] Successfully validated the token.
2023-03-06 21:51:13.191 +01:00 [INF] Authorization was successful.
2023-03-06 21:51:13.192 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 21:51:13.207 +01:00 [INF] Route matched with {action = "GetStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:51:13.269 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:51:13.415 +01:00 [INF] Executed DbCommand (97ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 21:51:13.646 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:51:13.673 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService) in 465.0532ms
2023-03-06 21:51:13.676 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 21:51:13.677 +01:00 [INF] HTTP GET /api/StudentProfile/View All Students responded 200 in 688.0661 ms
2023-03-06 21:51:13.678 +01:00 [INF] Request finished in 693.0828ms 200 application/json; charset=utf-8
2023-03-06 21:51:59.934 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Available Programs  
2023-03-06 21:51:59.949 +01:00 [INF] Successfully validated the token.
2023-03-06 21:51:59.951 +01:00 [INF] Authorization was successful.
2023-03-06 21:51:59.952 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-03-06 21:51:59.965 +01:00 [INF] Route matched with {action = "GetPrograms", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProgramsAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:52:00.015 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:52:00.057 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-03-06 21:52:00.083 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.Fee, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:52:00.095 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService) in 129.1323ms
2023-03-06 21:52:00.095 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-03-06 21:52:00.096 +01:00 [INF] HTTP GET /api/StudentProfile/View Available Programs responded 200 in 159.3420 ms
2023-03-06 21:52:00.097 +01:00 [INF] Request finished in 163.6001ms 200 application/json; charset=utf-8
2023-03-06 21:52:29.987 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:52:29.998 +01:00 [INF] Successfully validated the token.
2023-03-06 21:52:30.004 +01:00 [INF] Authorization was successful.
2023-03-06 21:52:30.005 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:52:30.035 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:52:36.274 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:52:36.302 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:53:02.622 +01:00 [INF] SQL About executing Select * from  Students where program = @program
2023-03-06 21:53:41.208 +01:00 [INF] Method finished executing with result: 
2023-03-06 21:53:41.214 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students where program = @program
2023-03-06 21:53:41.225 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:53:41.229 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 71192.3906ms
2023-03-06 21:53:41.233 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:53:41.233 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 71244.4084 ms
2023-03-06 21:53:41.234 +01:00 [INF] Request finished in 71250.2408ms 200 text/plain; charset=utf-8
2023-03-06 21:53:53.841 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View All Students  
2023-03-06 21:53:53.848 +01:00 [INF] Successfully validated the token.
2023-03-06 21:53:53.851 +01:00 [INF] Authorization was successful.
2023-03-06 21:53:53.853 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 21:53:53.857 +01:00 [INF] Route matched with {action = "GetStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:53:53.863 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:53:53.872 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 21:53:53.922 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 21:53:53.931 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService) in 71.5002ms
2023-03-06 21:53:53.931 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 21:53:53.932 +01:00 [INF] HTTP GET /api/StudentProfile/View All Students responded 200 in 89.2032 ms
2023-03-06 21:53:53.935 +01:00 [INF] Request finished in 94.1867ms 200 application/json; charset=utf-8
2023-03-06 21:54:33.370 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:54:33.375 +01:00 [INF] Successfully validated the token.
2023-03-06 21:54:33.377 +01:00 [INF] Authorization was successful.
2023-03-06 21:54:33.377 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:54:33.380 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:54:36.581 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:54:36.638 +01:00 [INF] Executed DbCommand (44ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:55:26.294 +01:00 [INF] SQL About executing Select * from  Students where program = @program
2023-03-06 21:55:44.394 +01:00 [INF] Method finished executing with result: 
2023-03-06 21:55:44.397 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students where program = @program
2023-03-06 21:55:44.402 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:55:44.405 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 71024.304ms
2023-03-06 21:55:44.406 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:55:44.407 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 71035.6464 ms
2023-03-06 21:55:44.409 +01:00 [INF] Request finished in 71038.6477ms 200 text/plain; charset=utf-8
2023-03-06 21:56:27.406 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:56:27.410 +01:00 [INF] Successfully validated the token.
2023-03-06 21:56:27.413 +01:00 [INF] Authorization was successful.
2023-03-06 21:56:27.414 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:56:27.416 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:56:34.884 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:56:34.948 +01:00 [INF] Executed DbCommand (56ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:56:40.474 +01:00 [INF] SQL About executing Select * from  Students
2023-03-06 21:56:40.561 +01:00 [INF] Method finished executing with result: 
2023-03-06 21:56:43.303 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students
2023-03-06 21:56:56.872 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:56:56.878 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 29462.0526ms
2023-03-06 21:56:56.879 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:56:56.881 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 29473.5105 ms
2023-03-06 21:56:56.883 +01:00 [INF] Request finished in 29476.4746ms 200 text/plain; charset=utf-8
2023-03-06 21:58:05.578 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:58:05.581 +01:00 [INF] Successfully validated the token.
2023-03-06 21:58:05.585 +01:00 [INF] Authorization was successful.
2023-03-06 21:58:05.586 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:58:05.587 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:58:08.409 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:58:08.481 +01:00 [INF] Executed DbCommand (66ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:58:24.934 +01:00 [INF] SQL About executing Select * from  Students where program = Early Childhood Education
2023-03-06 21:58:25.124 +01:00 [ERR]    at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.CompleteAsyncExecuteReader()
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at catalogueService.Repositories.SqlRepo.retrieveRecords(String CommandQuery, CommandType cmdType, SqlParameter[] param)
2023-03-06 21:59:26.603 +01:00 [INF] An error occurres while retrieving student details with query: Select * from  Students where program = Early Childhood Education
2023-03-06 21:59:26.605 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 21:59:26.608 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 81021.1222ms
2023-03-06 21:59:26.609 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:59:26.610 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 81031.2669 ms
2023-03-06 21:59:26.612 +01:00 [INF] Request finished in 81033.8424ms 200 text/plain; charset=utf-8
2023-03-06 21:59:28.903 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 21:59:28.907 +01:00 [INF] Successfully validated the token.
2023-03-06 21:59:28.909 +01:00 [INF] Authorization was successful.
2023-03-06 21:59:28.909 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 21:59:28.911 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 21:59:31.320 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 21:59:31.387 +01:00 [INF] Executed DbCommand (59ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 21:59:45.171 +01:00 [INF] SQL About executing Select * from  Students where program like %'@program'%
2023-03-06 21:59:45.297 +01:00 [ERR]    at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.CompleteAsyncExecuteReader()
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at catalogueService.Repositories.SqlRepo.retrieveRecords(String CommandQuery, CommandType cmdType, SqlParameter[] param)
2023-03-06 22:00:02.283 +01:00 [INF] An error occurres while retrieving student details with query: Select * from  Students where program like %'@program'%
2023-03-06 22:00:02.288 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:00:02.291 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 33380.1308ms
2023-03-06 22:00:02.292 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:00:02.292 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 33388.3138 ms
2023-03-06 22:00:02.294 +01:00 [INF] Request finished in 33390.6232ms 200 text/plain; charset=utf-8
2023-03-06 22:00:25.916 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 22:00:25.918 +01:00 [INF] Successfully validated the token.
2023-03-06 22:00:25.922 +01:00 [INF] Authorization was successful.
2023-03-06 22:00:25.922 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:00:25.924 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:00:31.783 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:00:31.857 +01:00 [INF] Executed DbCommand (68ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 22:00:39.577 +01:00 [INF] SQL About executing Select * from  Students where program like '%@program%'
2023-03-06 22:00:39.649 +01:00 [INF] Method finished executing with result: 
2023-03-06 22:00:47.858 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students where program like '%@program%'
2023-03-06 22:01:37.886 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:01:37.889 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 71964.5312ms
2023-03-06 22:01:37.889 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:01:37.890 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 71973.5103 ms
2023-03-06 22:01:37.890 +01:00 [INF] Request finished in 71975.9917ms 200 text/plain; charset=utf-8
2023-03-06 22:01:45.002 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View All Students  
2023-03-06 22:01:45.004 +01:00 [INF] Successfully validated the token.
2023-03-06 22:01:45.006 +01:00 [INF] Authorization was successful.
2023-03-06 22:01:45.007 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 22:01:45.008 +01:00 [INF] Route matched with {action = "GetStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:01:45.012 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:01:45.021 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 22:01:45.030 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:01:45.057 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService) in 48.4227ms
2023-03-06 22:01:45.064 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 22:01:45.064 +01:00 [INF] HTTP GET /api/StudentProfile/View All Students responded 200 in 61.9515 ms
2023-03-06 22:01:45.065 +01:00 [INF] Request finished in 63.7773ms 200 application/json; charset=utf-8
2023-03-06 22:02:54.679 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 22:02:54.682 +01:00 [INF] Successfully validated the token.
2023-03-06 22:02:54.684 +01:00 [INF] Authorization was successful.
2023-03-06 22:02:54.684 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:02:54.686 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:02:57.491 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:02:57.609 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 22:03:07.292 +01:00 [INF] SQL About executing Select * from  Students where program = 'Early Child Education'
2023-03-06 22:03:07.366 +01:00 [INF] Method finished executing with result: 
2023-03-06 22:03:13.479 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students where program = 'Early Child Education'
2023-03-06 22:03:20.997 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:03:21.000 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 26313.551ms
2023-03-06 22:03:21.001 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:03:21.001 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 26321.5156 ms
2023-03-06 22:03:21.002 +01:00 [INF] Request finished in 26322.7856ms 200 text/plain; charset=utf-8
2023-03-06 22:04:42.929 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 22:04:42.933 +01:00 [INF] Successfully validated the token.
2023-03-06 22:04:42.935 +01:00 [INF] Authorization was successful.
2023-03-06 22:04:42.935 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:04:42.936 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:04:44.887 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:04:44.903 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 22:05:12.210 +01:00 [INF] SQL About executing Select * from  Students where program like '%@program%'
2023-03-06 22:06:10.924 +01:00 [INF] Method finished executing with result: 
2023-03-06 22:06:16.822 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students where program like '%@program%'
2023-03-06 22:06:29.433 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:06:29.438 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 106501.6445ms
2023-03-06 22:06:29.439 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:06:29.440 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 106510.3056 ms
2023-03-06 22:06:29.442 +01:00 [INF] Request finished in 106513.0976ms 200 text/plain; charset=utf-8
2023-03-06 22:07:52.867 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:07:52.882 +01:00 [INF] Successfully validated the token.
2023-03-06 22:07:52.883 +01:00 [INF] Authorization was successful.
2023-03-06 22:07:52.884 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:07:52.898 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:07:52.917 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:07:52.952 +01:00 [INF] Executed DbCommand (19ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-03-06 22:08:46.783 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 53884.321ms
2023-03-06 22:08:46.784 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:08:46.786 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.OrdersController.GetAllWalkDifficulties()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 22:08:46.814 +01:00 [ERR] HTTP GET /api/Orders/View Registered Payments responded 500 in 53942.2210 ms
2023-03-06 22:08:46.817 +01:00 [INF] Request finished in 53950.5675ms 500 text/plain
2023-03-06 22:10:47.039 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:10:47.046 +01:00 [INF] Successfully validated the token.
2023-03-06 22:10:47.052 +01:00 [INF] Authorization was successful.
2023-03-06 22:10:47.052 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:10:47.054 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:11:16.438 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:11:16.503 +01:00 [INF] Executed DbCommand (56ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-03-06 22:11:27.671 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 40617.03ms
2023-03-06 22:11:27.672 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:11:27.675 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.OrdersController.GetAllWalkDifficulties()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 22:11:27.690 +01:00 [ERR] HTTP GET /api/Orders/View Registered Payments responded 500 in 40650.7768 ms
2023-03-06 22:11:27.691 +01:00 [INF] Request finished in 40652.0306ms 500 text/plain
2023-03-06 22:11:30.587 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:11:30.590 +01:00 [INF] Successfully validated the token.
2023-03-06 22:11:30.592 +01:00 [INF] Authorization was successful.
2023-03-06 22:11:30.593 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:11:30.594 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:11:54.400 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:11:54.536 +01:00 [INF] Executed DbCommand (57ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-03-06 22:12:02.168 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 31573.6094ms
2023-03-06 22:12:02.169 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:12:02.170 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.OrdersController.GetAllWalkDifficulties()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 22:12:02.186 +01:00 [ERR] HTTP GET /api/Orders/View Registered Payments responded 500 in 31598.9488 ms
2023-03-06 22:12:02.187 +01:00 [INF] Request finished in 31600.2566ms 500 text/plain
2023-03-06 22:12:10.395 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:12:10.398 +01:00 [INF] Successfully validated the token.
2023-03-06 22:12:10.399 +01:00 [INF] Authorization was successful.
2023-03-06 22:12:10.399 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:12:10.400 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:16:15.769 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:16:15.780 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-03-06 22:16:16.712 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 246312.2469ms
2023-03-06 22:16:16.713 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:16:16.714 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.OrdersController.GetAllWalkDifficulties()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-03-06 22:16:16.731 +01:00 [ERR] HTTP GET /api/Orders/View Registered Payments responded 500 in 246335.6030 ms
2023-03-06 22:16:16.733 +01:00 [INF] Request finished in 246338.4267ms 500 text/plain
2023-03-06 22:16:30.230 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Customers/Get all Customers  
2023-03-06 22:16:30.236 +01:00 [INF] Successfully validated the token.
2023-03-06 22:16:30.238 +01:00 [INF] Authorization failed.
2023-03-06 22:16:30.253 +01:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-06 22:16:30.253 +01:00 [INF] HTTP GET /api/Customers/Get all Customers responded 403 in 22.3826 ms
2023-03-06 22:16:30.257 +01:00 [INF] Request finished in 27.1976ms 403 
2023-03-06 22:16:45.940 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Customers/Get Single Customer?id=1  
2023-03-06 22:16:45.945 +01:00 [INF] Successfully validated the token.
2023-03-06 22:16:45.947 +01:00 [INF] Authorization failed.
2023-03-06 22:16:45.947 +01:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-06 22:16:45.948 +01:00 [INF] HTTP GET /api/Customers/Get Single Customer responded 403 in 7.5659 ms
2023-03-06 22:16:45.950 +01:00 [INF] Request finished in 10.0546ms 403 
2023-03-06 22:17:09.615 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-03-06 22:17:09.624 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:17:09.625 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 22:17:09.634 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-03-06 22:17:09.636 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:17:09.647 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 22:17:09.649 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-03-06 22:17:09.649 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-03-06 22:17:09.651 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:17:09.660 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 34.6365ms
2023-03-06 22:17:09.660 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:17:09.660 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 44.8220 ms
2023-03-06 22:17:09.661 +01:00 [INF] Request finished in 45.9623ms 200 text/plain; charset=utf-8
2023-03-06 22:17:36.502 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Customers/Get all Customers  
2023-03-06 22:17:36.523 +01:00 [INF] Successfully validated the token.
2023-03-06 22:17:36.524 +01:00 [INF] Authorization was successful.
2023-03-06 22:17:36.524 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:17:36.536 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Customers"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.CustomersController (catalogueService).
2023-03-06 22:17:36.541 +01:00 [INF] This User mbokodavid@gmail.com is a SUPER ADMIN
2023-03-06 22:17:36.544 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:17:36.559 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
2023-03-06 22:17:36.585 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.customerModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:17:36.590 +01:00 [INF] Executed action catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService) in 53.6357ms
2023-03-06 22:17:36.590 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:17:36.593 +01:00 [INF] HTTP GET /api/Customers/Get all Customers responded 200 in 71.4907 ms
2023-03-06 22:17:36.594 +01:00 [INF] Request finished in 91.5757ms 200 application/json; charset=utf-8
2023-03-06 22:19:33.856 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:19:33.858 +01:00 [INF] Successfully validated the token.
2023-03-06 22:19:33.859 +01:00 [INF] Authorization was successful.
2023-03-06 22:19:33.859 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:19:33.860 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:19:38.481 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:19:38.561 +01:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
2023-03-06 22:19:49.794 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.orderModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:19:52.433 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 18565.2149ms
2023-03-06 22:19:52.434 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:19:52.434 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 18577.8832 ms
2023-03-06 22:19:52.434 +01:00 [INF] Request finished in 18578.9826ms 200 application/json; charset=utf-8
2023-03-06 22:29:47.017 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Customers/Get all Customers  
2023-03-06 22:29:47.020 +01:00 [INF] Successfully validated the token.
2023-03-06 22:29:47.024 +01:00 [INF] Authorization was successful.
2023-03-06 22:29:47.024 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:29:47.026 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Customers"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.CustomersController (catalogueService).
2023-03-06 22:29:47.029 +01:00 [INF] This User mbokodavid@gmail.com is a SUPER ADMIN
2023-03-06 22:29:47.041 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:29:47.152 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
2023-03-06 22:29:47.158 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.customerModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:29:47.160 +01:00 [INF] Executed action catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService) in 133.4061ms
2023-03-06 22:29:47.160 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:29:47.161 +01:00 [INF] HTTP GET /api/Customers/Get all Customers responded 200 in 143.2489 ms
2023-03-06 22:29:47.162 +01:00 [INF] Request finished in 144.7947ms 200 application/json; charset=utf-8
2023-03-06 22:32:25.228 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Users application/json 188
2023-03-06 22:32:25.232 +01:00 [INF] Successfully validated the token.
2023-03-06 22:32:25.234 +01:00 [INF] Authorization was successful.
2023-03-06 22:32:25.234 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:32:25.255 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.userRequest) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 22:32:25.288 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:32:25.544 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (DbType = Int32), @p7='?' (Size = 4000), @p8='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([firstName], [lastName], [locationId], [password], [phoneNumber], [role], [typeId], [userName], [wallet])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [userId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [userId] = scope_identity();
2023-03-06 22:32:25.643 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 22:32:25.646 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService) in 390.6726ms
2023-03-06 22:32:25.646 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:32:25.649 +01:00 [INF] HTTP POST /api/Users responded 200 in 418.6135 ms
2023-03-06 22:32:25.650 +01:00 [INF] Request finished in 421.6565ms 200 application/json; charset=utf-8
2023-03-06 22:32:47.304 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Customers/Get all Customers  
2023-03-06 22:32:47.307 +01:00 [INF] Successfully validated the token.
2023-03-06 22:32:47.308 +01:00 [INF] Authorization was successful.
2023-03-06 22:32:47.308 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:32:47.310 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Customers"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.CustomersController (catalogueService).
2023-03-06 22:32:47.311 +01:00 [INF] This User mbokodavid@gmail.com is a SUPER ADMIN
2023-03-06 22:32:47.324 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:32:47.340 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
2023-03-06 22:32:47.349 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.customerModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:32:47.352 +01:00 [INF] Executed action catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService) in 41.3067ms
2023-03-06 22:32:47.352 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:32:47.352 +01:00 [INF] HTTP GET /api/Customers/Get all Customers responded 200 in 47.6084 ms
2023-03-06 22:32:47.353 +01:00 [INF] Request finished in 48.6141ms 200 application/json; charset=utf-8
2023-03-06 22:33:36.353 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-06 22:33:37.065 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-06 22:33:37.065 +01:00 [INF] Hosting environment: Development
2023-03-06 22:33:37.065 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService
2023-03-06 22:33:37.179 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 22:33:37.815 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 571.2715 ms
2023-03-06 22:33:37.846 +01:00 [INF] Request finished in 676.3461ms 200 text/html;charset=utf-8
2023-03-06 22:33:37.902 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 22:33:37.903 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 22:33:37.932 +01:00 [INF] Request finished in 28.7171ms 200 application/javascript; charset=utf-8
2023-03-06 22:33:37.969 +01:00 [INF] Request finished in 67.3994ms 200 text/javascript; charset=UTF-8
2023-03-06 22:33:38.082 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 22:33:38.570 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 487.5838 ms
2023-03-06 22:33:38.571 +01:00 [INF] Request finished in 489.2855ms 200 application/json;charset=utf-8
2023-03-06 22:34:19.157 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-03-06 22:34:19.187 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:34:19.254 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 22:34:20.147 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-03-06 22:34:21.592 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 22:34:21.593 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 22:34:21.593 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 22:34:21.651 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:34:23.210 +01:00 [INF] Executed DbCommand (183ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 22:34:23.495 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-03-06 22:34:23.495 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-03-06 22:34:23.805 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:34:23.818 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 4553.1083ms
2023-03-06 22:34:23.819 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:34:23.819 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 4660.1727 ms
2023-03-06 22:34:23.826 +01:00 [INF] Request finished in 4674.3625ms 200 text/plain; charset=utf-8
2023-03-06 22:36:35.769 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Users application/json 221
2023-03-06 22:36:35.892 +01:00 [INF] Successfully validated the token.
2023-03-06 22:36:35.910 +01:00 [INF] Authorization was successful.
2023-03-06 22:36:35.913 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:36:35.940 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.userRequest) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 22:36:35.964 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-03-06 22:36:35.973 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService) in 32.1647ms
2023-03-06 22:36:35.973 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:36:35.973 +01:00 [INF] HTTP POST /api/Users responded 400 in 201.4893 ms
2023-03-06 22:36:35.974 +01:00 [INF] Request finished in 206.1128ms 400 application/problem+json; charset=utf-8
2023-03-06 22:36:56.158 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Users application/json 184
2023-03-06 22:36:56.166 +01:00 [INF] Successfully validated the token.
2023-03-06 22:36:56.169 +01:00 [INF] Authorization was successful.
2023-03-06 22:36:56.170 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:36:56.172 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.userRequest) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 22:36:56.277 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:36:56.624 +01:00 [INF] Executed DbCommand (39ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (DbType = Int32), @p7='?' (Size = 4000), @p8='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([firstName], [lastName], [locationId], [password], [phoneNumber], [role], [typeId], [userName], [wallet])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [userId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [userId] = scope_identity();
2023-03-06 22:36:56.788 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Customers] ([_usersuserId], [firstName], [lastName], [phoneNumber], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [customerId]
FROM [Customers]
WHERE @@ROWCOUNT = 1 AND [customerId] = scope_identity();
2023-03-06 22:36:56.810 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 22:36:56.817 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService) in 644.5506ms
2023-03-06 22:36:56.818 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:36:56.819 +01:00 [INF] HTTP POST /api/Users responded 200 in 658.7422 ms
2023-03-06 22:36:56.819 +01:00 [INF] Request finished in 661.8518ms 200 application/json; charset=utf-8
2023-03-06 22:39:03.491 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 66
2023-03-06 22:39:03.500 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:39:03.503 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 22:39:03.512 +01:00 [INF] Login request received is Username: mbokomary@gmail.com
2023-03-06 22:39:03.548 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:39:03.563 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 22:39:03.565 +01:00 [INF] The Username of the current user is: mbokomary@gmail.com
2023-03-06 22:39:03.565 +01:00 [INF] Username: mbokomary@gmail.com successfully logged in
2023-03-06 22:39:03.567 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:39:03.569 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 65.6783ms
2023-03-06 22:39:03.570 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:39:03.570 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 73.8996 ms
2023-03-06 22:39:03.571 +01:00 [INF] Request finished in 85.1092ms 200 text/plain; charset=utf-8
2023-03-06 22:39:43.732 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:39:43.743 +01:00 [INF] Successfully validated the token.
2023-03-06 22:39:43.746 +01:00 [INF] Authorization was successful.
2023-03-06 22:39:43.747 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:39:43.755 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:39:54.933 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:39:54.970 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-03-06 22:40:06.864 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-03-06 22:40:07.163 +01:00 [INF] Method finished executing with result: 
2023-03-06 22:43:02.028 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-03-06 22:43:05.249 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:43:05.250 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 201494.8018ms
2023-03-06 22:43:05.250 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:43:05.251 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 201517.0697 ms
2023-03-06 22:43:05.254 +01:00 [INF] Request finished in 201522.0271ms 200 text/plain; charset=utf-8
2023-03-06 22:43:12.393 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:43:12.403 +01:00 [INF] Successfully validated the token.
2023-03-06 22:43:12.409 +01:00 [INF] Authorization was successful.
2023-03-06 22:43:12.410 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:43:12.412 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:43:21.335 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:43:21.398 +01:00 [INF] Executed DbCommand (55ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-03-06 22:43:27.645 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-03-06 22:43:27.703 +01:00 [INF] Method finished executing with result: 
2023-03-06 22:43:30.220 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-03-06 22:43:34.943 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:43:34.947 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 22533.7731ms
2023-03-06 22:43:34.947 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:43:34.948 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 22552.4305 ms
2023-03-06 22:43:34.949 +01:00 [INF] Request finished in 22556.2523ms 200 text/plain; charset=utf-8
2023-03-06 22:43:59.268 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Fees/View all Program  
2023-03-06 22:43:59.273 +01:00 [INF] Successfully validated the token.
2023-03-06 22:43:59.275 +01:00 [INF] Authorization was successful.
2023-03-06 22:43:59.275 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:43:59.319 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Fees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.FeesController (catalogueService).
2023-03-06 22:43:59.329 +01:00 [INF] The user for this session is Mboko Mary
2023-03-06 22:43:59.339 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:43:59.377 +01:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-03-06 22:44:17.319 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.FeeModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:44:17.326 +01:00 [INF] Executed action catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService) in 18006.6675ms
2023-03-06 22:44:17.328 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:44:17.333 +01:00 [INF] HTTP GET /api/Fees/View all Program responded 200 in 18064.5501 ms
2023-03-06 22:44:17.334 +01:00 [INF] Request finished in 18066.2512ms 200 application/json; charset=utf-8
2023-03-06 22:44:55.390 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-03-06 22:44:55.399 +01:00 [INF] Successfully validated the token.
2023-03-06 22:44:55.410 +01:00 [INF] Authorization was successful.
2023-03-06 22:44:55.412 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:44:55.432 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:44:55.468 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-03-06 22:44:55.476 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:44:55.495 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-03-06 22:44:55.515 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 22:44:55.540 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 22:44:55.625 +01:00 [INF] Executed DbCommand (21ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-03-06 22:44:55.638 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-03-06 22:44:55.639 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 22:44:55.645 +01:00 [INF] SQL Successfully with result affected: 1
2023-03-06 22:44:55.656 +01:00 [INF] Order successfully placed with order ID of 8
2023-03-06 22:44:55.657 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 22:44:55.659 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 225.5689ms
2023-03-06 22:44:55.659 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-03-06 22:44:55.660 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 267.1603 ms
2023-03-06 22:44:55.662 +01:00 [INF] Request finished in 272.499ms 200 application/json; charset=utf-8
2023-03-06 22:45:10.823 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-03-06 22:45:10.827 +01:00 [INF] Successfully validated the token.
2023-03-06 22:45:10.828 +01:00 [INF] Authorization was successful.
2023-03-06 22:45:10.830 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:45:10.831 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:45:15.862 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:45:15.921 +01:00 [INF] Executed DbCommand (55ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-03-06 22:45:19.873 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-03-06 22:45:19.960 +01:00 [INF] Method finished executing with result: 
2023-03-06 22:45:24.044 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-03-06 22:45:34.069 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:45:34.073 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 23240.9731ms
2023-03-06 22:45:34.073 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 22:45:34.073 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 23250.1156 ms
2023-03-06 22:45:34.075 +01:00 [INF] Request finished in 23251.6988ms 200 text/plain; charset=utf-8
2023-03-06 22:45:51.100 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=8  0
2023-03-06 22:45:51.104 +01:00 [INF] Successfully validated the token.
2023-03-06 22:45:51.105 +01:00 [INF] Authorization was successful.
2023-03-06 22:45:51.105 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 22:45:51.120 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 22:45:51.383 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:45:51.424 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-03-06 22:45:51.439 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 22:45:51.445 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 22:45:51.452 +01:00 [INF] SQL About executing Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-03-06 22:45:51.462 +01:00 [INF] Sales table successfully updated for query: Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-03-06 22:45:51.465 +01:00 [INF] SQL About executing Update users set wallet = @wallet where userId = @userId
2023-03-06 22:45:51.473 +01:00 [INF] Customer's wallet successfully updated for query: Update users set wallet = @wallet where userId = @userId
2023-03-06 22:45:51.474 +01:00 [INF] SQL About executing Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 22:45:51.484 +01:00 [INF] Order status successfully updated for query: Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 22:45:51.497 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__orderId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__orderId_0
2023-03-06 22:45:51.499 +01:00 [INF] SQL About executing Update Fees set quantity = @quantity where FeeID = @FeeID
2023-03-06 22:45:51.503 +01:00 [INF] Slots left successfully updated for query: Update Fees set quantity = @quantity where FeeID = @FeeID
2023-03-06 22:45:51.504 +01:00 [INF] About generating reciept for customer: 3
2023-03-06 22:45:52.377 +01:00 [INF] Payment successfully made for the orderID: 8
2023-03-06 22:45:52.386 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:45:52.410 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 1289.8128ms
2023-03-06 22:45:52.411 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 22:45:52.411 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 1311.0139 ms
2023-03-06 22:45:52.417 +01:00 [INF] Request finished in 1317.723ms 200 text/plain; charset=utf-8
2023-03-06 22:46:17.701 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Students by Programs?programID=1  
2023-03-06 22:46:17.705 +01:00 [INF] Successfully validated the token.
2023-03-06 22:46:17.706 +01:00 [INF] Authorization was successful.
2023-03-06 22:46:17.707 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:46:17.724 +01:00 [INF] Route matched with {action = "GetStudentByProgram", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentByProgramAsync(Int32) on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:46:28.010 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:46:28.022 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 22:46:30.036 +01:00 [INF] SQL About executing Select * from  Students where program like '%@program%'
2023-03-06 22:46:30.084 +01:00 [INF] Method finished executing with result: 
2023-03-06 22:46:31.582 +01:00 [INF] Students table successfully retrieved for query: Select * from  Students where program like '%@program%'
2023-03-06 22:47:26.671 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:47:26.680 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService) in 68955.1895ms
2023-03-06 22:47:26.680 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentByProgramAsync (catalogueService)'
2023-03-06 22:47:26.680 +01:00 [INF] HTTP GET /api/StudentProfile/View Students by Programs responded 200 in 68978.6932 ms
2023-03-06 22:47:26.682 +01:00 [INF] Request finished in 68984.245ms 200 text/plain; charset=utf-8
2023-03-06 22:47:37.300 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View All Students  
2023-03-06 22:47:37.310 +01:00 [INF] Successfully validated the token.
2023-03-06 22:47:37.339 +01:00 [INF] Authorization was successful.
2023-03-06 22:47:37.349 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 22:47:37.359 +01:00 [INF] Route matched with {action = "GetStudent", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:47:37.367 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:47:37.396 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 22:47:37.489 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:47:37.513 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService) in 152.8491ms
2023-03-06 22:47:37.515 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetStudentAsync (catalogueService)'
2023-03-06 22:47:37.516 +01:00 [INF] HTTP GET /api/StudentProfile/View All Students responded 200 in 215.2325 ms
2023-03-06 22:47:37.516 +01:00 [INF] Request finished in 216.5013ms 200 application/json; charset=utf-8
2023-03-06 22:48:46.458 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Available Programs  
2023-03-06 22:48:46.461 +01:00 [INF] Successfully validated the token.
2023-03-06 22:48:46.462 +01:00 [INF] Authorization was successful.
2023-03-06 22:48:46.462 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-03-06 22:48:46.491 +01:00 [INF] Route matched with {action = "GetPrograms", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProgramsAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:48:46.502 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:48:46.509 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-03-06 22:48:46.513 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.Fee, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:48:46.518 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService) in 25.9869ms
2023-03-06 22:48:46.518 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-03-06 22:48:46.518 +01:00 [INF] HTTP GET /api/StudentProfile/View Available Programs responded 200 in 59.7445 ms
2023-03-06 22:48:46.519 +01:00 [INF] Request finished in 61.3668ms 200 application/json; charset=utf-8
2023-03-06 22:49:09.754 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Available Courses  
2023-03-06 22:49:09.758 +01:00 [INF] Successfully validated the token.
2023-03-06 22:49:09.760 +01:00 [INF] Authorization was successful.
2023-03-06 22:49:09.760 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetCoursesAsync (catalogueService)'
2023-03-06 22:49:09.771 +01:00 [INF] Route matched with {action = "GetCourses", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCoursesAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:49:09.775 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:49:09.792 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[courseId], [c].[courseTitle], [c].[createdOn], [c].[programId]
FROM [Courses] AS [c]
2023-03-06 22:49:09.821 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.DBsets.Course, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:49:09.844 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetCoursesAsync (catalogueService) in 70.8082ms
2023-03-06 22:49:09.848 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetCoursesAsync (catalogueService)'
2023-03-06 22:49:09.853 +01:00 [INF] HTTP GET /api/StudentProfile/View Available Courses responded 200 in 94.2400 ms
2023-03-06 22:49:09.854 +01:00 [INF] Request finished in 100.3915ms 200 application/json; charset=utf-8
2023-03-06 22:50:05.917 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Available Exams  
2023-03-06 22:50:05.921 +01:00 [INF] Successfully validated the token.
2023-03-06 22:50:05.923 +01:00 [INF] Authorization was successful.
2023-03-06 22:50:05.924 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetExamsAsync (catalogueService)'
2023-03-06 22:50:05.975 +01:00 [INF] Route matched with {action = "GetExams", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetExamsAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-03-06 22:50:05.986 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:50:06.005 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[examId], [e].[examDescription], [e].[examName], [e].[invigilator], [e].[passScore]
FROM [Exams] AS [e]
2023-03-06 22:50:06.016 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.DBsets.Exam, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:50:06.021 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetExamsAsync (catalogueService) in 45.665ms
2023-03-06 22:50:06.021 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetExamsAsync (catalogueService)'
2023-03-06 22:50:06.022 +01:00 [INF] HTTP GET /api/StudentProfile/View Available Exams responded 200 in 104.3339 ms
2023-03-06 22:50:06.023 +01:00 [INF] Request finished in 106.1866ms 200 application/json; charset=utf-8
2023-03-06 22:57:27.468 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-06 22:57:28.088 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-06 22:57:28.088 +01:00 [INF] Hosting environment: Development
2023-03-06 22:57:28.088 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService
2023-03-06 22:57:28.133 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 22:57:28.776 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 580.4413 ms
2023-03-06 22:57:28.783 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 22:57:28.796 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 22:57:28.803 +01:00 [INF] Request finished in 19.8776ms 200 application/javascript; charset=utf-8
2023-03-06 22:57:28.819 +01:00 [INF] Request finished in 673.4144ms 200 text/html;charset=utf-8
2023-03-06 22:57:28.943 +01:00 [INF] Request finished in 147.2932ms 200 text/javascript; charset=UTF-8
2023-03-06 22:57:29.066 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 22:57:29.614 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 547.7032 ms
2023-03-06 22:57:29.615 +01:00 [INF] Request finished in 549.3777ms 200 application/json;charset=utf-8
2023-03-06 22:58:44.844 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-03-06 22:58:44.876 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:58:44.969 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 22:58:45.985 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-03-06 22:58:47.645 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 22:58:47.646 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 22:58:47.646 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 22:58:47.724 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:58:49.305 +01:00 [INF] Executed DbCommand (118ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 22:58:49.488 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-03-06 22:58:49.489 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-03-06 22:58:49.805 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 22:58:49.820 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 4840.7676ms
2023-03-06 22:58:49.821 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 22:58:49.821 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 4971.7309 ms
2023-03-06 22:58:49.832 +01:00 [INF] Request finished in 4993.1339ms 200 text/plain; charset=utf-8
2023-03-06 22:59:10.914 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Admins  
2023-03-06 22:59:11.087 +01:00 [INF] Successfully validated the token.
2023-03-06 22:59:11.104 +01:00 [INF] Authorization was successful.
2023-03-06 22:59:11.104 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService)'
2023-03-06 22:59:11.123 +01:00 [INF] Route matched with {action = "GetAdmin", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAdminAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 22:59:11.255 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:59:11.349 +01:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[adminID], [a].[Address], [a].[_usersuserId], [a].[accessLevel], [a].[certifications], [a].[dateOfBirth], [a].[department], [a].[departmentalRole], [a].[emailAddress], [a].[employmentStatus], [a].[firstName], [a].[gender], [a].[hireDate], [a].[isAdmin], [a].[lastName], [a].[phoneNo], [a].[userId], [a].[yearsOfExperience]
FROM [Admins] AS [a]
2023-03-06 22:59:11.500 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.adminModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 22:59:11.515 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService) in 391.4454ms
2023-03-06 22:59:11.516 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService)'
2023-03-06 22:59:11.517 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Admins responded 200 in 601.8582 ms
2023-03-06 22:59:11.518 +01:00 [INF] Request finished in 604.1292ms 200 application/json; charset=utf-8
2023-03-06 22:59:38.727 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Admins  
2023-03-06 22:59:38.745 +01:00 [INF] Successfully validated the token.
2023-03-06 22:59:38.752 +01:00 [INF] Authorization was successful.
2023-03-06 22:59:38.753 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService)'
2023-03-06 22:59:38.754 +01:00 [INF] Route matched with {action = "GetAdmin", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAdminAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 22:59:42.349 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 22:59:42.389 +01:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[adminID], [a].[Address], [a].[_usersuserId], [a].[accessLevel], [a].[certifications], [a].[dateOfBirth], [a].[department], [a].[departmentalRole], [a].[emailAddress], [a].[employmentStatus], [a].[firstName], [a].[gender], [a].[hireDate], [a].[isAdmin], [a].[lastName], [a].[phoneNo], [a].[userId], [a].[yearsOfExperience]
FROM [Admins] AS [a]
2023-03-06 23:00:15.158 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.adminModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:00:15.162 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService) in 36407.7353ms
2023-03-06 23:00:15.163 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService)'
2023-03-06 23:00:15.163 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Admins responded 200 in 36434.1958 ms
2023-03-06 23:00:15.164 +01:00 [INF] Request finished in 36438.4793ms 200 application/json; charset=utf-8
2023-03-06 23:02:13.647 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add new Admin application/json 360
2023-03-06 23:02:13.653 +01:00 [INF] Successfully validated the token.
2023-03-06 23:02:13.659 +01:00 [INF] Authorization was successful.
2023-03-06 23:02:13.659 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddAdminAsync (catalogueService)'
2023-03-06 23:02:13.673 +01:00 [INF] Route matched with {action = "AddAdmin", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddAdminAsync(catalogueService.requestETresponse.adminRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:02:13.725 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:02:14.145 +01:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Admins] ([Address], [_usersuserId], [accessLevel], [certifications], [dateOfBirth], [department], [departmentalRole], [emailAddress], [employmentStatus], [firstName], [gender], [hireDate], [isAdmin], [lastName], [phoneNo], [userId], [yearsOfExperience])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
SELECT [adminID]
FROM [Admins]
WHERE @@ROWCOUNT = 1 AND [adminID] = scope_identity();
2023-03-06 23:02:14.352 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 23:02:14.357 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddAdminAsync (catalogueService) in 683.1268ms
2023-03-06 23:02:14.358 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddAdminAsync (catalogueService)'
2023-03-06 23:02:14.358 +01:00 [INF] HTTP POST /api/AdminProfile/Add new Admin responded 200 in 710.3971 ms
2023-03-06 23:02:14.359 +01:00 [INF] Request finished in 713.7085ms 200 application/json; charset=utf-8
2023-03-06 23:02:29.237 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Admins  
2023-03-06 23:02:29.243 +01:00 [INF] Successfully validated the token.
2023-03-06 23:02:29.245 +01:00 [INF] Authorization was successful.
2023-03-06 23:02:29.246 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService)'
2023-03-06 23:02:29.247 +01:00 [INF] Route matched with {action = "GetAdmin", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAdminAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:02:34.131 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:02:34.141 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[adminID], [a].[Address], [a].[_usersuserId], [a].[accessLevel], [a].[certifications], [a].[dateOfBirth], [a].[department], [a].[departmentalRole], [a].[emailAddress], [a].[employmentStatus], [a].[firstName], [a].[gender], [a].[hireDate], [a].[isAdmin], [a].[lastName], [a].[phoneNo], [a].[userId], [a].[yearsOfExperience]
FROM [Admins] AS [a]
2023-03-06 23:02:34.152 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.adminModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:02:34.161 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService) in 4914.0781ms
2023-03-06 23:02:34.166 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetAdminAsync (catalogueService)'
2023-03-06 23:02:34.166 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Admins responded 200 in 4926.8916 ms
2023-03-06 23:02:34.169 +01:00 [INF] Request finished in 4929.6016ms 200 application/json; charset=utf-8
2023-03-06 23:02:46.071 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-03-06 23:02:46.076 +01:00 [INF] Successfully validated the token.
2023-03-06 23:02:46.079 +01:00 [INF] Authorization was successful.
2023-03-06 23:02:46.081 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-03-06 23:02:46.116 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:02:46.132 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:02:46.175 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 23:02:46.227 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:02:46.237 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 119.6361ms
2023-03-06 23:02:46.238 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-03-06 23:02:46.241 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 165.3319 ms
2023-03-06 23:02:46.243 +01:00 [INF] Request finished in 171.8649ms 200 application/json; charset=utf-8
2023-03-06 23:03:20.869 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Fees/View all Program  
2023-03-06 23:03:20.919 +01:00 [INF] Successfully validated the token.
2023-03-06 23:03:20.920 +01:00 [INF] Authorization was successful.
2023-03-06 23:03:20.920 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:03:20.931 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Fees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.FeesController (catalogueService).
2023-03-06 23:03:20.937 +01:00 [INF] The user for this session is Mboko David
2023-03-06 23:03:20.942 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:03:20.964 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-03-06 23:03:20.992 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.FeeModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:03:20.997 +01:00 [INF] Executed action catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService) in 66.025ms
2023-03-06 23:03:20.997 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:03:20.998 +01:00 [INF] HTTP GET /api/Fees/View all Program responded 200 in 124.6700 ms
2023-03-06 23:03:21.000 +01:00 [INF] Request finished in 134.8287ms 200 application/json; charset=utf-8
2023-03-06 23:09:54.760 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Student application/json 376
2023-03-06 23:09:54.765 +01:00 [INF] Successfully validated the token.
2023-03-06 23:09:54.768 +01:00 [INF] Authorization was successful.
2023-03-06 23:09:54.773 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-03-06 23:09:54.821 +01:00 [INF] Route matched with {action = "AddStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:09:54.867 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:09:54.986 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:09:55.089 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Students] ([Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
SELECT [regNo]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [regNo] = scope_identity();
2023-03-06 23:09:55.118 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:09:55.120 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService) in 293.4335ms
2023-03-06 23:09:55.120 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-03-06 23:09:55.122 +01:00 [INF] HTTP POST /api/AdminProfile/Add Student responded 200 in 361.0027 ms
2023-03-06 23:09:55.123 +01:00 [INF] Request finished in 362.7002ms 200 text/plain; charset=utf-8
2023-03-06 23:10:05.171 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Student application/json 376
2023-03-06 23:10:05.175 +01:00 [INF] Successfully validated the token.
2023-03-06 23:10:05.177 +01:00 [INF] Authorization was successful.
2023-03-06 23:10:05.178 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-03-06 23:10:05.179 +01:00 [INF] Route matched with {action = "AddStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:10:05.188 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:10:05.250 +01:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:10:05.274 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Students] ([Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
SELECT [regNo]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [regNo] = scope_identity();
2023-03-06 23:10:05.291 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:10:05.292 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService) in 112.5096ms
2023-03-06 23:10:05.293 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-03-06 23:10:05.293 +01:00 [INF] HTTP POST /api/AdminProfile/Add Student responded 200 in 121.2502 ms
2023-03-06 23:10:05.295 +01:00 [INF] Request finished in 123.5007ms 200 text/plain; charset=utf-8
2023-03-06 23:12:23.372 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Student application/json 376
2023-03-06 23:12:23.377 +01:00 [INF] Successfully validated the token.
2023-03-06 23:12:23.380 +01:00 [INF] Authorization was successful.
2023-03-06 23:12:23.381 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-03-06 23:12:23.382 +01:00 [INF] Route matched with {action = "AddStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:12:23.404 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:12:23.414 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:25:04.477 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 23:25:18.915 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:25:18.918 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService) in 775534.9723ms
2023-03-06 23:25:18.919 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-03-06 23:25:18.919 +01:00 [INF] HTTP POST /api/AdminProfile/Add Student responded 200 in 775546.7594 ms
2023-03-06 23:25:18.920 +01:00 [INF] Request finished in 775548.5336ms 200 text/plain; charset=utf-8
2023-03-06 23:30:01.708 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Teacher application/json 379
2023-03-06 23:30:01.714 +01:00 [INF] Successfully validated the token.
2023-03-06 23:30:01.716 +01:00 [INF] Authorization was successful.
2023-03-06 23:30:01.716 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService)'
2023-03-06 23:30:01.741 +01:00 [INF] Route matched with {action = "AddTeacher", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTeacherAsync(catalogueService.requestETresponse.teacherRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:30:01.767 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:30:01.792 +01:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:30:01.821 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 23:30:01.876 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Teachers] ([Address], [_usersuserId], [classSchedule], [courseList], [dateOfBirth], [educationLevel], [emailAddress], [employmentStatus], [firstName], [gender], [lastName], [phoneNo], [registrationDate], [subjectTaught], [userId], [yearsOfExperience])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15);
SELECT [teacherID]
FROM [Teachers]
WHERE @@ROWCOUNT = 1 AND [teacherID] = scope_identity();
2023-03-06 23:30:01.922 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:30:01.924 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService) in 182.764ms
2023-03-06 23:30:01.925 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService)'
2023-03-06 23:30:01.925 +01:00 [INF] HTTP POST /api/AdminProfile/Add Teacher responded 200 in 213.2591 ms
2023-03-06 23:30:01.926 +01:00 [INF] Request finished in 218.9606ms 200 text/plain; charset=utf-8
2023-03-06 23:31:02.573 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Teacher application/json 379
2023-03-06 23:31:02.577 +01:00 [INF] Successfully validated the token.
2023-03-06 23:31:02.585 +01:00 [INF] Authorization was successful.
2023-03-06 23:31:02.586 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService)'
2023-03-06 23:31:02.586 +01:00 [INF] Route matched with {action = "AddTeacher", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTeacherAsync(catalogueService.requestETresponse.teacherRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:31:02.624 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:31:02.651 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:31:02.684 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 23:31:02.710 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Teachers] ([Address], [_usersuserId], [classSchedule], [courseList], [dateOfBirth], [educationLevel], [emailAddress], [employmentStatus], [firstName], [gender], [lastName], [phoneNo], [registrationDate], [subjectTaught], [userId], [yearsOfExperience])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15);
SELECT [teacherID]
FROM [Teachers]
WHERE @@ROWCOUNT = 1 AND [teacherID] = scope_identity();
2023-03-06 23:31:02.714 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:31:02.715 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService) in 128.6321ms
2023-03-06 23:31:02.716 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService)'
2023-03-06 23:31:02.716 +01:00 [INF] HTTP POST /api/AdminProfile/Add Teacher responded 200 in 142.0352 ms
2023-03-06 23:31:02.717 +01:00 [INF] Request finished in 143.4475ms 200 text/plain; charset=utf-8
2023-03-06 23:31:13.038 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Teacher application/json 379
2023-03-06 23:31:13.041 +01:00 [INF] Successfully validated the token.
2023-03-06 23:31:13.042 +01:00 [INF] Authorization was successful.
2023-03-06 23:31:13.043 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService)'
2023-03-06 23:31:13.044 +01:00 [INF] Route matched with {action = "AddTeacher", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTeacherAsync(catalogueService.requestETresponse.teacherRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:31:13.051 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:31:13.056 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:31:13.063 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 23:31:13.076 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Teachers] ([Address], [_usersuserId], [classSchedule], [courseList], [dateOfBirth], [educationLevel], [emailAddress], [employmentStatus], [firstName], [gender], [lastName], [phoneNo], [registrationDate], [subjectTaught], [userId], [yearsOfExperience])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15);
SELECT [teacherID]
FROM [Teachers]
WHERE @@ROWCOUNT = 1 AND [teacherID] = scope_identity();
2023-03-06 23:31:13.091 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:31:13.093 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService) in 48.6029ms
2023-03-06 23:31:13.094 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddTeacherAsync (catalogueService)'
2023-03-06 23:31:13.095 +01:00 [INF] HTTP POST /api/AdminProfile/Add Teacher responded 200 in 57.1241 ms
2023-03-06 23:31:13.096 +01:00 [INF] Request finished in 58.4826ms 200 text/plain; charset=utf-8
2023-03-06 23:35:28.203 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Teacher application/json 379
2023-03-06 23:35:28.213 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-03-06 23:35:28.248 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2023-03-06 23:35:28.249 +01:00 [INF] Authorization failed.
2023-03-06 23:35:28.259 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-06 23:35:28.260 +01:00 [INF] HTTP POST /api/AdminProfile/Add Teacher responded 401 in 55.1620 ms
2023-03-06 23:35:28.262 +01:00 [INF] Request finished in 58.1013ms 401 
2023-03-06 23:36:18.473 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Withdraw a Student?regNo=3  0
2023-03-06 23:36:18.475 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-03-06 23:36:18.476 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2023-03-06 23:36:18.477 +01:00 [INF] Authorization failed.
2023-03-06 23:36:18.477 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-06 23:36:18.478 +01:00 [INF] HTTP POST /api/AdminProfile/Withdraw a Student responded 401 in 4.5502 ms
2023-03-06 23:36:18.479 +01:00 [INF] Request finished in 6.2316ms 401 
2023-03-06 23:36:52.016 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-03-06 23:36:52.018 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 23:36:52.033 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-03-06 23:36:52.042 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-03-06 23:36:52.043 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:36:52.118 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-03-06 23:36:52.119 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-03-06 23:36:52.119 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-03-06 23:36:52.121 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:36:52.126 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 92.4486ms
2023-03-06 23:36:52.126 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-03-06 23:36:52.126 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 109.4514 ms
2023-03-06 23:36:52.127 +01:00 [INF] Request finished in 111.3605ms 200 text/plain; charset=utf-8
2023-03-06 23:37:43.927 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Assign Role application/json 23
2023-03-06 23:37:43.928 +01:00 [INF] Successfully validated the token.
2023-03-06 23:37:43.929 +01:00 [INF] Authorization was successful.
2023-03-06 23:37:43.929 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.roleAssignmentAsync (catalogueService)'
2023-03-06 23:37:43.937 +01:00 [INF] Route matched with {action = "roleAssignment", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] roleAssignmentAsync(catalogueService.requestETresponse.roleRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:37:43.946 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:37:43.955 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:37:43.996 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [role] = @p0
WHERE [userId] = @p1;
SELECT @@ROWCOUNT;
2023-03-06 23:37:44.001 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 23:37:44.002 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.roleAssignmentAsync (catalogueService) in 64.7692ms
2023-03-06 23:37:44.002 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.roleAssignmentAsync (catalogueService)'
2023-03-06 23:37:44.002 +01:00 [INF] HTTP POST /api/AdminProfile/Assign Role responded 200 in 74.9756 ms
2023-03-06 23:37:44.003 +01:00 [INF] Request finished in 75.7859ms 200 application/json; charset=utf-8
2023-03-06 23:38:03.913 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Users  
2023-03-06 23:38:03.915 +01:00 [INF] Successfully validated the token.
2023-03-06 23:38:03.916 +01:00 [INF] Authorization was successful.
2023-03-06 23:38:03.916 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:38:03.942 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 23:38:03.949 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:38:03.955 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:38:03.973 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.userModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:38:03.976 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService) in 34.4593ms
2023-03-06 23:38:03.977 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:38:03.977 +01:00 [INF] HTTP GET /api/Users responded 200 in 63.4819 ms
2023-03-06 23:38:03.978 +01:00 [INF] Request finished in 64.6699ms 200 application/json; charset=utf-8
2023-03-06 23:38:31.897 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Assign Role application/json 23
2023-03-06 23:38:31.900 +01:00 [INF] Successfully validated the token.
2023-03-06 23:38:31.902 +01:00 [INF] Authorization was successful.
2023-03-06 23:38:31.902 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.roleAssignmentAsync (catalogueService)'
2023-03-06 23:38:31.903 +01:00 [INF] Route matched with {action = "roleAssignment", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] roleAssignmentAsync(catalogueService.requestETresponse.roleRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:38:31.913 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:38:31.918 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:38:31.925 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [role] = @p0
WHERE [userId] = @p1;
SELECT @@ROWCOUNT;
2023-03-06 23:38:31.935 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 23:38:31.936 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.roleAssignmentAsync (catalogueService) in 32.9947ms
2023-03-06 23:38:31.936 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.roleAssignmentAsync (catalogueService)'
2023-03-06 23:38:31.936 +01:00 [INF] HTTP POST /api/AdminProfile/Assign Role responded 200 in 37.3806 ms
2023-03-06 23:38:31.936 +01:00 [INF] Request finished in 39.0784ms 200 application/json; charset=utf-8
2023-03-06 23:38:42.124 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Users  
2023-03-06 23:38:42.125 +01:00 [INF] Successfully validated the token.
2023-03-06 23:38:42.126 +01:00 [INF] Authorization was successful.
2023-03-06 23:38:42.126 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:38:42.127 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.UsersController (catalogueService).
2023-03-06 23:38:42.128 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:38:42.135 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:38:42.136 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.userModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:38:42.138 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService) in 10.9726ms
2023-03-06 23:38:42.138 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:38:42.138 +01:00 [INF] HTTP GET /api/Users responded 200 in 14.1907 ms
2023-03-06 23:38:42.139 +01:00 [INF] Request finished in 14.8457ms 200 application/json; charset=utf-8
2023-03-06 23:39:12.709 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/View withdrawn students  
2023-03-06 23:39:12.710 +01:00 [INF] Successfully validated the token.
2023-03-06 23:39:12.712 +01:00 [INF] Authorization was successful.
2023-03-06 23:39:12.713 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-03-06 23:39:12.718 +01:00 [INF] Route matched with {action = "WithdrawStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] WithdrawStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:39:12.740 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:39:12.759 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[regNo], [w].[Address], [w].[GPA], [w].[_usersuserId], [w].[coursesTaken], [w].[dateOfBirth], [w].[emailAddress], [w].[enrollmentStatus], [w].[firstName], [w].[gender], [w].[graduationDate], [w].[lastName], [w].[phoneNo], [w].[program], [w].[registrationDate], [w].[userId]
FROM [withdrawnStudents] AS [w]
2023-03-06 23:39:12.775 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.DBsets.withdrawnStudents, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:39:12.781 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService) in 62.6263ms
2023-03-06 23:39:12.781 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-03-06 23:39:12.782 +01:00 [INF] HTTP GET /api/AdminProfile/View withdrawn students responded 200 in 71.9788 ms
2023-03-06 23:39:12.782 +01:00 [INF] Request finished in 72.9311ms 200 application/json; charset=utf-8
2023-03-06 23:40:19.843 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=3%7C4.9  0
2023-03-06 23:40:19.847 +01:00 [INF] Successfully validated the token.
2023-03-06 23:40:19.849 +01:00 [INF] Authorization was successful.
2023-03-06 23:40:19.852 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-03-06 23:40:19.860 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:40:19.954 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:40:19.956 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 95.6793ms
2023-03-06 23:40:19.959 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-03-06 23:40:19.959 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 400 in 115.3375 ms
2023-03-06 23:40:19.959 +01:00 [INF] Request finished in 116.047ms 400 text/plain; charset=utf-8
2023-03-06 23:41:12.709 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=3%7C4  0
2023-03-06 23:41:12.714 +01:00 [INF] Successfully validated the token.
2023-03-06 23:41:12.715 +01:00 [INF] Authorization was successful.
2023-03-06 23:41:12.715 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-03-06 23:41:12.716 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:41:15.278 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-03-06 23:41:32.328 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 23:41:32.332 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 19615.6775ms
2023-03-06 23:41:32.332 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-03-06 23:41:32.332 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 19622.5575 ms
2023-03-06 23:41:32.332 +01:00 [INF] Request finished in 19623.3303ms 200 application/json; charset=utf-8
2023-03-06 23:41:57.024 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-03-06 23:41:57.025 +01:00 [INF] Successfully validated the token.
2023-03-06 23:41:57.028 +01:00 [INF] Authorization was successful.
2023-03-06 23:41:57.028 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-03-06 23:41:57.029 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-03-06 23:41:57.034 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:41:57.039 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-03-06 23:41:57.042 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:41:57.044 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 14.7193ms
2023-03-06 23:41:57.044 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-03-06 23:41:57.044 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 20.0523 ms
2023-03-06 23:41:57.046 +01:00 [INF] Request finished in 22.3809ms 200 application/json; charset=utf-8
2023-03-06 23:42:19.193 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Categories/All Categories  
2023-03-06 23:42:19.202 +01:00 [INF] Successfully validated the token.
2023-03-06 23:42:19.203 +01:00 [INF] Authorization was successful.
2023-03-06 23:42:19.203 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.CategoriesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:42:19.224 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.CategoriesController (catalogueService).
2023-03-06 23:42:19.235 +01:00 [INF] The current user details retrieved is:
UserName: mbokodavid@gmail.com
FirstName: David
LastName: Mboko
2023-03-06 23:42:19.235 +01:00 [INF] This User mbokodavid@gmail.com is a SUPER ADMIN
2023-03-06 23:42:19.237 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:42:19.253 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[categoryId], [c].[description], [c].[name]
FROM [Categories] AS [c]
2023-03-06 23:42:19.263 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.categoryModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:42:19.265 +01:00 [INF] Executed action catalogueService.Controllers.CategoriesController.GetAllWalkDifficulties (catalogueService) in 40.6901ms
2023-03-06 23:42:19.265 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.CategoriesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:42:19.265 +01:00 [INF] HTTP GET /api/Categories/All Categories responded 200 in 71.5942 ms
2023-03-06 23:42:19.267 +01:00 [INF] Request finished in 74.0476ms 200 application/json; charset=utf-8
2023-03-06 23:42:29.971 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Customers/Get all Customers  
2023-03-06 23:42:29.973 +01:00 [INF] Successfully validated the token.
2023-03-06 23:42:29.973 +01:00 [INF] Authorization was successful.
2023-03-06 23:42:29.974 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:42:29.980 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Customers"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.CustomersController (catalogueService).
2023-03-06 23:42:29.988 +01:00 [INF] This User mbokodavid@gmail.com is a SUPER ADMIN
2023-03-06 23:42:29.992 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:42:30.010 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
2023-03-06 23:42:30.026 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.customerModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:42:30.029 +01:00 [INF] Executed action catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService) in 47.7879ms
2023-03-06 23:42:30.029 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:42:30.029 +01:00 [INF] HTTP GET /api/Customers/Get all Customers responded 200 in 58.0762 ms
2023-03-06 23:42:30.030 +01:00 [INF] Request finished in 58.9657ms 200 application/json; charset=utf-8
2023-03-06 23:43:00.348 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=8  0
2023-03-06 23:43:00.356 +01:00 [INF] Successfully validated the token.
2023-03-06 23:43:00.356 +01:00 [INF] Authorization was successful.
2023-03-06 23:43:00.356 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:43:00.363 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 23:43:00.522 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:43:00.540 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-03-06 23:43:00.556 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:43:00.557 +01:00 [INF] User mbokodavid@gmail.com with ID 1 alraedy made payment
2023-03-06 23:43:00.558 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:43:00.562 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 198.2262ms
2023-03-06 23:43:00.562 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:43:00.562 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 209.9592 ms
2023-03-06 23:43:00.563 +01:00 [INF] Request finished in 214.5894ms 200 text/plain; charset=utf-8
2023-03-06 23:43:25.467 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-03-06 23:43:25.477 +01:00 [INF] Successfully validated the token.
2023-03-06 23:43:25.478 +01:00 [INF] Authorization was successful.
2023-03-06 23:43:25.478 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-03-06 23:43:25.484 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 23:43:25.498 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-03-06 23:43:25.501 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:43:25.510 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-03-06 23:43:25.512 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:43:25.537 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 23:43:25.563 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-03-06 23:43:25.571 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-03-06 23:43:25.572 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 23:43:25.577 +01:00 [INF] SQL Successfully with result affected: 1
2023-03-06 23:43:25.582 +01:00 [INF] Order successfully placed with order ID of 9
2023-03-06 23:43:25.584 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 23:43:25.585 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 100.8704ms
2023-03-06 23:43:25.585 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-03-06 23:43:25.586 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 118.1938 ms
2023-03-06 23:43:25.586 +01:00 [INF] Request finished in 118.8812ms 200 application/json; charset=utf-8
2023-03-06 23:43:35.362 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=9  0
2023-03-06 23:43:35.364 +01:00 [INF] Successfully validated the token.
2023-03-06 23:43:35.365 +01:00 [INF] Authorization was successful.
2023-03-06 23:43:35.365 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:43:35.365 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 23:43:35.368 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:43:35.382 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-03-06 23:43:35.389 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:43:35.393 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 23:43:35.395 +01:00 [INF] SQL About executing Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-03-06 23:43:35.409 +01:00 [INF] Sales table successfully updated for query: Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-03-06 23:43:35.410 +01:00 [INF] SQL About executing Update users set wallet = @wallet where userId = @userId
2023-03-06 23:43:35.414 +01:00 [INF] Customer's wallet successfully updated for query: Update users set wallet = @wallet where userId = @userId
2023-03-06 23:43:35.414 +01:00 [INF] SQL About executing Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 23:43:35.419 +01:00 [INF] Order status successfully updated for query: Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 23:43:35.436 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__orderId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__orderId_0
2023-03-06 23:43:35.436 +01:00 [INF] SQL About executing Update Fees set quantity = @quantity where FeeID = @FeeID
2023-03-06 23:43:35.453 +01:00 [INF] Slots left successfully updated for query: Update Fees set quantity = @quantity where FeeID = @FeeID
2023-03-06 23:43:35.453 +01:00 [INF] About generating reciept for customer: 1
2023-03-06 23:43:35.769 +01:00 [INF] Payment successfully made for the orderID: 9
2023-03-06 23:43:35.769 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:43:35.770 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 405.0473ms
2023-03-06 23:43:35.770 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:43:35.770 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 408.2456 ms
2023-03-06 23:43:35.771 +01:00 [INF] Request finished in 408.8377ms 200 text/plain; charset=utf-8
2023-03-06 23:48:11.919 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-06 23:48:12.488 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-06 23:48:12.489 +01:00 [INF] Hosting environment: Development
2023-03-06 23:48:12.489 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\School-Management-System\catalogueService
2023-03-06 23:48:12.532 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 23:48:13.058 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 464.7744 ms
2023-03-06 23:48:13.066 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 23:48:13.066 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 23:48:13.078 +01:00 [INF] Request finished in 550.9801ms 200 text/html;charset=utf-8
2023-03-06 23:48:13.096 +01:00 [INF] Request finished in 29.304ms 200 application/javascript; charset=utf-8
2023-03-06 23:48:13.143 +01:00 [INF] Request finished in 76.7759ms 200 text/javascript; charset=UTF-8
2023-03-06 23:48:13.240 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 23:48:13.528 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 286.4685 ms
2023-03-06 23:48:13.528 +01:00 [INF] Request finished in 287.5387ms 200 application/json;charset=utf-8
2023-03-06 23:49:50.018 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Fees/View all Program  
2023-03-06 23:49:50.603 +01:00 [INF] Successfully validated the token.
2023-03-06 23:49:50.616 +01:00 [INF] Authorization was successful.
2023-03-06 23:49:50.617 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:49:50.716 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Fees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.FeesController (catalogueService).
2023-03-06 23:49:51.416 +01:00 [INF] The user for this session is Mboko David
2023-03-06 23:49:52.632 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 23:49:52.632 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 23:49:52.633 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-03-06 23:49:52.687 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:49:53.755 +01:00 [INF] Executed DbCommand (81ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-03-06 23:49:53.953 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.FeeModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:49:53.972 +01:00 [INF] Executed action catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService) in 3248.084ms
2023-03-06 23:49:53.975 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:49:53.975 +01:00 [INF] HTTP GET /api/Fees/View all Program responded 200 in 3950.6127 ms
2023-03-06 23:49:53.980 +01:00 [INF] Request finished in 3962.6433ms 200 application/json; charset=utf-8
2023-03-06 23:50:27.907 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 139
2023-03-06 23:50:27.928 +01:00 [INF] Successfully validated the token.
2023-03-06 23:50:27.929 +01:00 [INF] Authorization was successful.
2023-03-06 23:50:27.929 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-03-06 23:50:27.952 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 23:50:28.010 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-03-06 23:50:28.047 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:50:28.215 +01:00 [INF] Executed DbCommand (41ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-03-06 23:50:28.246 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:50:28.282 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 23:50:28.550 +01:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-03-06 23:50:28.623 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-03-06 23:50:28.643 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 23:50:28.976 +01:00 [INF] SQL Successfully with result affected: 1
2023-03-06 23:50:28.992 +01:00 [INF] Order successfully placed with order ID of 10
2023-03-06 23:50:29.003 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-03-06 23:50:29.013 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 1060.85ms
2023-03-06 23:50:29.014 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-03-06 23:50:29.014 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 1100.7515 ms
2023-03-06 23:50:29.015 +01:00 [INF] Request finished in 1111.3418ms 200 application/json; charset=utf-8
2023-03-06 23:50:38.690 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=1  0
2023-03-06 23:50:38.696 +01:00 [INF] Successfully validated the token.
2023-03-06 23:50:38.700 +01:00 [INF] Authorization was successful.
2023-03-06 23:50:38.700 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:50:38.711 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 23:50:38.745 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:50:38.757 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-03-06 23:50:38.769 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:50:38.770 +01:00 [INF] User mbokodavid@gmail.com with ID 1 alraedy made payment
2023-03-06 23:50:38.771 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:50:38.772 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 61.0768ms
2023-03-06 23:50:38.773 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:50:38.773 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 82.1376 ms
2023-03-06 23:50:38.774 +01:00 [INF] Request finished in 84.5464ms 200 text/plain; charset=utf-8
2023-03-06 23:50:48.270 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=10  0
2023-03-06 23:50:48.275 +01:00 [INF] Successfully validated the token.
2023-03-06 23:50:48.277 +01:00 [INF] Authorization was successful.
2023-03-06 23:50:48.279 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:50:48.283 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-03-06 23:50:48.293 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:50:48.297 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-03-06 23:50:48.301 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-03-06 23:50:48.307 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-03-06 23:50:48.310 +01:00 [INF] SQL About executing Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-03-06 23:50:48.323 +01:00 [INF] Sales table successfully updated for query: Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-03-06 23:50:48.324 +01:00 [INF] SQL About executing Update users set wallet = @wallet where userId = @userId
2023-03-06 23:50:48.330 +01:00 [INF] Customer's wallet successfully updated for query: Update users set wallet = @wallet where userId = @userId
2023-03-06 23:50:48.330 +01:00 [INF] SQL About executing Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 23:50:48.332 +01:00 [INF] Order status successfully updated for query: Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-03-06 23:50:48.351 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__orderId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__orderId_0
2023-03-06 23:50:48.352 +01:00 [INF] SQL About executing Update Fees set quantity = @quantity where FeeID = @FeeID
2023-03-06 23:50:48.360 +01:00 [INF] Slots left successfully updated for query: Update Fees set quantity = @quantity where FeeID = @FeeID
2023-03-06 23:50:48.360 +01:00 [INF] About generating reciept for customer: 1
2023-03-06 23:50:48.725 +01:00 [INF] Payment successfully made for the orderID: 10
2023-03-06 23:50:48.727 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:50:48.728 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 444.2529ms
2023-03-06 23:50:48.728 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-03-06 23:50:48.729 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 456.6298 ms
2023-03-06 23:50:48.729 +01:00 [INF] Request finished in 459.976ms 200 text/plain; charset=utf-8
2023-03-06 23:51:39.413 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Sales/View all Sales  
2023-03-06 23:51:39.424 +01:00 [INF] Successfully validated the token.
2023-03-06 23:51:39.425 +01:00 [INF] Authorization was successful.
2023-03-06 23:51:39.425 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:51:39.430 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-03-06 23:51:39.433 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:51:39.442 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[saleId], [s].[amount], [s].[customerID], [s].[datePaid], [s].[salesType]
FROM [sales] AS [s]
2023-03-06 23:51:39.463 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.saleModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-06 23:51:39.470 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService) in 40.0296ms
2023-03-06 23:51:39.470 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService)'
2023-03-06 23:51:39.471 +01:00 [INF] HTTP GET /api/Sales/View all Sales responded 200 in 56.6579 ms
2023-03-06 23:51:39.472 +01:00 [INF] Request finished in 62.5365ms 200 application/json; charset=utf-8
2023-03-06 23:51:57.149 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate Sales Report  0
2023-03-06 23:51:57.156 +01:00 [INF] Successfully validated the token.
2023-03-06 23:51:57.158 +01:00 [INF] Authorization was successful.
2023-03-06 23:51:57.158 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-03-06 23:51:57.165 +01:00 [INF] Route matched with {action = "GenerateReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-03-06 23:51:57.171 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:51:57.179 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:51:57.188 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-03-06 23:51:57.194 +01:00 [INF] SQL About executing Select * from  sales where customerID = @customerID
2023-03-06 23:51:57.236 +01:00 [INF] Method finished executing with result: 
2023-03-06 23:51:57.262 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:51:57.263 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService) in 97.8516ms
2023-03-06 23:51:57.263 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-03-06 23:51:57.264 +01:00 [INF] HTTP POST /api/Sales/Generate Sales Report responded 200 in 113.5058 ms
2023-03-06 23:51:57.264 +01:00 [INF] Request finished in 115.9063ms 200 text/plain; charset=utf-8
2023-03-06 23:51:57.365 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 23:51:57.376 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 23:51:57.415 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 37.1822 ms
2023-03-06 23:51:57.416 +01:00 [INF] Request finished in 51.4846ms 200 text/html;charset=utf-8
2023-03-06 23:51:57.436 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 37.8495 ms
2023-03-06 23:51:57.436 +01:00 [INF] Request finished in 60.4128ms 200 text/html;charset=utf-8
2023-03-06 23:51:57.444 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 23:51:57.444 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 23:51:57.445 +01:00 [INF] Request finished in 0.7637ms 200 application/javascript; charset=utf-8
2023-03-06 23:51:57.458 +01:00 [INF] Request finished in 13.8603ms 200 text/javascript; charset=UTF-8
2023-03-06 23:51:57.558 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 23:51:57.625 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 66.5001 ms
2023-03-06 23:51:57.625 +01:00 [INF] Request finished in 66.86ms 200 application/json;charset=utf-8
2023-03-06 23:52:07.301 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate Sales Report  0
2023-03-06 23:52:07.305 +01:00 [INF] Authorization failed.
2023-03-06 23:52:07.312 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-06 23:52:07.312 +01:00 [INF] HTTP POST /api/Sales/Generate Sales Report responded 401 in 9.6870 ms
2023-03-06 23:52:07.314 +01:00 [INF] Request finished in 13.6276ms 401 
2023-03-06 23:52:23.169 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate All Report  0
2023-03-06 23:52:23.172 +01:00 [INF] Authorization failed.
2023-03-06 23:52:23.172 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-06 23:52:23.172 +01:00 [INF] HTTP POST /api/Sales/Generate All Report responded 401 in 2.5506 ms
2023-03-06 23:52:23.175 +01:00 [INF] Request finished in 4.9853ms 401 
2023-03-06 23:52:48.274 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate Sales Report  0
2023-03-06 23:52:48.276 +01:00 [INF] Successfully validated the token.
2023-03-06 23:52:48.277 +01:00 [INF] Authorization was successful.
2023-03-06 23:52:48.278 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-03-06 23:52:48.279 +01:00 [INF] Route matched with {action = "GenerateReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-03-06 23:52:48.284 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:52:48.289 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:52:48.297 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-03-06 23:52:48.298 +01:00 [INF] SQL About executing Select * from  sales where customerID = @customerID
2023-03-06 23:52:48.305 +01:00 [INF] Method finished executing with result: 
2023-03-06 23:52:48.348 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 23:52:48.355 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:52:48.359 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService) in 79.5712ms
2023-03-06 23:52:48.359 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-03-06 23:52:48.359 +01:00 [INF] HTTP POST /api/Sales/Generate Sales Report responded 200 in 85.1362 ms
2023-03-06 23:52:48.360 +01:00 [INF] Request finished in 89.6576ms 200 text/plain; charset=utf-8
2023-03-06 23:52:48.386 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 23:52:48.480 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 121.7338 ms
2023-03-06 23:52:48.490 +01:00 [INF] Request finished in 142.1124ms 200 text/html;charset=utf-8
2023-03-06 23:52:48.493 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 105.5532 ms
2023-03-06 23:52:48.494 +01:00 [INF] Request finished in 107.8853ms 200 text/html;charset=utf-8
2023-03-06 23:52:48.503 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 23:52:48.508 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 23:52:48.509 +01:00 [INF] Request finished in 0.7129ms 200 application/javascript; charset=utf-8
2023-03-06 23:52:48.521 +01:00 [INF] Request finished in 17.3422ms 200 text/javascript; charset=UTF-8
2023-03-06 23:52:48.609 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 23:52:48.654 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 44.5167 ms
2023-03-06 23:52:48.654 +01:00 [INF] Request finished in 45.0355ms 200 application/json;charset=utf-8
2023-03-06 23:53:08.109 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate All Report  0
2023-03-06 23:53:08.111 +01:00 [INF] Successfully validated the token.
2023-03-06 23:53:08.115 +01:00 [INF] Authorization was successful.
2023-03-06 23:53:08.115 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-03-06 23:53:08.123 +01:00 [INF] Route matched with {action = "GenerateAllReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateAllReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-03-06 23:53:08.126 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:53:08.131 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:53:08.136 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-03-06 23:53:08.138 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[saleId], [s].[amount], [s].[customerID], [s].[datePaid], [s].[salesType]
FROM [sales] AS [s]
2023-03-06 23:53:08.149 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:53:08.150 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService) in 27.5837ms
2023-03-06 23:53:08.151 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-03-06 23:53:08.151 +01:00 [INF] HTTP POST /api/Sales/Generate All Report responded 200 in 41.7558 ms
2023-03-06 23:53:08.151 +01:00 [INF] Request finished in 42.8689ms 200 text/plain; charset=utf-8
2023-03-06 23:53:44.853 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate Sales Report  0
2023-03-06 23:53:44.856 +01:00 [INF] Successfully validated the token.
2023-03-06 23:53:44.857 +01:00 [INF] Authorization was successful.
2023-03-06 23:53:44.857 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-03-06 23:53:44.858 +01:00 [INF] Route matched with {action = "GenerateReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-03-06 23:53:49.310 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-03-06 23:53:49.333 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-03-06 23:53:59.893 +01:00 [INF] Executed DbCommand (19ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-03-06 23:54:17.423 +01:00 [INF] SQL About executing Select * from  sales where customerID = @customerID
2023-03-06 23:54:17.449 +01:00 [INF] Method finished executing with result: 
2023-03-06 23:54:40.417 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-03-06 23:54:44.502 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 2826.4522 ms
2023-03-06 23:54:44.502 +01:00 [INF] Request finished in 4085.9228ms 200 text/html;charset=utf-8
2023-03-06 23:54:45.209 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-03-06 23:54:45.209 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-03-06 23:54:45.210 +01:00 [INF] Request finished in 0.5616ms 200 application/javascript; charset=utf-8
2023-03-06 23:54:47.758 +01:00 [INF] Request finished in 2549.24ms 200 text/javascript; charset=UTF-8
2023-03-06 23:54:49.402 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-03-06 23:54:49.403 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-06 23:54:49.404 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService) in 64545.8152ms
2023-03-06 23:54:49.404 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-03-06 23:54:49.405 +01:00 [INF] HTTP POST /api/Sales/Generate Sales Report responded 200 in 64551.2382 ms
2023-03-06 23:54:49.405 +01:00 [INF] Request finished in 64552.2024ms 200 text/plain; charset=utf-8
2023-03-06 23:54:49.434 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 30.8051 ms
2023-03-06 23:54:49.434 +01:00 [INF] Request finished in 31.5898ms 200 application/json;charset=utf-8
