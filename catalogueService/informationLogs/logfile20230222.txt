2023-02-22 03:59:00.721 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 03:59:01.528 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 03:59:01.528 +01:00 [INF] Hosting environment: Development
2023-02-22 03:59:01.529 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 03:59:01.586 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 03:59:02.440 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 799.8559 ms
2023-02-22 03:59:02.490 +01:00 [INF] Request finished in 908.3204ms 200 text/html;charset=utf-8
2023-02-22 03:59:02.508 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 03:59:02.539 +01:00 [INF] Request finished in 31.138ms 200 application/javascript; charset=utf-8
2023-02-22 03:59:02.553 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 03:59:02.656 +01:00 [INF] Request finished in 121.9091ms 200 text/javascript; charset=UTF-8
2023-02-22 03:59:02.894 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 03:59:03.325 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 424.8742 ms
2023-02-22 03:59:03.330 +01:00 [INF] Request finished in 433.0753ms 200 application/json;charset=utf-8
2023-02-22 04:00:04.403 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-22 04:00:04.448 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:00:04.527 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 04:00:05.671 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-22 04:00:07.026 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:00:07.027 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:00:07.027 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:00:07.105 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:00:08.574 +01:00 [INF] Executed DbCommand (191ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 04:00:08.748 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-22 04:00:08.748 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-22 04:00:09.043 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 04:00:09.058 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 4519.8463ms
2023-02-22 04:00:09.059 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:00:09.059 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 4653.5444 ms
2023-02-22 04:00:09.070 +01:00 [INF] Request finished in 4673.1923ms 200 text/plain; charset=utf-8
2023-02-22 04:01:11.223 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-02-22 04:01:11.370 +01:00 [INF] Successfully validated the token.
2023-02-22 04:01:11.381 +01:00 [INF] Authorization was successful.
2023-02-22 04:01:11.382 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 04:01:11.396 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:01:11.831 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-22 04:01:11.903 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:01:12.053 +01:00 [INF] Executed DbCommand (61ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-22 04:01:12.138 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 04:01:12.180 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 04:01:12.231 +01:00 [INF] Wrong Amount for the Fee 'Early Childhood Education'
2023-02-22 04:01:12.245 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 04:01:12.255 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 857.997ms
2023-02-22 04:01:12.256 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 04:01:12.257 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 1033.1079 ms
2023-02-22 04:01:12.258 +01:00 [INF] Request finished in 1035.8967ms 200 text/plain; charset=utf-8
2023-02-22 04:04:07.232 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 04:04:07.890 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 04:04:07.890 +01:00 [INF] Hosting environment: Development
2023-02-22 04:04:07.890 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 04:04:07.960 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 04:04:08.534 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 493.3537 ms
2023-02-22 04:04:08.540 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 04:04:08.558 +01:00 [INF] Request finished in 16.208ms 200 application/javascript; charset=utf-8
2023-02-22 04:04:08.558 +01:00 [INF] Request finished in 604.4898ms 200 text/html;charset=utf-8
2023-02-22 04:04:08.567 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 04:04:08.759 +01:00 [INF] Request finished in 191.5959ms 200 text/javascript; charset=UTF-8
2023-02-22 04:04:08.900 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 04:04:09.350 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 449.3657 ms
2023-02-22 04:04:09.351 +01:00 [INF] Request finished in 450.9501ms 200 application/json;charset=utf-8
2023-02-22 04:06:02.481 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 04:06:03.455 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 04:06:03.455 +01:00 [INF] Hosting environment: Development
2023-02-22 04:06:03.455 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 04:06:03.489 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 04:06:04.084 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 542.1665 ms
2023-02-22 04:06:04.103 +01:00 [INF] Request finished in 616.1993ms 200 text/html;charset=utf-8
2023-02-22 04:06:04.193 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 04:06:04.194 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 04:06:04.214 +01:00 [INF] Request finished in 21.4187ms 200 application/javascript; charset=utf-8
2023-02-22 04:06:04.274 +01:00 [INF] Request finished in 81.0286ms 200 text/javascript; charset=UTF-8
2023-02-22 04:06:04.414 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 04:06:04.790 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 374.7775 ms
2023-02-22 04:06:04.791 +01:00 [INF] Request finished in 376.9527ms 200 application/json;charset=utf-8
2023-02-22 04:07:00.689 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Fees/View all Program  
2023-02-22 04:07:01.348 +01:00 [INF] Successfully validated the token.
2023-02-22 04:07:01.366 +01:00 [INF] Authorization was successful.
2023-02-22 04:07:01.367 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:07:01.501 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Fees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.FeesController (catalogueService).
2023-02-22 04:07:02.151 +01:00 [INF] The user for this session is Mboko David
2023-02-22 04:07:03.412 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:07:03.413 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:07:03.416 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:07:03.539 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:07:04.831 +01:00 [INF] Executed DbCommand (122ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-02-22 04:07:05.099 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.FeeModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 04:07:05.143 +01:00 [INF] Executed action catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService) in 3622.1067ms
2023-02-22 04:07:05.157 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:07:05.159 +01:00 [INF] HTTP GET /api/Fees/View all Program responded 200 in 4468.4532 ms
2023-02-22 04:07:05.210 +01:00 [INF] Request finished in 4521.7747ms 200 application/json; charset=utf-8
2023-02-22 04:08:24.548 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-02-22 04:08:24.566 +01:00 [INF] Successfully validated the token.
2023-02-22 04:08:24.568 +01:00 [INF] Authorization was successful.
2023-02-22 04:08:24.568 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 04:08:24.592 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:08:24.703 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-22 04:08:24.750 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:08:25.180 +01:00 [INF] Executed DbCommand (206ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-22 04:08:25.342 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 04:08:25.424 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 04:08:25.813 +01:00 [INF] Executed DbCommand (19ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-02-22 04:08:25.914 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-02-22 04:08:25.964 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 04:08:26.281 +01:00 [INF] SQL Successfully with result affected: 1
2023-02-22 04:08:26.293 +01:00 [INF] Order successfully placed with order ID of 2
2023-02-22 04:08:26.297 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 04:08:26.301 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 1708.1423ms
2023-02-22 04:08:26.301 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 04:08:26.301 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 1751.4101 ms
2023-02-22 04:08:26.307 +01:00 [INF] Request finished in 1766.5707ms 200 application/json; charset=utf-8
2023-02-22 04:08:40.163 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 04:08:40.178 +01:00 [INF] Successfully validated the token.
2023-02-22 04:08:40.182 +01:00 [INF] Authorization was successful.
2023-02-22 04:08:40.185 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:08:40.213 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:08:40.260 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:08:40.293 +01:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
2023-02-22 04:08:40.325 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.orderModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 04:08:40.335 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 121.2293ms
2023-02-22 04:08:40.335 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:08:40.336 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 169.7951 ms
2023-02-22 04:08:40.338 +01:00 [INF] Request finished in 175.7524ms 200 application/json; charset=utf-8
2023-02-22 04:12:26.110 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=1  0
2023-02-22 04:12:26.121 +01:00 [INF] Successfully validated the token.
2023-02-22 04:12:26.137 +01:00 [INF] Authorization was successful.
2023-02-22 04:12:26.139 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 04:12:26.153 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:12:26.174 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:12:26.199 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 04:12:26.216 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 04:12:26.221 +01:00 [INF] User mbokodavid@gmail.com with ID 1 alraedy made payment
2023-02-22 04:12:26.223 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 04:12:26.226 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 73.1867ms
2023-02-22 04:12:26.227 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 04:12:26.227 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 115.3225 ms
2023-02-22 04:12:26.229 +01:00 [INF] Request finished in 119.3715ms 200 text/plain; charset=utf-8
2023-02-22 04:12:43.673 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=2  0
2023-02-22 04:12:43.679 +01:00 [INF] Successfully validated the token.
2023-02-22 04:12:43.687 +01:00 [INF] Authorization was successful.
2023-02-22 04:12:43.689 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 04:12:43.692 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:12:43.704 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:12:43.709 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 04:12:43.719 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 04:12:43.725 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 04:12:57.145 +01:00 [INF] SQL About executing Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-02-22 04:36:18.630 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 04:36:19.254 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 04:36:19.255 +01:00 [INF] Hosting environment: Development
2023-02-22 04:36:19.255 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 04:36:19.320 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 04:36:19.913 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 04:36:19.913 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 04:36:19.911 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 515.0379 ms
2023-02-22 04:36:19.920 +01:00 [INF] Request finished in 5.8354ms 200 application/javascript; charset=utf-8
2023-02-22 04:36:19.978 +01:00 [INF] Request finished in 670.2862ms 200 text/html;charset=utf-8
2023-02-22 04:36:20.015 +01:00 [INF] Request finished in 102.6829ms 200 text/javascript; charset=UTF-8
2023-02-22 04:36:20.137 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 04:36:20.402 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 264.9318 ms
2023-02-22 04:36:20.403 +01:00 [INF] Request finished in 265.7037ms 200 application/json;charset=utf-8
2023-02-22 04:36:57.728 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-22 04:36:57.742 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:36:57.779 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 04:36:58.263 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-22 04:36:58.991 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:36:58.992 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:36:58.992 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:36:59.032 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:36:59.812 +01:00 [INF] Executed DbCommand (81ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 04:36:59.908 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-22 04:36:59.909 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-22 04:37:00.081 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 04:37:00.091 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2304.0012ms
2023-02-22 04:37:00.091 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:37:00.091 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 2361.9482 ms
2023-02-22 04:37:00.095 +01:00 [INF] Request finished in 2367.232ms 200 text/plain; charset=utf-8
2023-02-22 04:37:56.057 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=2  0
2023-02-22 04:37:56.149 +01:00 [INF] Successfully validated the token.
2023-02-22 04:37:56.156 +01:00 [INF] Authorization was successful.
2023-02-22 04:37:56.156 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 04:37:56.165 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:37:56.215 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:37:56.259 +01:00 [INF] Executed DbCommand (17ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 04:37:56.317 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 04:37:56.326 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 04:38:01.337 +01:00 [INF] SQL About executing Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-02-22 04:38:33.034 +01:00 [INF] Sales table successfully updated for query: Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-02-22 04:38:43.121 +01:00 [INF] SQL About executing Update users set wallet = @wallet where userId = @userId
2023-02-22 04:38:54.866 +01:00 [INF] Customer's wallet successfully updated for query: Update users set wallet = @wallet where userId = @userId
2023-02-22 04:39:05.804 +01:00 [INF] SQL About executing Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 04:39:17.292 +01:00 [INF] Order status successfully updated for query: Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 04:39:17.997 +01:00 [INF] Executed DbCommand (16ms) [Parameters=[@__orderId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__orderId_0
2023-02-22 04:39:23.028 +01:00 [INF] SQL About executing Update Fees set quantity = @quantity where FeeID = @FeeID
2023-02-22 04:39:39.433 +01:00 [INF] Slots left successfully updated for query: Update Fees set quantity = @quantity where FeeID = @FeeID
2023-02-22 04:39:40.236 +01:00 [INF] Payment successfully made for the orderID: 2
2023-02-22 04:39:42.217 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 04:39:42.220 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 106054.7014ms
2023-02-22 04:39:42.220 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 04:39:42.221 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 106160.8914 ms
2023-02-22 04:39:42.221 +01:00 [INF] Request finished in 106165.324ms 200 text/plain; charset=utf-8
2023-02-22 04:39:56.386 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 04:39:56.391 +01:00 [INF] Successfully validated the token.
2023-02-22 04:39:56.395 +01:00 [INF] Authorization was successful.
2023-02-22 04:39:56.396 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:39:56.401 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:39:56.419 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:39:56.430 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
2023-02-22 04:40:01.101 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.orderModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 04:40:01.112 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 4710.0935ms
2023-02-22 04:40:01.112 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:40:01.112 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 4726.0759 ms
2023-02-22 04:40:01.113 +01:00 [INF] Request finished in 4727.5953ms 200 application/json; charset=utf-8
2023-02-22 04:42:09.467 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 68
2023-02-22 04:42:09.472 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:42:09.474 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 04:42:09.481 +01:00 [INF] Login request received is Username: mbokodaniel@gmail.com
2023-02-22 04:42:09.482 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:42:09.491 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 04:42:09.492 +01:00 [INF] The Username of the current user is: mbokodaniel@gmail.com
2023-02-22 04:42:09.492 +01:00 [INF] Username: mbokodaniel@gmail.com successfully logged in
2023-02-22 04:42:12.028 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2553.3272ms
2023-02-22 04:42:12.030 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:42:12.031 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 'value')
   at System.Security.Claims.Claim..ctor(String type, String value, String valueType, String issuer, String originalIssuer, ClaimsIdentity subject, String propertyKey, String propertyValue)
   at System.Security.Claims.Claim..ctor(String type, String value)
   at JWTAuthentication.Controllers.AuthenticateController.<Login>g__Generate|7_0(users user) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\AuthenticationController.cs:line 75
   at JWTAuthentication.Controllers.AuthenticateController.Login(LoginModel userLogin) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\AuthenticationController.cs:line 65
   at lambda_method(Closure , Object , Object[] )
   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-02-22 04:42:12.086 +01:00 [ERR] HTTP POST /api/Authenticate/login responded 500 in 2616.8108 ms
2023-02-22 04:42:12.087 +01:00 [INF] Request finished in 2620.3861ms 500 text/plain
2023-02-22 04:43:08.778 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Users  
2023-02-22 04:43:08.781 +01:00 [INF] Successfully validated the token.
2023-02-22 04:43:08.783 +01:00 [INF] Authorization was successful.
2023-02-22 04:43:08.783 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:43:08.792 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.UsersController (catalogueService).
2023-02-22 04:43:08.795 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:43:08.809 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-02-22 04:43:08.821 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.userModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 04:43:08.826 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService) in 34.2533ms
2023-02-22 04:43:08.826 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:43:08.826 +01:00 [INF] HTTP GET /api/Users responded 200 in 47.3070 ms
2023-02-22 04:43:08.827 +01:00 [INF] Request finished in 52.0815ms 200 application/json; charset=utf-8
2023-02-22 04:43:30.213 +01:00 [INF] Request starting HTTP/2.0 PUT https://localhost:44388/api/Users/2 application/json 169
2023-02-22 04:43:30.217 +01:00 [INF] Successfully validated the token.
2023-02-22 04:43:30.220 +01:00 [INF] Authorization was successful.
2023-02-22 04:43:30.220 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService)'
2023-02-22 04:43:30.228 +01:00 [INF] Route matched with {action = "UpdateWalkDifficulty", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateWalkDifficultyAsync(Int32, catalogueService.requestETresponse.userRequest) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-02-22 04:43:30.248 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:43:30.264 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__p_0
2023-02-22 04:43:30.391 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [role] = @p0, [wallet] = @p1
WHERE [userId] = @p2;
SELECT @@ROWCOUNT;
2023-02-22 04:43:30.430 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 04:43:30.433 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService) in 204.3829ms
2023-02-22 04:43:30.433 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService)'
2023-02-22 04:43:30.434 +01:00 [INF] HTTP PUT /api/Users/2 responded 200 in 219.8575 ms
2023-02-22 04:43:30.434 +01:00 [INF] Request finished in 221.7084ms 200 application/json; charset=utf-8
2023-02-22 04:43:51.016 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 68
2023-02-22 04:43:51.017 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:43:51.017 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 04:43:51.020 +01:00 [INF] Login request received is Username: mbokodaniel@gmail.com
2023-02-22 04:43:51.021 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:43:51.025 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 04:43:51.027 +01:00 [INF] The Username of the current user is: mbokodaniel@gmail.com
2023-02-22 04:43:51.027 +01:00 [INF] Username: mbokodaniel@gmail.com successfully logged in
2023-02-22 04:43:51.028 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 04:43:51.030 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 12.4929ms
2023-02-22 04:43:51.030 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 04:43:51.030 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 14.3481 ms
2023-02-22 04:43:51.031 +01:00 [INF] Request finished in 17.4165ms 200 text/plain; charset=utf-8
2023-02-22 04:44:31.969 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Fees/View all Program  
2023-02-22 04:44:31.974 +01:00 [INF] Successfully validated the token.
2023-02-22 04:44:31.976 +01:00 [INF] Authorization was successful.
2023-02-22 04:44:31.976 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:44:31.991 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Fees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.FeesController (catalogueService).
2023-02-22 04:44:31.996 +01:00 [INF] The user for this session is mboko daniel
2023-02-22 04:44:31.998 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:44:32.010 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-02-22 04:44:32.019 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.FeeModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 04:44:32.025 +01:00 [INF] Executed action catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService) in 33.4035ms
2023-02-22 04:44:32.025 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.FeesController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:44:32.025 +01:00 [INF] HTTP GET /api/Fees/View all Program responded 200 in 55.4004 ms
2023-02-22 04:44:32.026 +01:00 [INF] Request finished in 57.0782ms 200 application/json; charset=utf-8
2023-02-22 04:45:00.383 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 139
2023-02-22 04:45:00.393 +01:00 [INF] Successfully validated the token.
2023-02-22 04:45:00.395 +01:00 [INF] Authorization was successful.
2023-02-22 04:45:00.396 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 04:45:00.405 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:45:00.422 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-22 04:45:00.425 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:45:00.437 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-22 04:45:00.450 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 04:45:00.456 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 04:45:00.539 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-02-22 04:45:00.577 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-02-22 04:45:00.578 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 04:45:00.605 +01:00 [INF] SQL Successfully with result affected: 1
2023-02-22 04:45:00.612 +01:00 [INF] Order successfully placed with order ID of 3
2023-02-22 04:45:00.613 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 04:45:00.615 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 209.6652ms
2023-02-22 04:45:00.615 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 04:45:00.615 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 231.9730 ms
2023-02-22 04:45:00.616 +01:00 [INF] Request finished in 233.0541ms 200 application/json; charset=utf-8
2023-02-22 04:45:17.264 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 04:45:17.266 +01:00 [INF] Successfully validated the token.
2023-02-22 04:45:17.267 +01:00 [INF] Authorization was successful.
2023-02-22 04:45:17.268 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:45:17.268 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:45:17.272 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:45:17.293 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 04:45:25.493 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 04:45:52.284 +01:00 [INF] Method finished executing with result: 
2023-02-22 04:45:55.039 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 04:45:55.041 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Data.DataTable'.
2023-02-22 04:45:55.106 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 37837.099ms
2023-02-22 04:45:55.106 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:45:55.106 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected which is not supported. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32.
   at System.Text.Json.ThrowHelper.ThrowInvalidOperationException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.JsonSerializer.Write(Utf8JsonWriter writer, Int32 originalWriterDepth, Int32 flushThreshold, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.JsonSerializer.WriteAsyncCore(Stream utf8Json, Object value, Type inputType, JsonSerializerOptions options, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-02-22 04:45:55.119 +01:00 [ERR] HTTP GET /api/Orders/View Registered Payments responded 500 in 37854.5122 ms
2023-02-22 04:45:55.119 +01:00 [INF] Request finished in 37855.7849ms 500 text/plain
2023-02-22 04:49:19.102 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 04:49:19.743 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 04:49:19.744 +01:00 [INF] Hosting environment: Development
2023-02-22 04:49:19.744 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 04:49:19.809 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 04:49:20.322 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 460.6738 ms
2023-02-22 04:49:20.346 +01:00 [INF] Request finished in 546.8165ms 200 text/html;charset=utf-8
2023-02-22 04:49:20.372 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 04:49:20.373 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 04:49:20.399 +01:00 [INF] Request finished in 26.2816ms 200 application/javascript; charset=utf-8
2023-02-22 04:49:20.482 +01:00 [INF] Request finished in 108.8872ms 200 text/javascript; charset=UTF-8
2023-02-22 04:49:20.591 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 04:49:20.980 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 388.3550 ms
2023-02-22 04:49:20.980 +01:00 [INF] Request finished in 389.2106ms 200 application/json;charset=utf-8
2023-02-22 04:49:46.111 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 04:49:46.362 +01:00 [INF] Successfully validated the token.
2023-02-22 04:49:46.381 +01:00 [INF] Authorization was successful.
2023-02-22 04:49:46.382 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:49:46.429 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:49:47.595 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:49:47.595 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:49:47.595 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:49:47.640 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:49:48.377 +01:00 [INF] Executed DbCommand (80ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 04:50:03.485 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 04:50:31.192 +01:00 [INF] Method finished executing with result: 
2023-02-22 04:50:33.663 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 04:50:33.687 +01:00 [INF] Executing ObjectResult, writing value of type 'null'.
2023-02-22 04:50:33.695 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 47260.6754ms
2023-02-22 04:50:33.697 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:50:33.697 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 204 in 47585.3351 ms
2023-02-22 04:50:33.701 +01:00 [INF] Request finished in 47590.485ms 204 
2023-02-22 04:51:21.704 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 04:51:21.710 +01:00 [INF] Successfully validated the token.
2023-02-22 04:51:21.717 +01:00 [INF] Authorization was successful.
2023-02-22 04:51:21.717 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:51:21.718 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:51:21.749 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:51:21.761 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 04:51:31.010 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 04:51:40.281 +01:00 [INF] Method finished executing with result: 
2023-02-22 04:51:44.349 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 04:51:59.973 +01:00 [INF] Executing ObjectResult, writing value of type 'null'.
2023-02-22 04:51:59.975 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 38256.6793ms
2023-02-22 04:51:59.976 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:51:59.977 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 204 in 38271.7635 ms
2023-02-22 04:51:59.978 +01:00 [INF] Request finished in 38279.56ms 204 
2023-02-22 04:54:55.487 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 04:54:56.014 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 04:54:56.015 +01:00 [INF] Hosting environment: Development
2023-02-22 04:54:56.015 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 04:54:56.055 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 04:54:56.486 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 384.4040 ms
2023-02-22 04:54:56.501 +01:00 [INF] Request finished in 452.3508ms 200 text/html;charset=utf-8
2023-02-22 04:54:56.551 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 04:54:56.568 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 04:54:56.581 +01:00 [INF] Request finished in 16.1345ms 200 application/javascript; charset=utf-8
2023-02-22 04:54:56.629 +01:00 [INF] Request finished in 78.7464ms 200 text/javascript; charset=UTF-8
2023-02-22 04:54:56.713 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 04:54:56.922 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 209.2276 ms
2023-02-22 04:54:56.923 +01:00 [INF] Request finished in 210.0859ms 200 application/json;charset=utf-8
2023-02-22 04:55:12.766 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 04:55:12.995 +01:00 [INF] Successfully validated the token.
2023-02-22 04:55:13.006 +01:00 [INF] Authorization was successful.
2023-02-22 04:55:13.009 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:55:13.062 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 04:55:14.124 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:55:14.124 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:55:14.125 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 04:55:14.162 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 04:55:14.893 +01:00 [INF] Executed DbCommand (75ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 04:55:18.357 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 04:55:18.556 +01:00 [INF] Method finished executing with result: 
2023-02-22 04:55:18.559 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 04:55:20.103 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 04:55:20.116 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 7044.488ms
2023-02-22 04:55:20.119 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 04:55:20.119 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 7352.6602 ms
2023-02-22 04:55:20.123 +01:00 [INF] Request finished in 7357.725ms 200 text/plain; charset=utf-8
2023-02-22 05:03:55.025 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 05:03:55.772 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 05:03:55.773 +01:00 [INF] Hosting environment: Development
2023-02-22 05:03:55.773 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 05:03:55.833 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 05:03:56.435 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 545.0146 ms
2023-02-22 05:03:56.449 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 05:03:56.452 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 05:03:56.454 +01:00 [INF] Request finished in 631.7402ms 200 text/html;charset=utf-8
2023-02-22 05:03:56.485 +01:00 [INF] Request finished in 35.9849ms 200 application/javascript; charset=utf-8
2023-02-22 05:03:56.523 +01:00 [INF] Request finished in 71.6808ms 200 text/javascript; charset=UTF-8
2023-02-22 05:03:56.632 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 05:03:56.908 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 275.3981 ms
2023-02-22 05:03:56.908 +01:00 [INF] Request finished in 276.72ms 200 application/json;charset=utf-8
2023-02-22 05:04:14.249 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:04:14.503 +01:00 [INF] Successfully validated the token.
2023-02-22 05:04:14.509 +01:00 [INF] Authorization was successful.
2023-02-22 05:04:14.509 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:04:14.552 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:04:15.699 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:04:15.699 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:04:15.699 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:04:15.739 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:04:16.440 +01:00 [INF] Executed DbCommand (75ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:04:19.964 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:04:20.169 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:04:20.171 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 05:04:22.505 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:04:22.514 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 7956.1866ms
2023-02-22 05:04:22.515 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:04:22.515 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 8265.7382 ms
2023-02-22 05:04:22.519 +01:00 [INF] Request finished in 8270.1057ms 200 text/plain; charset=utf-8
2023-02-22 05:05:38.985 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-02-22 05:05:38.992 +01:00 [INF] Successfully validated the token.
2023-02-22 05:05:38.992 +01:00 [INF] Authorization was successful.
2023-02-22 05:05:38.993 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 05:05:39.017 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:05:39.058 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-22 05:05:39.089 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:05:39.102 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-22 05:05:39.125 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 05:05:39.186 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 05:05:39.484 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-02-22 05:05:39.538 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-02-22 05:05:39.539 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 05:05:39.542 +01:00 [INF] SQL Successfully with result affected: 1
2023-02-22 05:05:39.549 +01:00 [INF] Order successfully placed with order ID of 4
2023-02-22 05:05:39.551 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 05:05:39.554 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 536.5651ms
2023-02-22 05:05:39.554 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 05:05:39.555 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 568.3647 ms
2023-02-22 05:05:39.556 +01:00 [INF] Request finished in 574.6922ms 200 application/json; charset=utf-8
2023-02-22 05:05:45.088 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:05:45.092 +01:00 [INF] Successfully validated the token.
2023-02-22 05:05:45.096 +01:00 [INF] Authorization was successful.
2023-02-22 05:05:45.097 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:05:45.099 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:05:45.125 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:05:45.133 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:05:56.468 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:05:56.473 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:05:56.473 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 05:05:57.130 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:05:57.132 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 12030.7423ms
2023-02-22 05:05:57.132 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:05:57.132 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 12042.7391 ms
2023-02-22 05:05:57.133 +01:00 [INF] Request finished in 12045.9894ms 200 text/plain; charset=utf-8
2023-02-22 05:09:05.711 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 05:09:06.378 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 05:09:06.378 +01:00 [INF] Hosting environment: Development
2023-02-22 05:09:06.378 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 05:09:06.426 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 05:09:06.884 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 406.1020 ms
2023-02-22 05:09:06.916 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 05:09:06.916 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 05:09:06.919 +01:00 [INF] Request finished in 501.2957ms 200 text/html;charset=utf-8
2023-02-22 05:09:06.929 +01:00 [INF] Request finished in 13.1938ms 200 application/javascript; charset=utf-8
2023-02-22 05:09:06.994 +01:00 [INF] Request finished in 77.4251ms 200 text/javascript; charset=UTF-8
2023-02-22 05:09:07.095 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 05:09:07.332 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 235.1773 ms
2023-02-22 05:09:07.333 +01:00 [INF] Request finished in 237.6418ms 200 application/json;charset=utf-8
2023-02-22 05:09:31.600 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:09:31.837 +01:00 [INF] Successfully validated the token.
2023-02-22 05:09:31.844 +01:00 [INF] Authorization was successful.
2023-02-22 05:09:31.845 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:09:31.937 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:09:33.034 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:09:33.034 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:09:33.034 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:09:33.071 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:09:33.830 +01:00 [INF] Executed DbCommand (91ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:09:33.936 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__customerID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[customerId] = @__customerID_0
2023-02-22 05:09:37.697 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.Database.DBsets.orders'.
2023-02-22 05:09:37.714 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 5771.7014ms
2023-02-22 05:09:37.715 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:09:37.716 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 6115.2335 ms
2023-02-22 05:09:37.720 +01:00 [INF] Request finished in 6120.6879ms 200 application/json; charset=utf-8
2023-02-22 05:11:03.827 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-02-22 05:11:03.834 +01:00 [INF] Successfully validated the token.
2023-02-22 05:11:03.835 +01:00 [INF] Authorization was successful.
2023-02-22 05:11:03.835 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 05:11:03.854 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:11:03.904 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-22 05:11:03.936 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:11:03.949 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-22 05:11:03.968 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 05:11:04.026 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 05:11:04.037 +01:00 [INF] Wrong Amount for the Fee 'Early Childhood Education'
2023-02-22 05:11:04.041 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:11:04.042 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 187.5309ms
2023-02-22 05:11:04.043 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 05:11:04.044 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 216.2582 ms
2023-02-22 05:11:04.045 +01:00 [INF] Request finished in 225.2286ms 200 text/plain; charset=utf-8
2023-02-22 05:11:12.991 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-02-22 05:11:13.010 +01:00 [INF] Successfully validated the token.
2023-02-22 05:11:13.016 +01:00 [INF] Authorization was successful.
2023-02-22 05:11:13.017 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 05:11:13.019 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:11:13.027 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-22 05:11:13.038 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:11:13.050 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-22 05:11:13.056 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 05:11:13.058 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 05:11:13.325 +01:00 [INF] Executed DbCommand (19ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-02-22 05:11:13.388 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-02-22 05:11:13.413 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 05:11:13.631 +01:00 [INF] SQL Successfully with result affected: 1
2023-02-22 05:11:13.636 +01:00 [INF] Order successfully placed with order ID of 5
2023-02-22 05:11:13.638 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 05:11:13.640 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 619.041ms
2023-02-22 05:11:13.640 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 05:11:13.641 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 635.2529 ms
2023-02-22 05:11:13.643 +01:00 [INF] Request finished in 653.1091ms 200 application/json; charset=utf-8
2023-02-22 05:11:18.502 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:11:18.506 +01:00 [INF] Successfully validated the token.
2023-02-22 05:11:18.508 +01:00 [INF] Authorization was successful.
2023-02-22 05:11:18.509 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:11:18.510 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:11:18.513 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:11:18.519 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:11:18.522 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[customerId] = @__customerID_0
2023-02-22 05:11:23.875 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.Database.DBsets.orders'.
2023-02-22 05:11:23.878 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 5367.3866ms
2023-02-22 05:11:23.880 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:11:23.880 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 5376.8851 ms
2023-02-22 05:11:23.881 +01:00 [INF] Request finished in 5378.3598ms 200 application/json; charset=utf-8
2023-02-22 05:14:40.717 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 05:14:41.279 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 05:14:41.280 +01:00 [INF] Hosting environment: Development
2023-02-22 05:14:41.280 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 05:14:41.339 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 05:14:41.836 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 432.5113 ms
2023-02-22 05:14:41.862 +01:00 [INF] Request finished in 527.8208ms 200 text/html;charset=utf-8
2023-02-22 05:14:41.875 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 05:14:41.875 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 05:14:41.881 +01:00 [INF] Request finished in 6.0803ms 200 application/javascript; charset=utf-8
2023-02-22 05:14:41.933 +01:00 [INF] Request finished in 58.0122ms 200 text/javascript; charset=UTF-8
2023-02-22 05:14:42.030 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 05:14:42.264 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 233.0064 ms
2023-02-22 05:14:42.264 +01:00 [INF] Request finished in 234.2904ms 200 application/json;charset=utf-8
2023-02-22 05:15:15.687 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:15:15.965 +01:00 [INF] Successfully validated the token.
2023-02-22 05:15:15.972 +01:00 [INF] Authorization was successful.
2023-02-22 05:15:15.974 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:15:16.032 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:15:17.143 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:15:17.144 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:15:17.144 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:15:17.180 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:15:17.900 +01:00 [INF] Executed DbCommand (101ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:15:18.023 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__customerID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN NOT EXISTS (
        SELECT 1
        FROM [orders] AS [o]
        WHERE [o].[customerId] <> @__customerID_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-02-22 05:15:20.517 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Boolean'.
2023-02-22 05:15:20.531 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 4492.8395ms
2023-02-22 05:15:20.532 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:15:20.532 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 4844.9432 ms
2023-02-22 05:15:20.537 +01:00 [INF] Request finished in 4854.1945ms 200 application/json; charset=utf-8
2023-02-22 05:20:08.512 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 05:20:09.051 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 05:20:09.051 +01:00 [INF] Hosting environment: Development
2023-02-22 05:20:09.051 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 05:20:09.085 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 05:20:09.507 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 370.8080 ms
2023-02-22 05:20:09.526 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 05:20:09.526 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 05:20:09.528 +01:00 [INF] Request finished in 447.4784ms 200 text/html;charset=utf-8
2023-02-22 05:20:09.535 +01:00 [INF] Request finished in 9.3089ms 200 application/javascript; charset=utf-8
2023-02-22 05:20:09.619 +01:00 [INF] Request finished in 93.8884ms 200 text/javascript; charset=UTF-8
2023-02-22 05:20:09.698 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 05:20:09.941 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 243.0330 ms
2023-02-22 05:20:09.942 +01:00 [INF] Request finished in 244.0804ms 200 application/json;charset=utf-8
2023-02-22 05:20:23.696 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:20:23.894 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-02-22 05:20:23.963 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2023-02-22 05:20:23.972 +01:00 [INF] Authorization failed.
2023-02-22 05:20:23.979 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-02-22 05:20:23.980 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 401 in 283.2728 ms
2023-02-22 05:20:23.986 +01:00 [INF] Request finished in 286.2046ms 401 
2023-02-22 05:20:57.980 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 68
2023-02-22 05:20:57.990 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:20:58.028 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 05:20:58.429 +01:00 [INF] Login request received is Username: mbokodaniel@gmail.com
2023-02-22 05:20:59.188 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:20:59.188 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:20:59.189 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:20:59.252 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:20:59.995 +01:00 [INF] Executed DbCommand (62ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 05:21:00.118 +01:00 [INF] The Username of the current user is: mbokodaniel@gmail.com
2023-02-22 05:21:00.118 +01:00 [INF] Username: mbokodaniel@gmail.com successfully logged in
2023-02-22 05:21:00.161 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:21:00.171 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2135.011ms
2023-02-22 05:21:00.172 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:21:00.172 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 2190.8668 ms
2023-02-22 05:21:00.177 +01:00 [INF] Request finished in 2200.594ms 200 text/plain; charset=utf-8
2023-02-22 05:21:24.428 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:21:24.449 +01:00 [INF] Successfully validated the token.
2023-02-22 05:21:24.455 +01:00 [INF] Authorization was successful.
2023-02-22 05:21:24.458 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:21:24.465 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:21:24.515 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:21:24.571 +01:00 [INF] Executed DbCommand (26ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:21:42.119 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:21:51.321 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:21:56.202 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 05:22:41.604 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:22:41.607 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 77142.3433ms
2023-02-22 05:22:41.608 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:22:41.609 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 77179.6261 ms
2023-02-22 05:22:41.609 +01:00 [INF] Request finished in 77181.7917ms 200 text/plain; charset=utf-8
2023-02-22 05:24:34.350 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 05:24:34.875 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 05:24:34.876 +01:00 [INF] Hosting environment: Development
2023-02-22 05:24:34.876 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 05:24:34.910 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 05:24:35.290 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 343.0384 ms
2023-02-22 05:24:35.320 +01:00 [INF] Request finished in 413.4713ms 200 text/html;charset=utf-8
2023-02-22 05:24:35.367 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 05:24:35.368 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 05:24:35.386 +01:00 [INF] Request finished in 17.9965ms 200 application/javascript; charset=utf-8
2023-02-22 05:24:35.438 +01:00 [INF] Request finished in 71.1429ms 200 text/javascript; charset=UTF-8
2023-02-22 05:24:35.521 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 05:24:35.736 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 214.8298 ms
2023-02-22 05:24:35.736 +01:00 [INF] Request finished in 215.5606ms 200 application/json;charset=utf-8
2023-02-22 05:25:03.963 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-22 05:25:03.986 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:25:04.044 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 05:25:04.781 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-22 05:25:06.364 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:25:06.365 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:25:06.365 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:25:06.431 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:25:07.384 +01:00 [INF] Executed DbCommand (91ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 05:25:07.526 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-22 05:25:07.527 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-22 05:25:07.743 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:25:07.754 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 3701.0599ms
2023-02-22 05:25:07.755 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:25:07.755 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 3791.2978 ms
2023-02-22 05:25:07.761 +01:00 [INF] Request finished in 3798.7834ms 200 text/plain; charset=utf-8
2023-02-22 05:25:31.662 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:25:31.753 +01:00 [INF] Successfully validated the token.
2023-02-22 05:25:31.759 +01:00 [INF] Authorization was successful.
2023-02-22 05:25:31.762 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:25:31.771 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:25:31.839 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:25:31.887 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
2023-02-22 05:25:39.131 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.orderModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 05:25:39.141 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 7369.4462ms
2023-02-22 05:25:39.142 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:25:39.142 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 7479.0990 ms
2023-02-22 05:25:39.143 +01:00 [INF] Request finished in 7480.8174ms 200 application/json; charset=utf-8
2023-02-22 05:26:21.143 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 68
2023-02-22 05:26:21.147 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:26:21.149 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 05:26:21.155 +01:00 [INF] Login request received is Username: mbokodaniel@gmail.com
2023-02-22 05:26:21.167 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:26:21.175 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 05:26:21.176 +01:00 [INF] The Username of the current user is: mbokodaniel@gmail.com
2023-02-22 05:26:21.176 +01:00 [INF] Username: mbokodaniel@gmail.com successfully logged in
2023-02-22 05:26:21.179 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:26:21.181 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 31.4322ms
2023-02-22 05:26:21.181 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:26:21.182 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 36.3826 ms
2023-02-22 05:26:21.182 +01:00 [INF] Request finished in 41.6752ms 200 text/plain; charset=utf-8
2023-02-22 05:26:41.144 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:26:41.150 +01:00 [INF] Successfully validated the token.
2023-02-22 05:26:41.152 +01:00 [INF] Authorization was successful.
2023-02-22 05:26:41.152 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:26:41.153 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:26:41.158 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:26:41.200 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:26:57.121 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:26:57.315 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:26:57.316 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 05:26:58.263 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:26:58.265 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 17111.2739ms
2023-02-22 05:26:58.265 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:26:58.266 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 17119.9362 ms
2023-02-22 05:26:58.267 +01:00 [INF] Request finished in 17122.4781ms 200 text/plain; charset=utf-8
2023-02-22 05:28:08.913 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:28:08.916 +01:00 [INF] Successfully validated the token.
2023-02-22 05:28:08.921 +01:00 [INF] Authorization was successful.
2023-02-22 05:28:08.922 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:28:08.924 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:28:08.930 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:28:08.935 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:28:24.735 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:28:24.978 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:28:52.595 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 43671.2887ms
2023-02-22 05:28:52.596 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:28:52.598 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at catalogueService.Controllers.OrdersController.GetAllWalkDifficulties()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-02-22 05:28:52.649 +01:00 [ERR] HTTP GET /api/Orders/View Registered Payments responded 500 in 43734.7676 ms
2023-02-22 05:28:52.653 +01:00 [INF] Request finished in 43739.6109ms 500 text/plain
2023-02-22 05:28:56.359 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:28:56.361 +01:00 [INF] Successfully validated the token.
2023-02-22 05:28:56.362 +01:00 [INF] Authorization was successful.
2023-02-22 05:28:56.362 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:28:56.363 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:28:56.366 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:28:56.372 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:28:56.375 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:28:56.379 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:28:56.379 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 05:28:58.385 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:28:58.391 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 2027.4033ms
2023-02-22 05:28:58.391 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:28:58.392 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 2032.6084 ms
2023-02-22 05:28:58.392 +01:00 [INF] Request finished in 2033.8934ms 200 text/plain; charset=utf-8
2023-02-22 05:53:37.061 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 05:53:37.672 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 05:53:37.672 +01:00 [INF] Hosting environment: Development
2023-02-22 05:53:37.672 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 05:53:37.713 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 05:53:38.215 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 455.8524 ms
2023-02-22 05:53:38.247 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 05:53:38.250 +01:00 [INF] Request finished in 542.1702ms 200 text/html;charset=utf-8
2023-02-22 05:53:38.297 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 05:53:38.323 +01:00 [INF] Request finished in 76.2468ms 200 application/javascript; charset=utf-8
2023-02-22 05:53:38.343 +01:00 [INF] Request finished in 45.6454ms 200 text/javascript; charset=UTF-8
2023-02-22 05:53:38.417 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 05:53:38.601 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 184.0607 ms
2023-02-22 05:53:38.605 +01:00 [INF] Request finished in 187.7187ms 200 application/json;charset=utf-8
2023-02-22 05:54:08.574 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 68
2023-02-22 05:54:08.588 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:54:08.627 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 05:54:09.044 +01:00 [INF] Login request received is Username: mbokodaniel@gmail.com
2023-02-22 05:54:09.775 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:54:09.775 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:54:09.775 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 05:54:09.836 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:54:10.599 +01:00 [INF] Executed DbCommand (80ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 05:54:10.718 +01:00 [INF] The Username of the current user is: mbokodaniel@gmail.com
2023-02-22 05:54:10.718 +01:00 [INF] Username: mbokodaniel@gmail.com successfully logged in
2023-02-22 05:54:10.912 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:54:10.923 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2287.0364ms
2023-02-22 05:54:10.925 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 05:54:10.925 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 2349.3645 ms
2023-02-22 05:54:10.931 +01:00 [INF] Request finished in 2359.9262ms 200 text/plain; charset=utf-8
2023-02-22 05:54:40.152 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:54:40.243 +01:00 [INF] Successfully validated the token.
2023-02-22 05:54:40.250 +01:00 [INF] Authorization was successful.
2023-02-22 05:54:40.250 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:54:40.262 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:54:40.323 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:54:40.372 +01:00 [INF] Executed DbCommand (16ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:54:40.420 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:54:40.636 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:54:40.637 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 05:55:01.630 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:55:01.633 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 21371.1338ms
2023-02-22 05:55:01.634 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:55:01.634 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 21481.2755 ms
2023-02-22 05:55:01.635 +01:00 [INF] Request finished in 21482.6704ms 200 text/plain; charset=utf-8
2023-02-22 05:58:35.984 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 05:58:35.993 +01:00 [INF] Successfully validated the token.
2023-02-22 05:58:35.998 +01:00 [INF] Authorization was successful.
2023-02-22 05:58:36.000 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:58:36.001 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 05:58:36.013 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 05:58:36.022 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 05:58:36.027 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 05:58:36.033 +01:00 [INF] Method finished executing with result: 
2023-02-22 05:58:36.033 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 05:58:38.011 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 05:58:38.013 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 2012.0432ms
2023-02-22 05:58:38.014 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 05:58:38.014 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 2028.5658 ms
2023-02-22 05:58:38.014 +01:00 [INF] Request finished in 2034.2712ms 200 text/plain; charset=utf-8
2023-02-22 06:01:26.182 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 06:01:26.646 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 06:01:26.647 +01:00 [INF] Hosting environment: Development
2023-02-22 06:01:26.647 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 06:01:26.687 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 06:01:27.037 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 315.2992 ms
2023-02-22 06:01:27.064 +01:00 [INF] Request finished in 381.8407ms 200 text/html;charset=utf-8
2023-02-22 06:01:27.066 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 06:01:27.073 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 06:01:27.102 +01:00 [INF] Request finished in 36.1388ms 200 application/javascript; charset=utf-8
2023-02-22 06:01:27.117 +01:00 [INF] Request finished in 43.6604ms 200 text/javascript; charset=UTF-8
2023-02-22 06:01:27.192 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 06:01:27.412 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 219.7313 ms
2023-02-22 06:01:27.412 +01:00 [INF] Request finished in 220.6612ms 200 application/json;charset=utf-8
2023-02-22 06:01:42.845 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:01:43.088 +01:00 [INF] Successfully validated the token.
2023-02-22 06:01:43.097 +01:00 [INF] Authorization was successful.
2023-02-22 06:01:43.098 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:01:43.153 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:01:44.327 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:01:44.328 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:01:44.328 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:01:44.366 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:01:45.077 +01:00 [INF] Executed DbCommand (71ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:01:45.245 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:01:45.479 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:01:45.480 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:01:45.493 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:01:45.501 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 2343.1344ms
2023-02-22 06:01:45.504 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:01:45.504 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 2659.0164 ms
2023-02-22 06:01:45.508 +01:00 [INF] Request finished in 2663.9561ms 200 text/plain; charset=utf-8
2023-02-22 06:02:47.404 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:02:47.414 +01:00 [INF] Successfully validated the token.
2023-02-22 06:02:47.416 +01:00 [INF] Authorization was successful.
2023-02-22 06:02:47.416 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:02:47.417 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:02:47.459 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:02:47.483 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:02:47.485 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:02:47.489 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:02:47.489 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:02:47.492 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:02:47.496 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 78.6837ms
2023-02-22 06:02:47.496 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:02:47.497 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 91.3694 ms
2023-02-22 06:02:47.497 +01:00 [INF] Request finished in 95.4651ms 200 text/plain; charset=utf-8
2023-02-22 06:02:50.816 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:02:50.826 +01:00 [INF] Successfully validated the token.
2023-02-22 06:02:50.830 +01:00 [INF] Authorization was successful.
2023-02-22 06:02:50.831 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:02:50.831 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:02:50.848 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:02:50.856 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:02:50.859 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:02:50.862 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:02:50.863 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:02:50.863 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:02:50.865 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 32.3209ms
2023-02-22 06:02:50.867 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:02:50.868 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 49.8512 ms
2023-02-22 06:02:50.868 +01:00 [INF] Request finished in 56.9827ms 200 text/plain; charset=utf-8
2023-02-22 06:03:06.955 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 06:03:07.664 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 06:03:07.664 +01:00 [INF] Hosting environment: Development
2023-02-22 06:03:07.664 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 06:03:07.707 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 06:03:08.212 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 452.7620 ms
2023-02-22 06:03:08.241 +01:00 [INF] Request finished in 539.2306ms 200 text/html;charset=utf-8
2023-02-22 06:03:08.274 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 06:03:08.274 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 06:03:08.292 +01:00 [INF] Request finished in 18.3901ms 200 application/javascript; charset=utf-8
2023-02-22 06:03:08.327 +01:00 [INF] Request finished in 53.3489ms 200 text/javascript; charset=UTF-8
2023-02-22 06:03:08.445 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 06:03:08.727 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 281.0409 ms
2023-02-22 06:03:08.727 +01:00 [INF] Request finished in 281.913ms 200 application/json;charset=utf-8
2023-02-22 06:03:24.160 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:03:24.400 +01:00 [INF] Successfully validated the token.
2023-02-22 06:03:24.413 +01:00 [INF] Authorization was successful.
2023-02-22 06:03:24.414 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:03:24.481 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:03:25.615 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:03:25.615 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:03:25.615 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:03:25.650 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:03:26.428 +01:00 [INF] Executed DbCommand (119ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:03:26.540 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:03:26.751 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:03:26.754 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:03:26.774 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:03:26.790 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 2300.3571ms
2023-02-22 06:03:26.791 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:03:26.792 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 2630.3827 ms
2023-02-22 06:03:26.795 +01:00 [INF] Request finished in 2635.0496ms 200 text/plain; charset=utf-8
2023-02-22 06:04:28.031 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 06:04:28.759 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 06:04:28.759 +01:00 [INF] Hosting environment: Development
2023-02-22 06:04:28.759 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 06:04:28.805 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 06:04:29.291 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 388.4217 ms
2023-02-22 06:04:29.309 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 06:04:29.314 +01:00 [INF] Request finished in 513.3275ms 200 text/html;charset=utf-8
2023-02-22 06:04:29.329 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 06:04:29.358 +01:00 [INF] Request finished in 48.8313ms 200 application/javascript; charset=utf-8
2023-02-22 06:04:29.413 +01:00 [INF] Request finished in 84.1541ms 200 text/javascript; charset=UTF-8
2023-02-22 06:04:29.519 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 06:04:29.745 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 225.8973 ms
2023-02-22 06:04:29.746 +01:00 [INF] Request finished in 226.8385ms 200 application/json;charset=utf-8
2023-02-22 06:04:45.514 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:04:45.752 +01:00 [INF] Successfully validated the token.
2023-02-22 06:04:45.759 +01:00 [INF] Authorization was successful.
2023-02-22 06:04:45.762 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:04:45.808 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:04:46.966 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:04:46.966 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:04:46.966 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:04:47.003 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:04:47.723 +01:00 [INF] Executed DbCommand (78ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:04:47.867 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:04:48.066 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:04:48.068 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:04:48.079 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:04:48.090 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 2274.4965ms
2023-02-22 06:04:48.091 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:04:48.092 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 2576.5510 ms
2023-02-22 06:04:48.095 +01:00 [INF] Request finished in 2581.2307ms 200 text/plain; charset=utf-8
2023-02-22 06:07:11.158 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 06:07:11.678 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 06:07:11.678 +01:00 [INF] Hosting environment: Development
2023-02-22 06:07:11.679 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 06:07:11.729 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 06:07:12.203 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 413.0171 ms
2023-02-22 06:07:12.214 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 06:07:12.214 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 06:07:12.220 +01:00 [INF] Request finished in 5.203ms 200 application/javascript; charset=utf-8
2023-02-22 06:07:12.220 +01:00 [INF] Request finished in 499.4978ms 200 text/html;charset=utf-8
2023-02-22 06:07:12.342 +01:00 [INF] Request finished in 127.5484ms 200 text/javascript; charset=UTF-8
2023-02-22 06:07:12.435 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 06:07:12.670 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 233.7362 ms
2023-02-22 06:07:12.670 +01:00 [INF] Request finished in 234.4895ms 200 application/json;charset=utf-8
2023-02-22 06:07:28.018 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:07:28.289 +01:00 [INF] Successfully validated the token.
2023-02-22 06:07:28.303 +01:00 [INF] Authorization was successful.
2023-02-22 06:07:28.304 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:07:28.354 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:07:29.454 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:07:29.454 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:07:29.454 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:07:29.498 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:07:30.258 +01:00 [INF] Executed DbCommand (89ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:07:30.412 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:07:30.635 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:07:30.637 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:07:30.664 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:07:30.673 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 2313.4939ms
2023-02-22 06:07:30.674 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:07:30.675 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 2655.9070 ms
2023-02-22 06:07:30.683 +01:00 [INF] Request finished in 2665.0491ms 200 text/plain; charset=utf-8
2023-02-22 06:09:15.917 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 06:09:16.676 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 06:09:16.676 +01:00 [INF] Hosting environment: Development
2023-02-22 06:09:16.676 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 06:09:16.732 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 06:09:17.263 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 467.9950 ms
2023-02-22 06:09:17.278 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 06:09:17.279 +01:00 [INF] Request finished in 553.5789ms 200 text/html;charset=utf-8
2023-02-22 06:09:17.282 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 06:09:17.284 +01:00 [INF] Request finished in 5.5877ms 200 application/javascript; charset=utf-8
2023-02-22 06:09:17.339 +01:00 [INF] Request finished in 56.4557ms 200 text/javascript; charset=UTF-8
2023-02-22 06:09:17.440 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 06:09:17.711 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 271.4935 ms
2023-02-22 06:09:17.712 +01:00 [INF] Request finished in 272.2733ms 200 application/json;charset=utf-8
2023-02-22 06:12:01.922 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:12:02.162 +01:00 [INF] Successfully validated the token.
2023-02-22 06:12:02.167 +01:00 [INF] Authorization was successful.
2023-02-22 06:12:02.168 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:12:02.237 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:12:03.310 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:12:03.310 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:12:03.310 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:12:03.347 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:12:04.082 +01:00 [INF] Executed DbCommand (88ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:12:04.196 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:12:04.401 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:12:04.403 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:12:04.415 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:12:04.426 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 2182.1683ms
2023-02-22 06:12:04.428 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:12:04.428 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 2505.8544 ms
2023-02-22 06:12:04.433 +01:00 [INF] Request finished in 2511.3657ms 200 text/plain; charset=utf-8
2023-02-22 06:31:26.615 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 06:31:27.156 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 06:31:27.156 +01:00 [INF] Hosting environment: Development
2023-02-22 06:31:27.156 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 06:31:27.201 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 06:31:27.697 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 433.2667 ms
2023-02-22 06:31:27.714 +01:00 [INF] Request finished in 518.8164ms 200 text/html;charset=utf-8
2023-02-22 06:31:27.775 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 06:31:27.779 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 06:31:27.837 +01:00 [INF] Request finished in 58.0316ms 200 application/javascript; charset=utf-8
2023-02-22 06:31:27.870 +01:00 [INF] Request finished in 94.3516ms 200 text/javascript; charset=UTF-8
2023-02-22 06:31:27.984 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 06:31:28.247 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 262.1590 ms
2023-02-22 06:31:28.247 +01:00 [INF] Request finished in 262.9925ms 200 application/json;charset=utf-8
2023-02-22 06:32:03.022 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 68
2023-02-22 06:32:03.029 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 06:32:03.093 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 06:32:03.579 +01:00 [INF] Login request received is Username: mbokodaniel@gmail.com
2023-02-22 06:32:04.277 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:32:04.277 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:32:04.277 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 06:32:04.318 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:32:05.085 +01:00 [INF] Executed DbCommand (75ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 06:32:05.173 +01:00 [INF] The Username of the current user is: mbokodaniel@gmail.com
2023-02-22 06:32:05.173 +01:00 [INF] Username: mbokodaniel@gmail.com successfully logged in
2023-02-22 06:32:05.341 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:32:05.352 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2251.1421ms
2023-02-22 06:32:05.353 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 06:32:05.353 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 2329.6867 ms
2023-02-22 06:32:05.357 +01:00 [INF] Request finished in 2336.3463ms 200 text/plain; charset=utf-8
2023-02-22 06:32:56.249 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:32:56.356 +01:00 [INF] Successfully validated the token.
2023-02-22 06:32:56.366 +01:00 [INF] Authorization was successful.
2023-02-22 06:32:56.366 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:32:56.373 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:32:56.418 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:32:56.467 +01:00 [INF] Executed DbCommand (17ms) [Parameters=[@__thisUser_userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__thisUser_userId_0
2023-02-22 06:32:56.536 +01:00 [INF] SQL About executing Select * from  orders where customerID = @customerID
2023-02-22 06:32:56.769 +01:00 [INF] Method finished executing with result: 
2023-02-22 06:32:56.770 +01:00 [INF] Order table successfully retrieved for query: Select * from  orders where customerID = @customerID
2023-02-22 06:32:56.777 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:32:56.781 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 407.6436ms
2023-02-22 06:32:56.783 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:32:56.783 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 532.9075 ms
2023-02-22 06:32:56.784 +01:00 [INF] Request finished in 535.4444ms 200 text/plain; charset=utf-8
2023-02-22 06:33:22.440 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=3  0
2023-02-22 06:33:22.444 +01:00 [INF] Successfully validated the token.
2023-02-22 06:33:22.445 +01:00 [INF] Authorization was successful.
2023-02-22 06:33:22.445 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:22.451 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:33:22.496 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:33:22.520 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:33:22.559 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:33:22.732 +01:00 [ERR]    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseDecimal(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Decimal.Parse(String s)
   at catalogueService.Controllers.OrdersController.PurchaseAsync(Int32 orderID) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\OrdersController.cs:line 252
2023-02-22 06:33:22.734 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:33:22.742 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 290.9389ms
2023-02-22 06:33:22.743 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:22.743 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 400 in 301.7696 ms
2023-02-22 06:33:22.743 +01:00 [INF] Request finished in 305.6334ms 400 text/plain; charset=utf-8
2023-02-22 06:33:32.298 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=3  0
2023-02-22 06:33:32.307 +01:00 [INF] Successfully validated the token.
2023-02-22 06:33:32.316 +01:00 [INF] Authorization was successful.
2023-02-22 06:33:32.318 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:32.321 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:33:32.335 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:33:32.347 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:33:32.352 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:33:32.390 +01:00 [ERR]    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseDecimal(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Decimal.Parse(String s)
   at catalogueService.Controllers.OrdersController.PurchaseAsync(Int32 orderID) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\OrdersController.cs:line 252
2023-02-22 06:33:32.391 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:33:32.395 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 72.3114ms
2023-02-22 06:33:32.395 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:32.395 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 400 in 94.9933 ms
2023-02-22 06:33:32.396 +01:00 [INF] Request finished in 98.3671ms 400 text/plain; charset=utf-8
2023-02-22 06:33:40.770 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=1  0
2023-02-22 06:33:40.774 +01:00 [INF] Successfully validated the token.
2023-02-22 06:33:40.775 +01:00 [INF] Authorization was successful.
2023-02-22 06:33:40.775 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:40.777 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:33:40.786 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:33:40.792 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:33:40.794 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:33:40.834 +01:00 [ERR]    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseDecimal(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Decimal.Parse(String s)
   at catalogueService.Controllers.OrdersController.PurchaseAsync(Int32 orderID) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\OrdersController.cs:line 252
2023-02-22 06:33:40.835 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:33:40.837 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 58.6847ms
2023-02-22 06:33:40.837 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:40.837 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 400 in 65.1150 ms
2023-02-22 06:33:40.837 +01:00 [INF] Request finished in 67.7674ms 400 text/plain; charset=utf-8
2023-02-22 06:33:57.871 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=2  0
2023-02-22 06:33:57.874 +01:00 [INF] Successfully validated the token.
2023-02-22 06:33:57.876 +01:00 [INF] Authorization was successful.
2023-02-22 06:33:57.877 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:57.878 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:33:57.886 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:33:57.899 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:33:57.917 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:33:57.956 +01:00 [ERR]    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseDecimal(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Decimal.Parse(String s)
   at catalogueService.Controllers.OrdersController.PurchaseAsync(Int32 orderID) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\OrdersController.cs:line 252
2023-02-22 06:33:57.957 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:33:57.958 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 77.9296ms
2023-02-22 06:33:57.958 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:33:57.959 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 400 in 87.3512 ms
2023-02-22 06:33:57.959 +01:00 [INF] Request finished in 88.9399ms 400 text/plain; charset=utf-8
2023-02-22 06:34:19.177 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=2  0
2023-02-22 06:34:19.181 +01:00 [INF] Successfully validated the token.
2023-02-22 06:34:19.182 +01:00 [INF] Authorization was successful.
2023-02-22 06:34:19.182 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:34:19.185 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:34:19.190 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:34:19.201 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:34:24.807 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:34:46.217 +01:00 [ERR]    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseDecimal(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Decimal.Parse(String s)
   at catalogueService.Controllers.OrdersController.PurchaseAsync(Int32 orderID) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\OrdersController.cs:line 252
2023-02-22 06:34:46.224 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:34:46.241 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 27055.1878ms
2023-02-22 06:34:46.242 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:34:46.242 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 400 in 27062.7340 ms
2023-02-22 06:34:46.243 +01:00 [INF] Request finished in 27065.9026ms 400 text/plain; charset=utf-8
2023-02-22 06:34:50.292 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=2  0
2023-02-22 06:34:50.301 +01:00 [INF] Successfully validated the token.
2023-02-22 06:34:50.304 +01:00 [INF] Authorization was successful.
2023-02-22 06:34:50.304 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:34:50.310 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:34:50.321 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:34:50.330 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:35:00.783 +01:00 [INF] Executed DbCommand (40ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:35:41.193 +01:00 [ERR]    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseDecimal(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Decimal.Parse(String s)
   at catalogueService.Controllers.OrdersController.PurchaseAsync(Int32 orderID) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\OrdersController.cs:line 252
2023-02-22 06:35:41.194 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:35:41.195 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 50884.3554ms
2023-02-22 06:35:41.196 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:35:41.196 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 400 in 50903.2967 ms
2023-02-22 06:35:41.197 +01:00 [INF] Request finished in 50905.1377ms 400 text/plain; charset=utf-8
2023-02-22 06:35:43.830 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=2  0
2023-02-22 06:35:43.832 +01:00 [INF] Successfully validated the token.
2023-02-22 06:35:43.833 +01:00 [INF] Authorization was successful.
2023-02-22 06:35:43.833 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:35:43.833 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:35:43.842 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:35:43.848 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:35:47.984 +01:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:36:08.670 +01:00 [ERR]    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseDecimal(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Decimal.Parse(String s)
   at catalogueService.Controllers.OrdersController.PurchaseAsync(Int32 orderID) in C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService\Controllers\OrdersController.cs:line 252
2023-02-22 06:36:08.671 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:36:08.672 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 24839.1402ms
2023-02-22 06:36:08.673 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:36:08.673 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 400 in 24842.7700 ms
2023-02-22 06:36:08.673 +01:00 [INF] Request finished in 24843.6453ms 400 text/plain; charset=utf-8
2023-02-22 06:36:37.293 +01:00 [INF] Request starting HTTP/2.0 PUT https://localhost:44388/api/Users/1 application/json 168
2023-02-22 06:36:37.295 +01:00 [INF] Successfully validated the token.
2023-02-22 06:36:37.299 +01:00 [INF] Authorization failed.
2023-02-22 06:36:37.302 +01:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-02-22 06:36:37.303 +01:00 [INF] HTTP PUT /api/Users/1 responded 403 in 9.5157 ms
2023-02-22 06:36:37.304 +01:00 [INF] Request finished in 11.4299ms 403 
2023-02-22 06:37:06.342 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-22 06:37:06.344 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 06:37:06.345 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 06:37:06.350 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-22 06:37:06.354 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:37:06.368 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 06:37:06.369 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-22 06:37:06.369 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-22 06:37:06.371 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:37:06.372 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 27.2607ms
2023-02-22 06:37:06.372 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 06:37:06.372 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 29.9018 ms
2023-02-22 06:37:06.372 +01:00 [INF] Request finished in 30.5883ms 200 text/plain; charset=utf-8
2023-02-22 06:37:43.477 +01:00 [INF] Request starting HTTP/2.0 PUT https://localhost:44388/api/Users/2 application/json 168
2023-02-22 06:37:43.480 +01:00 [INF] Successfully validated the token.
2023-02-22 06:37:43.481 +01:00 [INF] Authorization was successful.
2023-02-22 06:37:43.481 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService)'
2023-02-22 06:37:43.492 +01:00 [INF] Route matched with {action = "UpdateWalkDifficulty", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateWalkDifficultyAsync(Int32, catalogueService.requestETresponse.userRequest) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-02-22 06:37:43.526 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:37:43.546 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__p_0
2023-02-22 06:37:43.683 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [role] = @p0, [wallet] = @p1
WHERE [userId] = @p2;
SELECT @@ROWCOUNT;
2023-02-22 06:37:43.716 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 06:37:43.720 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService) in 228.0195ms
2023-02-22 06:37:43.723 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService)'
2023-02-22 06:37:43.723 +01:00 [INF] HTTP PUT /api/Users/2 responded 200 in 245.1017 ms
2023-02-22 06:37:43.723 +01:00 [INF] Request finished in 245.7397ms 200 application/json; charset=utf-8
2023-02-22 06:38:02.394 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-22 06:38:02.397 +01:00 [INF] Successfully validated the token.
2023-02-22 06:38:02.397 +01:00 [INF] Authorization was successful.
2023-02-22 06:38:02.398 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:38:02.399 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:38:02.411 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:38:02.421 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
2023-02-22 06:38:02.447 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.orderModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 06:38:02.454 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 55.7555ms
2023-02-22 06:38:02.455 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-22 06:38:02.455 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 60.3759 ms
2023-02-22 06:38:02.456 +01:00 [INF] Request finished in 61.3534ms 200 application/json; charset=utf-8
2023-02-22 06:38:40.918 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-02-22 06:38:40.924 +01:00 [INF] Successfully validated the token.
2023-02-22 06:38:40.926 +01:00 [INF] Authorization was successful.
2023-02-22 06:38:40.926 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 06:38:40.932 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:38:40.948 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-22 06:38:40.950 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:38:40.960 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-22 06:38:40.963 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:38:40.989 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 06:38:41.068 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-02-22 06:38:41.108 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-02-22 06:38:41.108 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 06:38:41.111 +01:00 [INF] SQL Successfully with result affected: 1
2023-02-22 06:38:41.115 +01:00 [INF] Order successfully placed with order ID of 6
2023-02-22 06:38:41.116 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 06:38:41.117 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 184.5543ms
2023-02-22 06:38:41.117 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-22 06:38:41.118 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 195.6525 ms
2023-02-22 06:38:41.120 +01:00 [INF] Request finished in 202.0902ms 200 application/json; charset=utf-8
2023-02-22 06:38:50.296 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=6  0
2023-02-22 06:38:50.298 +01:00 [INF] Successfully validated the token.
2023-02-22 06:38:50.298 +01:00 [INF] Authorization was successful.
2023-02-22 06:38:50.299 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:38:50.299 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-22 06:38:50.301 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 06:38:50.315 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-22 06:38:57.576 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-22 06:38:57.581 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-22 06:38:58.932 +01:00 [INF] SQL About executing Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-02-22 06:38:58.945 +01:00 [INF] Sales table successfully updated for query: Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-02-22 06:39:03.169 +01:00 [INF] SQL About executing Update users set wallet = @wallet where userId = @userId
2023-02-22 06:39:03.174 +01:00 [INF] Customer's wallet successfully updated for query: Update users set wallet = @wallet where userId = @userId
2023-02-22 06:39:03.174 +01:00 [INF] SQL About executing Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 06:39:03.177 +01:00 [INF] Order status successfully updated for query: Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-22 06:39:03.186 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__orderId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__orderId_0
2023-02-22 06:39:03.186 +01:00 [INF] SQL About executing Update Fees set quantity = @quantity where FeeID = @FeeID
2023-02-22 06:39:03.190 +01:00 [INF] Slots left successfully updated for query: Update Fees set quantity = @quantity where FeeID = @FeeID
2023-02-22 06:39:03.190 +01:00 [INF] About generating reciept for customer: 1
2023-02-22 06:39:03.527 +01:00 [INF] Payment successfully made for the orderID: 6
2023-02-22 06:39:03.531 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 06:39:03.532 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 13232.5962ms
2023-02-22 06:39:03.532 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-22 06:39:03.533 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 13236.8412 ms
2023-02-22 06:39:03.536 +01:00 [INF] Request finished in 13239.9396ms 200 text/plain; charset=utf-8
2023-02-22 15:03:32.924 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 15:03:33.984 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 15:03:33.988 +01:00 [INF] Hosting environment: Development
2023-02-22 15:03:33.989 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 15:03:34.100 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 15:03:34.960 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 772.8555 ms
2023-02-22 15:03:35.050 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 15:03:35.054 +01:00 [INF] Request finished in 960.1333ms 200 text/html;charset=utf-8
2023-02-22 15:03:35.079 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 15:03:35.109 +01:00 [INF] Request finished in 59.3994ms 200 application/javascript; charset=utf-8
2023-02-22 15:03:35.258 +01:00 [INF] Request finished in 179.4166ms 200 text/javascript; charset=UTF-8
2023-02-22 15:03:35.388 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 15:03:35.811 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 421.0547 ms
2023-02-22 15:03:35.812 +01:00 [INF] Request finished in 423.8652ms 200 application/json;charset=utf-8
2023-02-22 15:03:54.795 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Admins  
2023-02-22 15:03:54.830 +01:00 [INF] Authorization failed.
2023-02-22 15:03:54.841 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-02-22 15:03:54.841 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Admins responded 401 in 39.3653 ms
2023-02-22 15:03:54.846 +01:00 [INF] Request finished in 51.2418ms 401 
2023-02-22 20:35:50.194 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 20:35:51.018 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 20:35:51.019 +01:00 [INF] Hosting environment: Development
2023-02-22 20:35:51.019 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 20:35:51.115 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 20:35:52.034 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 844.1519 ms
2023-02-22 20:35:52.081 +01:00 [INF] Request finished in 971.5056ms 200 text/html;charset=utf-8
2023-02-22 20:35:52.139 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 20:35:52.151 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 20:35:52.206 +01:00 [INF] Request finished in 64.7409ms 200 application/javascript; charset=utf-8
2023-02-22 20:35:52.292 +01:00 [INF] Request finished in 141.9168ms 200 text/javascript; charset=UTF-8
2023-02-22 20:35:52.473 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 20:35:52.918 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 442.5012 ms
2023-02-22 20:35:52.921 +01:00 [INF] Request finished in 448.7164ms 200 application/json;charset=utf-8
2023-02-22 22:00:09.088 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 22:00:09.772 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 22:00:09.772 +01:00 [INF] Hosting environment: Development
2023-02-22 22:00:09.773 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 22:00:09.818 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 22:00:10.382 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 465.4638 ms
2023-02-22 22:00:10.430 +01:00 [INF] Request finished in 616.7574ms 200 text/html;charset=utf-8
2023-02-22 22:00:10.448 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 22:00:10.450 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 22:00:10.460 +01:00 [INF] Request finished in 11.6493ms 200 application/javascript; charset=utf-8
2023-02-22 22:00:10.583 +01:00 [INF] Request finished in 132.934ms 200 text/javascript; charset=UTF-8
2023-02-22 22:00:10.713 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 22:00:11.091 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 375.3810 ms
2023-02-22 22:00:11.092 +01:00 [INF] Request finished in 378.3816ms 200 application/json;charset=utf-8
2023-02-22 22:03:19.141 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 22:03:19.981 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 22:03:19.982 +01:00 [INF] Hosting environment: Development
2023-02-22 22:03:19.982 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 22:03:20.025 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 22:03:20.961 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 849.4803 ms
2023-02-22 22:03:20.979 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 22:03:20.981 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 22:03:21.022 +01:00 [INF] Request finished in 31.3524ms 200 application/javascript; charset=utf-8
2023-02-22 22:03:21.113 +01:00 [INF] Request finished in 1094.8846ms 200 text/html;charset=utf-8
2023-02-22 22:03:21.174 +01:00 [INF] Request finished in 192.68ms 200 text/javascript; charset=UTF-8
2023-02-22 22:03:21.325 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 22:03:21.812 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 482.6550 ms
2023-02-22 22:03:21.814 +01:00 [INF] Request finished in 489.5699ms 200 application/json;charset=utf-8
2023-02-22 22:04:58.606 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-22 22:04:58.642 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 22:04:58.723 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 22:04:59.782 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-22 22:05:01.103 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:05:01.104 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:05:01.104 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:05:01.166 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:05:03.212 +01:00 [INF] Executed DbCommand (134ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 22:05:03.256 +01:00 [INF] There are no records for the user: mbokodavid@gmail.com
2023-02-22 22:05:03.257 +01:00 [INF] There is no user with Username: mbokodavid@gmail.com
2023-02-22 22:05:03.264 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 22:05:03.280 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 4548.4803ms
2023-02-22 22:05:03.282 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 22:05:03.284 +01:00 [INF] HTTP POST /api/Authenticate/login responded 404 in 4675.7955 ms
2023-02-22 22:05:03.291 +01:00 [INF] Request finished in 4726.1291ms 404 text/plain; charset=utf-8
2023-02-22 22:05:30.375 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-22 22:05:30.389 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 22:05:30.392 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 22:05:30.403 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-22 22:05:30.453 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:05:30.487 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 22:05:30.632 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-22 22:05:30.633 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-22 22:05:31.499 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 22:05:31.501 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 1108.2348ms
2023-02-22 22:05:31.501 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 22:05:31.502 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 1122.2717 ms
2023-02-22 22:05:31.505 +01:00 [INF] Request finished in 1137.0788ms 200 text/plain; charset=utf-8
2023-02-22 22:10:23.417 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Student application/json 397
2023-02-22 22:10:23.566 +01:00 [INF] Successfully validated the token.
2023-02-22 22:10:23.578 +01:00 [INF] Authorization was successful.
2023-02-22 22:10:23.579 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-02-22 22:10:23.594 +01:00 [INF] Route matched with {action = "AddStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:10:23.609 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService) in 14.5742ms
2023-02-22 22:10:23.612 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-02-22 22:10:23.615 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'catalogueService.Interfaces.IAdmin' while attempting to activate 'catalogueService.Controllers.AdminProfileController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)
   at lambda_method(Closure , IServiceProvider , Object[] )
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-02-22 22:10:23.742 +01:00 [ERR] HTTP POST /api/AdminProfile/Add Student responded 500 in 323.7691 ms
2023-02-22 22:10:23.753 +01:00 [INF] Request finished in 328.9763ms 500 text/plain
2023-02-22 22:13:11.838 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 22:13:12.770 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 22:13:12.770 +01:00 [INF] Hosting environment: Development
2023-02-22 22:13:12.770 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 22:13:12.811 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 22:13:13.356 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 496.5252 ms
2023-02-22 22:13:13.430 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 22:13:13.441 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 22:13:13.447 +01:00 [INF] Request finished in 639.1759ms 200 text/html;charset=utf-8
2023-02-22 22:13:13.479 +01:00 [INF] Request finished in 37.3799ms 200 application/javascript; charset=utf-8
2023-02-22 22:13:13.513 +01:00 [INF] Request finished in 83.5113ms 200 text/javascript; charset=UTF-8
2023-02-22 22:13:13.663 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 22:13:13.935 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 269.9883 ms
2023-02-22 22:13:13.936 +01:00 [INF] Request finished in 272.6258ms 200 application/json;charset=utf-8
2023-02-22 22:17:13.301 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Student application/json 395
2023-02-22 22:17:13.916 +01:00 [INF] Successfully validated the token.
2023-02-22 22:17:13.980 +01:00 [INF] Authorization was successful.
2023-02-22 22:17:13.983 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-02-22 22:17:14.231 +01:00 [INF] Route matched with {action = "AddStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:17:16.336 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:17:16.336 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:17:16.337 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:17:16.397 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:17:17.572 +01:00 [INF] Executed DbCommand (119ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Students] ([Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
SELECT [regNo]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [regNo] = scope_identity();
2023-02-22 22:17:17.734 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:17:17.756 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService) in 3513.1336ms
2023-02-22 22:17:17.757 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-02-22 22:17:17.758 +01:00 [INF] HTTP POST /api/AdminProfile/Add Student responded 200 in 4455.6475 ms
2023-02-22 22:17:17.764 +01:00 [INF] Request finished in 4465.1379ms 200 application/json; charset=utf-8
2023-02-22 22:17:36.499 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-02-22 22:17:36.517 +01:00 [INF] Successfully validated the token.
2023-02-22 22:17:36.520 +01:00 [INF] Authorization was successful.
2023-02-22 22:17:36.521 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:17:36.532 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:17:36.609 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:17:36.896 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-02-22 22:17:36.972 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:17:36.990 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 455.4269ms
2023-02-22 22:17:36.991 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:17:36.991 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 489.8541 ms
2023-02-22 22:17:36.992 +01:00 [INF] Request finished in 494.0873ms 200 application/json; charset=utf-8
2023-02-22 22:19:02.138 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Withdraw a Student?regNo=1  0
2023-02-22 22:19:02.143 +01:00 [INF] Successfully validated the token.
2023-02-22 22:19:02.146 +01:00 [INF] Authorization was successful.
2023-02-22 22:19:02.146 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:19:02.161 +01:00 [INF] Route matched with {action = "WithdrawStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] WithdrawStudentAsync(Int64) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:19:02.199 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:19:02.359 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
WHERE [s].[regNo] = @__id_0
2023-02-22 22:19:02.441 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Students]
WHERE [regNo] = @p0;
SELECT @@ROWCOUNT;
2023-02-22 22:19:02.530 +01:00 [ERR] Failed executing DbCommand (73ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (DbType = DateTime2), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [withdrawnStudents] ([regNo], [Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15);
2023-02-22 22:19:02.658 +01:00 [ERR] An exception occurred in the database while saving changes for context type 'catalogueService.Database.DBContextFiles.catalogueDBContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'withdrawnStudents' when IDENTITY_INSERT is set to OFF.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:818a9956-4b32-4943-b400-0d27e15b3af4
Error Number:544,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'withdrawnStudents' when IDENTITY_INSERT is set to OFF.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:818a9956-4b32-4943-b400-0d27e15b3af4
Error Number:544,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-02-22 22:19:03.042 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 22:19:03.045 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService) in 883.6649ms
2023-02-22 22:19:03.045 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:19:03.046 +01:00 [INF] HTTP POST /api/AdminProfile/Withdraw a Student responded 400 in 906.4584 ms
2023-02-22 22:19:03.050 +01:00 [INF] Request finished in 919.7829ms 400 text/plain; charset=utf-8
2023-02-22 22:19:35.755 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Withdraw a Student?regNo=1  0
2023-02-22 22:19:35.780 +01:00 [INF] Successfully validated the token.
2023-02-22 22:19:35.784 +01:00 [INF] Authorization was successful.
2023-02-22 22:19:35.787 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:19:35.789 +01:00 [INF] Route matched with {action = "WithdrawStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] WithdrawStudentAsync(Int64) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:19:45.014 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:19:45.065 +01:00 [INF] Executed DbCommand (40ms) [Parameters=[@__id_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
WHERE [s].[regNo] = @__id_0
2023-02-22 22:20:42.882 +01:00 [INF] Executed DbCommand (35ms) [Parameters=[@p0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Students]
WHERE [regNo] = @p0;
SELECT @@ROWCOUNT;
2023-02-22 22:20:42.892 +01:00 [ERR] Failed executing DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int64), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (DbType = DateTime2), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [withdrawnStudents] ([regNo], [Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15);
2023-02-22 22:20:42.901 +01:00 [ERR] An exception occurred in the database while saving changes for context type 'catalogueService.Database.DBContextFiles.catalogueDBContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'withdrawnStudents' when IDENTITY_INSERT is set to OFF.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:818a9956-4b32-4943-b400-0d27e15b3af4
Error Number:544,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'withdrawnStudents' when IDENTITY_INSERT is set to OFF.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:818a9956-4b32-4943-b400-0d27e15b3af4
Error Number:544,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-02-22 22:20:43.266 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 22:20:43.272 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService) in 67477.8843ms
2023-02-22 22:20:43.276 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:20:43.279 +01:00 [INF] HTTP POST /api/AdminProfile/Withdraw a Student responded 400 in 67509.2412 ms
2023-02-22 22:20:43.284 +01:00 [INF] Request finished in 67530.7679ms 400 text/plain; charset=utf-8
2023-02-22 22:24:45.817 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 22:24:46.430 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 22:24:46.431 +01:00 [INF] Hosting environment: Development
2023-02-22 22:24:46.431 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 22:24:46.497 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 22:24:47.150 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 595.5622 ms
2023-02-22 22:24:47.199 +01:00 [INF] Request finished in 708.752ms 200 text/html;charset=utf-8
2023-02-22 22:24:47.224 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 22:24:47.238 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 22:24:47.249 +01:00 [INF] Request finished in 10.7432ms 200 application/javascript; charset=utf-8
2023-02-22 22:24:47.348 +01:00 [INF] Request finished in 123.7256ms 200 text/javascript; charset=UTF-8
2023-02-22 22:24:47.475 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 22:24:47.900 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 423.0753 ms
2023-02-22 22:24:47.901 +01:00 [INF] Request finished in 426.432ms 200 application/json;charset=utf-8
2023-02-22 22:25:22.398 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Withdraw a Student?regNo=1  0
2023-02-22 22:25:22.972 +01:00 [INF] Successfully validated the token.
2023-02-22 22:25:22.993 +01:00 [INF] Authorization was successful.
2023-02-22 22:25:22.995 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:25:23.200 +01:00 [INF] Route matched with {action = "WithdrawStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] WithdrawStudentAsync(Int64) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:25:29.310 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:25:29.311 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:25:29.311 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:25:29.408 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:25:30.934 +01:00 [INF] Executed DbCommand (162ms) [Parameters=[@__id_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
WHERE [s].[regNo] = @__id_0
2023-02-22 22:25:53.301 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Students]
WHERE [regNo] = @p0;
SELECT @@ROWCOUNT;
2023-02-22 22:25:53.383 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [withdrawnStudents] ([Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
SELECT [regNo]
FROM [withdrawnStudents]
WHERE @@ROWCOUNT = 1 AND [regNo] = scope_identity();
2023-02-22 22:26:02.396 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:26:05.755 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService) in 42535.5037ms
2023-02-22 22:26:05.757 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:26:05.758 +01:00 [INF] HTTP POST /api/AdminProfile/Withdraw a Student responded 200 in 43356.7464 ms
2023-02-22 22:26:05.768 +01:00 [INF] Request finished in 43370.991ms 200 application/json; charset=utf-8
2023-02-22 22:26:21.919 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-02-22 22:26:21.954 +01:00 [INF] Successfully validated the token.
2023-02-22 22:26:21.959 +01:00 [INF] Authorization was successful.
2023-02-22 22:26:21.959 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:26:21.985 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:26:22.053 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:26:22.073 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-02-22 22:26:22.140 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:26:22.148 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 162.5392ms
2023-02-22 22:26:22.149 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:26:22.152 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 230.5305 ms
2023-02-22 22:26:22.153 +01:00 [INF] Request finished in 234.9428ms 200 application/json; charset=utf-8
2023-02-22 22:26:32.480 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/View withdrawn students  
2023-02-22 22:26:32.488 +01:00 [INF] Successfully validated the token.
2023-02-22 22:26:32.494 +01:00 [INF] Authorization was successful.
2023-02-22 22:26:32.496 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:26:32.514 +01:00 [INF] Route matched with {action = "WithdrawStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] WithdrawStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:26:32.535 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:26:32.567 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[regNo], [w].[Address], [w].[GPA], [w].[_usersuserId], [w].[coursesTaken], [w].[dateOfBirth], [w].[emailAddress], [w].[enrollmentStatus], [w].[firstName], [w].[gender], [w].[graduationDate], [w].[lastName], [w].[phoneNo], [w].[program], [w].[registrationDate], [w].[userId]
FROM [withdrawnStudents] AS [w]
2023-02-22 22:26:32.583 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.DBsets.withdrawnStudents, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:26:32.616 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService) in 101.7365ms
2023-02-22 22:26:32.616 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.WithdrawStudentAsync (catalogueService)'
2023-02-22 22:26:32.617 +01:00 [INF] HTTP GET /api/AdminProfile/View withdrawn students responded 200 in 134.2003 ms
2023-02-22 22:26:32.625 +01:00 [INF] Request finished in 145.2621ms 200 application/json; charset=utf-8
2023-02-22 22:30:16.903 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add an Exam application/json 131
2023-02-22 22:30:16.913 +01:00 [INF] Successfully validated the token.
2023-02-22 22:30:16.915 +01:00 [INF] Authorization was successful.
2023-02-22 22:30:16.916 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.CreateExamAsync (catalogueService)'
2023-02-22 22:30:16.936 +01:00 [INF] Route matched with {action = "CreateExam", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateExamAsync(catalogueService.requestETresponse.examRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:30:16.975 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:30:17.020 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Exams] ([examDescription], [examName], [invigilator], [passScore])
VALUES (@p0, @p1, @p2, @p3);
SELECT [examId]
FROM [Exams]
WHERE @@ROWCOUNT = 1 AND [examId] = scope_identity();
2023-02-22 22:30:17.039 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:30:17.048 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.CreateExamAsync (catalogueService) in 105.799ms
2023-02-22 22:30:17.049 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.CreateExamAsync (catalogueService)'
2023-02-22 22:30:17.049 +01:00 [INF] HTTP POST /api/AdminProfile/Add an Exam responded 200 in 140.3745 ms
2023-02-22 22:30:17.050 +01:00 [INF] Request finished in 158.5123ms 200 application/json; charset=utf-8
2023-02-22 22:33:03.961 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Add Student application/json 387
2023-02-22 22:33:03.970 +01:00 [INF] Successfully validated the token.
2023-02-22 22:33:03.974 +01:00 [INF] Authorization was successful.
2023-02-22 22:33:03.975 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-02-22 22:33:04.011 +01:00 [INF] Route matched with {action = "AddStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddStudentAsync(catalogueService.requestETresponse.studentRequest) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:33:04.117 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:33:04.134 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Students] ([Address], [GPA], [_usersuserId], [coursesTaken], [dateOfBirth], [emailAddress], [enrollmentStatus], [firstName], [gender], [graduationDate], [lastName], [phoneNo], [program], [registrationDate], [userId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
SELECT [regNo]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [regNo] = scope_identity();
2023-02-22 22:33:04.164 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:33:04.166 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService) in 154.9056ms
2023-02-22 22:33:04.167 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.AddStudentAsync (catalogueService)'
2023-02-22 22:33:04.168 +01:00 [INF] HTTP POST /api/AdminProfile/Add Student responded 200 in 202.1478 ms
2023-02-22 22:33:04.168 +01:00 [INF] Request finished in 208.0033ms 200 application/json; charset=utf-8
2023-02-22 22:33:29.023 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-02-22 22:33:29.029 +01:00 [INF] Successfully validated the token.
2023-02-22 22:33:29.032 +01:00 [INF] Authorization was successful.
2023-02-22 22:33:29.032 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:33:29.034 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:33:29.039 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:33:29.053 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-02-22 22:33:29.061 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:33:29.067 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 32.0669ms
2023-02-22 22:33:29.067 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:33:29.068 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 42.4003 ms
2023-02-22 22:33:29.070 +01:00 [INF] Request finished in 58.918ms 200 application/json; charset=utf-8
2023-02-22 22:34:12.259 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:34:12.265 +01:00 [INF] Successfully validated the token.
2023-02-22 22:34:12.267 +01:00 [INF] Authorization was successful.
2023-02-22 22:34:12.267 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:34:12.286 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:34:12.341 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:34:12.670 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:34:12.672 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 385.4918ms
2023-02-22 22:34:12.673 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:34:12.673 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 413.2525 ms
2023-02-22 22:34:12.675 +01:00 [INF] Request finished in 451.0885ms 200 application/json; charset=utf-8
2023-02-22 22:34:33.968 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-02-22 22:34:33.972 +01:00 [INF] Successfully validated the token.
2023-02-22 22:34:33.977 +01:00 [INF] Authorization was successful.
2023-02-22 22:34:33.979 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:34:33.982 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:34:33.996 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:34:34.006 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-02-22 22:34:34.012 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:34:34.015 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 31.6883ms
2023-02-22 22:34:34.015 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:34:34.015 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 46.6064 ms
2023-02-22 22:34:34.016 +01:00 [INF] Request finished in 48.2968ms 200 application/json; charset=utf-8
2023-02-22 22:34:42.136 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-02-22 22:34:42.140 +01:00 [INF] Successfully validated the token.
2023-02-22 22:34:42.142 +01:00 [INF] Authorization was successful.
2023-02-22 22:34:42.142 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:34:42.144 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:34:42.147 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:34:42.161 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-02-22 22:34:42.170 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:34:42.172 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 28.0121ms
2023-02-22 22:34:42.173 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:34:42.173 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 36.2326 ms
2023-02-22 22:34:42.174 +01:00 [INF] Request finished in 38.1593ms 200 application/json; charset=utf-8
2023-02-22 22:35:22.031 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-02-22 22:35:22.037 +01:00 [INF] Successfully validated the token.
2023-02-22 22:35:22.044 +01:00 [INF] Authorization was successful.
2023-02-22 22:35:22.045 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:35:22.046 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:35:22.054 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:35:22.070 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-02-22 22:35:22.075 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:35:22.081 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 34.4283ms
2023-02-22 22:35:22.082 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:35:22.082 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 50.3325 ms
2023-02-22 22:35:22.084 +01:00 [INF] Request finished in 52.353ms 200 application/json; charset=utf-8
2023-02-22 22:35:34.402 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:35:34.410 +01:00 [INF] Successfully validated the token.
2023-02-22 22:35:34.411 +01:00 [INF] Authorization was successful.
2023-02-22 22:35:34.412 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:35:34.412 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:36:05.477 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:36:47.791 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:36:47.802 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 73381.5719ms
2023-02-22 22:36:47.802 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:36:47.802 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 73399.6269 ms
2023-02-22 22:36:47.803 +01:00 [INF] Request finished in 73401.2422ms 200 application/json; charset=utf-8
2023-02-22 22:37:00.749 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:37:00.754 +01:00 [INF] Successfully validated the token.
2023-02-22 22:37:00.755 +01:00 [INF] Authorization was successful.
2023-02-22 22:37:00.756 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:37:00.757 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:37:11.442 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:39:42.970 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:39:42.983 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 162221.7775ms
2023-02-22 22:39:42.984 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:39:42.985 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 162235.5877 ms
2023-02-22 22:39:42.986 +01:00 [INF] Request finished in 162239.0657ms 200 application/json; charset=utf-8
2023-02-22 22:39:46.587 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:39:46.591 +01:00 [INF] Successfully validated the token.
2023-02-22 22:39:46.593 +01:00 [INF] Authorization was successful.
2023-02-22 22:39:46.593 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:39:46.594 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:39:49.575 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:39:49.588 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:39:49.590 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 2995.7853ms
2023-02-22 22:39:49.591 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:39:49.591 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 3003.7304 ms
2023-02-22 22:39:49.592 +01:00 [INF] Request finished in 3005.5237ms 200 application/json; charset=utf-8
2023-02-22 22:39:56.982 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:39:56.987 +01:00 [INF] Successfully validated the token.
2023-02-22 22:39:56.990 +01:00 [INF] Authorization was successful.
2023-02-22 22:39:56.991 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:39:56.992 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:43:23.904 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-22 22:43:24.548 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-22 22:43:24.549 +01:00 [INF] Hosting environment: Development
2023-02-22 22:43:24.552 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-22 22:43:24.602 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-22 22:43:25.344 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 665.9745 ms
2023-02-22 22:43:25.358 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-22 22:43:25.360 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-22 22:43:25.363 +01:00 [INF] Request finished in 763.741ms 200 text/html;charset=utf-8
2023-02-22 22:43:25.417 +01:00 [INF] Request finished in 56.9692ms 200 application/javascript; charset=utf-8
2023-02-22 22:43:25.484 +01:00 [INF] Request finished in 125.3576ms 200 text/javascript; charset=UTF-8
2023-02-22 22:43:25.643 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-22 22:43:25.966 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 299.5261 ms
2023-02-22 22:43:25.983 +01:00 [INF] Request finished in 326.8181ms 200 application/json;charset=utf-8
2023-02-22 22:44:17.075 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-22 22:44:17.115 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 22:44:17.191 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-22 22:44:18.589 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-22 22:44:20.063 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:44:20.063 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:44:20.063 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-22 22:44:20.126 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:44:22.155 +01:00 [INF] Executed DbCommand (98ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-22 22:44:22.360 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-22 22:44:22.360 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-22 22:44:22.692 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-22 22:44:22.704 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 5503.7687ms
2023-02-22 22:44:22.705 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-22 22:44:22.706 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 5620.6924 ms
2023-02-22 22:44:22.714 +01:00 [INF] Request finished in 5643.0302ms 200 text/plain; charset=utf-8
2023-02-22 22:45:17.658 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:45:17.784 +01:00 [INF] Successfully validated the token.
2023-02-22 22:45:17.799 +01:00 [INF] Authorization was successful.
2023-02-22 22:45:17.799 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:45:17.815 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:45:54.615 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:45:54.955 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:45:54.965 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 37149.655ms
2023-02-22 22:45:54.967 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:45:54.968 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 37308.6622 ms
2023-02-22 22:45:54.969 +01:00 [INF] Request finished in 37311.3184ms 200 application/json; charset=utf-8
2023-02-22 22:46:00.090 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:46:00.122 +01:00 [INF] Successfully validated the token.
2023-02-22 22:46:00.124 +01:00 [INF] Authorization was successful.
2023-02-22 22:46:00.125 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:46:00.127 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:46:16.824 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:48:36.064 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:48:38.708 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 158580.1966ms
2023-02-22 22:48:38.709 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:48:38.710 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 158610.9634 ms
2023-02-22 22:48:38.712 +01:00 [INF] Request finished in 158622.3911ms 200 application/json; charset=utf-8
2023-02-22 22:48:41.740 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:48:41.763 +01:00 [INF] Successfully validated the token.
2023-02-22 22:48:41.770 +01:00 [INF] Authorization was successful.
2023-02-22 22:48:41.772 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:48:41.773 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:48:45.753 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:48:45.763 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:48:45.767 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 3991.1149ms
2023-02-22 22:48:45.767 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:48:45.768 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 4025.7931 ms
2023-02-22 22:48:45.768 +01:00 [INF] Request finished in 4063.5518ms 200 application/json; charset=utf-8
2023-02-22 22:48:57.287 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/AdminProfile/Grade Students?idPIPEgpa=2%7C3  0
2023-02-22 22:48:57.291 +01:00 [INF] Successfully validated the token.
2023-02-22 22:48:57.293 +01:00 [INF] Authorization was successful.
2023-02-22 22:48:57.294 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:48:57.296 +01:00 [INF] Route matched with {action = "GradeStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GradeStudentAsync(System.String) on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:51:25.671 +01:00 [INF] SQL About executing Update Students set GPA = @GPA where userId = @userId
2023-02-22 22:51:59.899 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-22 22:51:59.904 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService) in 182607.5299ms
2023-02-22 22:51:59.905 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GradeStudentAsync (catalogueService)'
2023-02-22 22:51:59.907 +01:00 [INF] HTTP POST /api/AdminProfile/Grade Students responded 200 in 182618.9858 ms
2023-02-22 22:51:59.908 +01:00 [INF] Request finished in 182621.1033ms 200 application/json; charset=utf-8
2023-02-22 22:52:27.325 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/AdminProfile/Get All Students  
2023-02-22 22:52:27.330 +01:00 [INF] Successfully validated the token.
2023-02-22 22:52:27.332 +01:00 [INF] Authorization was successful.
2023-02-22 22:52:27.333 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:52:27.361 +01:00 [INF] Route matched with {action = "GetStudent", controller = "AdminProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentAsync() on controller catalogueService.Controllers.AdminProfileController (catalogueService).
2023-02-22 22:52:27.429 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-22 22:52:27.585 +01:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[regNo], [s].[Address], [s].[GPA], [s].[_usersuserId], [s].[coursesTaken], [s].[dateOfBirth], [s].[emailAddress], [s].[enrollmentStatus], [s].[firstName], [s].[gender], [s].[graduationDate], [s].[lastName], [s].[phoneNo], [s].[program], [s].[registrationDate], [s].[userId]
FROM [Students] AS [s]
2023-02-22 22:52:27.788 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.studentModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-22 22:52:27.807 +01:00 [INF] Executed action catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService) in 444.7305ms
2023-02-22 22:52:27.808 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.AdminProfileController.GetStudentAsync (catalogueService)'
2023-02-22 22:52:27.808 +01:00 [INF] HTTP GET /api/AdminProfile/Get All Students responded 200 in 482.3364 ms
2023-02-22 22:52:27.809 +01:00 [INF] Request finished in 484.4974ms 200 application/json; charset=utf-8
