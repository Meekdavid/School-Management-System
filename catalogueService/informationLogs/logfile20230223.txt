2023-02-23 06:08:05.229 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-23 06:08:06.032 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-23 06:08:06.033 +01:00 [INF] Hosting environment: Development
2023-02-23 06:08:06.033 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-23 06:08:06.140 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 06:08:06.689 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 502.9652 ms
2023-02-23 06:08:06.722 +01:00 [INF] Request finished in 587.8895ms 200 text/html;charset=utf-8
2023-02-23 06:08:06.784 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 06:08:06.786 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 06:08:06.802 +01:00 [INF] Request finished in 18.2058ms 200 application/javascript; charset=utf-8
2023-02-23 06:08:06.964 +01:00 [INF] Request finished in 178.179ms 200 text/javascript; charset=UTF-8
2023-02-23 06:08:07.068 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 06:08:07.262 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 193.3934 ms
2023-02-23 06:08:07.262 +01:00 [INF] Request finished in 194.089ms 200 application/json;charset=utf-8
2023-02-23 06:10:22.452 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-23 06:10:22.469 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 06:10:22.527 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-23 06:10:22.976 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-23 06:10:23.745 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 06:10:23.746 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 06:10:23.746 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 06:10:23.825 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 06:10:24.697 +01:00 [INF] Executed DbCommand (79ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-23 06:10:24.786 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-23 06:10:24.786 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-23 06:10:25.002 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 06:10:25.015 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2476.8258ms
2023-02-23 06:10:25.015 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 06:10:25.017 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 2563.5940 ms
2023-02-23 06:10:25.033 +01:00 [INF] Request finished in 2584.1404ms 200 text/plain; charset=utf-8
2023-02-23 06:23:21.749 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-23 06:23:22.240 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-23 06:23:22.241 +01:00 [INF] Hosting environment: Development
2023-02-23 06:23:22.241 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-23 06:23:22.274 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 06:23:22.753 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 414.9311 ms
2023-02-23 06:23:22.776 +01:00 [INF] Request finished in 505.5876ms 200 text/html;charset=utf-8
2023-02-23 06:23:22.801 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 06:23:22.801 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 06:23:22.824 +01:00 [INF] Request finished in 23.4523ms 200 application/javascript; charset=utf-8
2023-02-23 06:23:22.861 +01:00 [INF] Request finished in 60.9579ms 200 text/javascript; charset=UTF-8
2023-02-23 06:23:22.952 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 06:23:23.197 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 244.2155 ms
2023-02-23 06:23:23.197 +01:00 [INF] Request finished in 245.0563ms 200 application/json;charset=utf-8
2023-02-23 10:49:44.817 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-23 10:49:45.901 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-23 10:49:45.902 +01:00 [INF] Hosting environment: Development
2023-02-23 10:49:45.902 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-23 10:49:45.956 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 10:49:46.778 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 10:49:46.790 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 10:49:46.772 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 672.8548 ms
2023-02-23 10:49:46.792 +01:00 [INF] Request finished in 11.9059ms 200 application/javascript; charset=utf-8
2023-02-23 10:49:46.841 +01:00 [INF] Request finished in 893.3051ms 200 text/html;charset=utf-8
2023-02-23 10:49:46.973 +01:00 [INF] Request finished in 182.6105ms 200 text/javascript; charset=UTF-8
2023-02-23 10:49:47.128 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 10:49:47.606 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 476.6127 ms
2023-02-23 10:49:47.607 +01:00 [INF] Request finished in 479.6774ms 200 application/json;charset=utf-8
2023-02-23 10:50:32.823 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-23 10:50:32.850 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 10:50:32.954 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-23 10:50:33.977 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-23 10:50:35.405 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 10:50:35.406 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 10:50:35.407 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 10:50:35.497 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 10:50:36.888 +01:00 [INF] Executed DbCommand (156ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-23 10:50:37.117 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-23 10:50:37.118 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-23 10:50:37.475 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 10:50:37.497 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 4527.9299ms
2023-02-23 10:50:37.498 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 10:50:37.498 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 4673.8274 ms
2023-02-23 10:50:37.506 +01:00 [INF] Request finished in 4684.2181ms 200 text/plain; charset=utf-8
2023-02-23 10:51:19.604 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Available Programs  
2023-02-23 10:51:19.771 +01:00 [INF] Successfully validated the token.
2023-02-23 10:51:19.788 +01:00 [INF] Authorization was successful.
2023-02-23 10:51:19.789 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-02-23 10:51:19.802 +01:00 [INF] Route matched with {action = "GetPrograms", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProgramsAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-02-23 10:51:19.940 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 10:51:20.046 +01:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
2023-02-23 10:51:20.196 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.Fee, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-23 10:51:20.212 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService) in 408.7747ms
2023-02-23 10:51:20.214 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetProgramsAsync (catalogueService)'
2023-02-23 10:51:20.214 +01:00 [INF] HTTP GET /api/StudentProfile/View Available Programs responded 200 in 608.4506 ms
2023-02-23 10:51:20.215 +01:00 [INF] Request finished in 611.9668ms 200 application/json; charset=utf-8
2023-02-23 10:51:32.959 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/StudentProfile/View Available Courses  
2023-02-23 10:51:32.978 +01:00 [INF] Successfully validated the token.
2023-02-23 10:51:32.981 +01:00 [INF] Authorization was successful.
2023-02-23 10:51:32.981 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.StudentProfileController.GetCoursesAsync (catalogueService)'
2023-02-23 10:51:32.995 +01:00 [INF] Route matched with {action = "GetCourses", controller = "StudentProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCoursesAsync() on controller catalogueService.Controllers.StudentProfileController (catalogueService).
2023-02-23 10:51:33.017 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 10:51:33.045 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[courseId], [c].[courseTitle], [c].[createdOn], [c].[programId]
FROM [Courses] AS [c]
2023-02-23 10:51:33.068 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Database.DBsets.Course, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-23 10:51:33.100 +01:00 [INF] Executed action catalogueService.Controllers.StudentProfileController.GetCoursesAsync (catalogueService) in 104.03ms
2023-02-23 10:51:33.100 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.StudentProfileController.GetCoursesAsync (catalogueService)'
2023-02-23 10:51:33.103 +01:00 [INF] HTTP GET /api/StudentProfile/View Available Courses responded 200 in 139.5181 ms
2023-02-23 10:51:33.112 +01:00 [INF] Request finished in 162.6534ms 200 application/json; charset=utf-8
2023-02-23 10:52:40.112 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Register Payment application/json 140
2023-02-23 10:52:40.127 +01:00 [INF] Successfully validated the token.
2023-02-23 10:52:40.136 +01:00 [INF] Authorization was successful.
2023-02-23 10:52:40.136 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-23 10:52:40.151 +01:00 [INF] Route matched with {action = "AddCategory", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategoryAsync(catalogueService.requestETresponse.orderRequest) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-23 10:52:40.210 +01:00 [INF] Category Request collected to be added is catalogueService.requestETresponse.orderRequest
2023-02-23 10:52:40.215 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 10:52:40.247 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[customerId] = @__id_0
2023-02-23 10:52:40.397 +01:00 [INF] Executed DbCommand (19ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-23 10:52:40.514 +01:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-23 10:52:41.022 +01:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [orders] ([FeeId], [amount], [customerId], [dateReceived], [delivered], [discountID], [orderStatus], [paymentID], [quantity])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT [orderID]
FROM [orders]
WHERE @@ROWCOUNT = 1 AND [orderID] = scope_identity();
2023-02-23 10:52:41.124 +01:00 [INF] Current orderstatus for this Fee is Not Paid
2023-02-23 10:52:41.156 +01:00 [INF] SQL connection sucessfully opened to execute Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-23 10:52:41.545 +01:00 [INF] SQL Successfully with result affected: 1
2023-02-23 10:52:41.567 +01:00 [INF] Order successfully placed with order ID of 7
2023-02-23 10:52:41.575 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-23 10:52:41.580 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService) in 1428.94ms
2023-02-23 10:52:41.580 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.AddCategoryAsync (catalogueService)'
2023-02-23 10:52:41.581 +01:00 [INF] HTTP POST /api/Orders/Register Payment responded 200 in 1466.0587 ms
2023-02-23 10:52:41.583 +01:00 [INF] Request finished in 1471.2468ms 200 application/json; charset=utf-8
2023-02-23 10:52:58.822 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Orders/View Registered Payments  
2023-02-23 10:52:58.844 +01:00 [INF] Successfully validated the token.
2023-02-23 10:52:58.846 +01:00 [INF] Authorization was successful.
2023-02-23 10:52:58.846 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-23 10:52:58.861 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-23 10:52:58.873 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 10:52:58.892 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
2023-02-23 10:52:58.944 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.orderModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-23 10:52:58.956 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService) in 95.1017ms
2023-02-23 10:52:58.957 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.GetAllWalkDifficulties (catalogueService)'
2023-02-23 10:52:58.958 +01:00 [INF] HTTP GET /api/Orders/View Registered Payments responded 200 in 133.1360 ms
2023-02-23 10:52:58.959 +01:00 [INF] Request finished in 138.3187ms 200 application/json; charset=utf-8
2023-02-23 10:53:17.281 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=7  0
2023-02-23 10:53:17.287 +01:00 [INF] Successfully validated the token.
2023-02-23 10:53:17.290 +01:00 [INF] Authorization was successful.
2023-02-23 10:53:17.290 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-23 10:53:17.341 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-23 10:53:17.815 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 10:53:17.911 +01:00 [INF] Executed DbCommand (28ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-23 10:53:17.934 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-23 10:53:17.940 +01:00 [INF] The userID 1 has Insufficient funds
2023-02-23 10:53:17.942 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 10:53:17.944 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 602.2391ms
2023-02-23 10:53:17.945 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-23 10:53:17.946 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 664.0642 ms
2023-02-23 10:53:17.947 +01:00 [INF] Request finished in 666.7426ms 200 text/plain; charset=utf-8
2023-02-23 10:58:50.241 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-23 10:58:51.015 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-23 10:58:51.015 +01:00 [INF] Hosting environment: Development
2023-02-23 10:58:51.015 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-23 10:58:51.104 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 10:58:51.927 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 733.3513 ms
2023-02-23 10:58:51.965 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 10:58:51.965 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 10:58:51.985 +01:00 [INF] Request finished in 11.7659ms 200 application/javascript; charset=utf-8
2023-02-23 10:58:52.089 +01:00 [INF] Request finished in 1000.6109ms 200 text/html;charset=utf-8
2023-02-23 10:58:52.150 +01:00 [INF] Request finished in 184.9519ms 200 text/javascript; charset=UTF-8
2023-02-23 10:58:52.290 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 10:58:52.759 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 467.9137 ms
2023-02-23 10:58:52.760 +01:00 [INF] Request finished in 469.2298ms 200 application/json;charset=utf-8
2023-02-23 11:01:14.267 +01:00 [INF] Request starting HTTP/2.0 PUT https://localhost:44388/api/Users/1 application/json 194
2023-02-23 11:01:14.956 +01:00 [INF] Successfully validated the token.
2023-02-23 11:01:15.057 +01:00 [INF] Authorization was successful.
2023-02-23 11:01:15.066 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService)'
2023-02-23 11:01:15.190 +01:00 [INF] Route matched with {action = "UpdateWalkDifficulty", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateWalkDifficultyAsync(Int32, catalogueService.requestETresponse.userRequest) on controller catalogueService.Controllers.UsersController (catalogueService).
2023-02-23 11:01:17.804 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 11:01:17.804 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 11:01:17.805 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 11:01:17.920 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:01:19.733 +01:00 [INF] Executed DbCommand (164ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__p_0
2023-02-23 11:01:20.345 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [wallet] = @p0
WHERE [userId] = @p1;
SELECT @@ROWCOUNT;
2023-02-23 11:01:20.480 +01:00 [INF] Executing ObjectResult, writing value of type 'catalogueService.requestETresponse.Response'.
2023-02-23 11:01:20.512 +01:00 [INF] Executed action catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService) in 5301.9996ms
2023-02-23 11:01:20.514 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.UsersController.UpdateWalkDifficultyAsync (catalogueService)'
2023-02-23 11:01:20.514 +01:00 [INF] HTTP PUT /api/Users/1 responded 200 in 6245.8016 ms
2023-02-23 11:01:20.525 +01:00 [INF] Request finished in 6263.5967ms 200 application/json; charset=utf-8
2023-02-23 11:01:35.450 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Orders/Checkout?orderID=7  0
2023-02-23 11:01:35.464 +01:00 [INF] Successfully validated the token.
2023-02-23 11:01:35.469 +01:00 [INF] Authorization was successful.
2023-02-23 11:01:35.470 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-23 11:01:35.498 +01:00 [INF] Route matched with {action = "Purchase", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PurchaseAsync(Int32) on controller catalogueService.Controllers.OrdersController (catalogueService).
2023-02-23 11:01:35.619 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:01:35.704 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[@__OrderID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__OrderID_0
2023-02-23 11:01:35.798 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE [u].[userId] = @__id_0
2023-02-23 11:01:35.829 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [f].[FeeId], [f].[categoryId], [f].[description], [f].[name], [f].[price], [f].[quantity]
FROM [Fees] AS [f]
WHERE [f].[FeeId] = @__id_0
2023-02-23 11:01:43.786 +01:00 [INF] SQL About executing Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-02-23 11:01:44.083 +01:00 [INF] Sales table successfully updated for query: Insert Into sales(datePaid, salesType, amount, customerID) Values(@datePaid, @salesType, @amount, @customerID)
2023-02-23 11:01:44.084 +01:00 [INF] SQL About executing Update users set wallet = @wallet where userId = @userId
2023-02-23 11:01:44.094 +01:00 [INF] Customer's wallet successfully updated for query: Update users set wallet = @wallet where userId = @userId
2023-02-23 11:01:44.094 +01:00 [INF] SQL About executing Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-23 11:01:44.098 +01:00 [INF] Order status successfully updated for query: Update orders set orderStatus = @orderStatus where orderID = @orderID
2023-02-23 11:01:44.109 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__orderId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[orderID], [o].[FeeId], [o].[amount], [o].[customerId], [o].[dateReceived], [o].[delivered], [o].[discountID], [o].[orderStatus], [o].[paymentID], [o].[quantity]
FROM [orders] AS [o]
WHERE [o].[orderID] = @__orderId_0
2023-02-23 11:01:44.111 +01:00 [INF] SQL About executing Update Fees set quantity = @quantity where FeeID = @FeeID
2023-02-23 11:01:44.115 +01:00 [INF] Slots left successfully updated for query: Update Fees set quantity = @quantity where FeeID = @FeeID
2023-02-23 11:01:44.115 +01:00 [INF] About generating reciept for customer: 1
2023-02-23 11:01:44.590 +01:00 [INF] Payment successfully made for the orderID: 7
2023-02-23 11:01:44.595 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 11:01:44.596 +01:00 [INF] Executed action catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService) in 9097.7538ms
2023-02-23 11:01:44.597 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.OrdersController.PurchaseAsync (catalogueService)'
2023-02-23 11:01:44.597 +01:00 [INF] HTTP POST /api/Orders/Checkout responded 200 in 9145.7006 ms
2023-02-23 11:01:44.598 +01:00 [INF] Request finished in 9148.5548ms 200 text/plain; charset=utf-8
2023-02-23 11:01:53.513 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Sales/View all Sales  
2023-02-23 11:01:53.519 +01:00 [INF] Successfully validated the token.
2023-02-23 11:01:53.528 +01:00 [INF] Authorization was successful.
2023-02-23 11:01:53.528 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService)'
2023-02-23 11:01:53.551 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 11:01:53.597 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:01:53.618 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[saleId], [s].[amount], [s].[customerID], [s].[datePaid], [s].[salesType]
FROM [sales] AS [s]
2023-02-23 11:01:53.663 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.saleModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-23 11:01:53.673 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService) in 121.6877ms
2023-02-23 11:01:53.674 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GetAllWalkDifficulties (catalogueService)'
2023-02-23 11:01:53.675 +01:00 [INF] HTTP GET /api/Sales/View all Sales responded 200 in 159.5211 ms
2023-02-23 11:01:53.676 +01:00 [INF] Request finished in 163.3808ms 200 application/json; charset=utf-8
2023-02-23 11:02:27.367 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate All Report  0
2023-02-23 11:02:27.413 +01:00 [INF] Successfully validated the token.
2023-02-23 11:02:27.416 +01:00 [INF] Authorization was successful.
2023-02-23 11:02:27.417 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 11:02:27.434 +01:00 [INF] Route matched with {action = "GenerateAllReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateAllReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 11:02:27.456 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:02:27.495 +01:00 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-02-23 11:02:51.523 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 11:02:51.525 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService) in 24090.2011ms
2023-02-23 11:02:51.530 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 11:02:51.531 +01:00 [INF] HTTP POST /api/Sales/Generate All Report responded 200 in 24128.8094 ms
2023-02-23 11:02:51.532 +01:00 [INF] Request finished in 24165.6572ms 200 text/plain; charset=utf-8
2023-02-23 11:03:07.185 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/api/Customers/Get all Customers  
2023-02-23 11:03:07.191 +01:00 [INF] Successfully validated the token.
2023-02-23 11:03:07.194 +01:00 [INF] Authorization was successful.
2023-02-23 11:03:07.195 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-02-23 11:03:07.208 +01:00 [INF] Route matched with {action = "GetAllWalkDifficulties", controller = "Customers"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWalkDifficulties() on controller catalogueService.Controllers.CustomersController (catalogueService).
2023-02-23 11:03:07.220 +01:00 [INF] This User mbokodavid@gmail.com is a SUPER ADMIN
2023-02-23 11:03:07.223 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:03:07.239 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
2023-02-23 11:03:07.272 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[catalogueService.Models.customerModel, catalogueService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-02-23 11:03:07.278 +01:00 [INF] Executed action catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService) in 69.0792ms
2023-02-23 11:03:07.278 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.CustomersController.GetAllWalkDifficulties (catalogueService)'
2023-02-23 11:03:07.279 +01:00 [INF] HTTP GET /api/Customers/Get all Customers responded 200 in 91.3376 ms
2023-02-23 11:03:07.283 +01:00 [INF] Request finished in 97.5835ms 200 application/json; charset=utf-8
2023-02-23 11:03:35.690 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate All Report  0
2023-02-23 11:03:35.695 +01:00 [INF] Successfully validated the token.
2023-02-23 11:03:35.696 +01:00 [INF] Authorization was successful.
2023-02-23 11:03:35.696 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 11:03:35.698 +01:00 [INF] Route matched with {action = "GenerateAllReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateAllReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 11:03:35.706 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:03:35.741 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-02-23 11:13:32.113 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-23 11:13:32.796 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-23 11:13:32.797 +01:00 [INF] Hosting environment: Development
2023-02-23 11:13:32.797 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-23 11:13:32.849 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 11:13:33.524 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 601.5134 ms
2023-02-23 11:13:33.537 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 11:13:33.546 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 11:13:33.561 +01:00 [INF] Request finished in 18.314ms 200 application/javascript; charset=utf-8
2023-02-23 11:13:33.658 +01:00 [INF] Request finished in 811.7448ms 200 text/html;charset=utf-8
2023-02-23 11:13:33.711 +01:00 [INF] Request finished in 165.0276ms 200 text/javascript; charset=UTF-8
2023-02-23 11:13:33.906 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 11:13:34.377 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 469.5550 ms
2023-02-23 11:13:34.378 +01:00 [INF] Request finished in 472.1762ms 200 application/json;charset=utf-8
2023-02-23 11:14:06.603 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-23 11:14:06.633 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 11:14:06.702 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-23 11:14:08.213 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-23 11:14:09.627 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 11:14:09.627 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 11:14:09.627 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 11:14:09.692 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:14:11.304 +01:00 [INF] Executed DbCommand (154ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-23 11:14:11.538 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-23 11:14:11.539 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-23 11:14:11.855 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 11:14:11.885 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 5165.2684ms
2023-02-23 11:14:11.887 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 11:14:11.891 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 5286.2147 ms
2023-02-23 11:14:11.909 +01:00 [INF] Request finished in 5315.3294ms 200 text/plain; charset=utf-8
2023-02-23 11:14:59.525 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate All Report  0
2023-02-23 11:14:59.700 +01:00 [INF] Successfully validated the token.
2023-02-23 11:14:59.716 +01:00 [INF] Authorization was successful.
2023-02-23 11:14:59.718 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 11:14:59.731 +01:00 [INF] Route matched with {action = "GenerateAllReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateAllReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 11:14:59.910 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:15:00.338 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 11:15:00.346 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService) in 613.7696ms
2023-02-23 11:15:00.346 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 11:15:00.346 +01:00 [INF] HTTP POST /api/Sales/Generate All Report responded 200 in 819.8864 ms
2023-02-23 11:15:00.347 +01:00 [INF] Request finished in 824.562ms 200 text/plain; charset=utf-8
2023-02-23 11:15:48.366 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate Sales Report  0
2023-02-23 11:15:48.384 +01:00 [INF] Successfully validated the token.
2023-02-23 11:15:48.387 +01:00 [INF] Authorization was successful.
2023-02-23 11:15:48.387 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-02-23 11:15:48.399 +01:00 [INF] Route matched with {action = "GenerateReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 11:15:48.434 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:15:48.608 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 11:15:48.614 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService) in 214.6279ms
2023-02-23 11:15:48.614 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-02-23 11:15:48.614 +01:00 [INF] HTTP POST /api/Sales/Generate Sales Report responded 200 in 245.7485 ms
2023-02-23 11:15:48.615 +01:00 [INF] Request finished in 252.4995ms 200 text/plain; charset=utf-8
2023-02-23 11:16:23.217 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate Sales Report  0
2023-02-23 11:16:23.223 +01:00 [INF] Successfully validated the token.
2023-02-23 11:16:23.227 +01:00 [INF] Authorization was successful.
2023-02-23 11:16:23.228 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-02-23 11:16:23.232 +01:00 [INF] Route matched with {action = "GenerateReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 11:16:41.117 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 11:17:03.739 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 11:17:03.753 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService) in 40519.4906ms
2023-02-23 11:17:03.756 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-02-23 11:17:03.758 +01:00 [INF] HTTP POST /api/Sales/Generate Sales Report responded 200 in 40538.4735 ms
2023-02-23 11:17:03.764 +01:00 [INF] Request finished in 40547.1839ms 200 text/plain; charset=utf-8
2023-02-23 11:17:07.989 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate Sales Report  0
2023-02-23 11:17:07.998 +01:00 [INF] Successfully validated the token.
2023-02-23 11:17:07.999 +01:00 [INF] Authorization was successful.
2023-02-23 11:17:08.000 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateReportAsync (catalogueService)'
2023-02-23 11:17:08.001 +01:00 [INF] Route matched with {action = "GenerateReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 11:17:21.306 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 12:36:40.251 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-23 12:36:40.728 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-23 12:36:40.729 +01:00 [INF] Hosting environment: Development
2023-02-23 12:36:40.729 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-23 12:36:40.775 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 12:36:41.110 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 297.8940 ms
2023-02-23 12:36:41.122 +01:00 [INF] Request finished in 349.798ms 200 text/html;charset=utf-8
2023-02-23 12:36:41.132 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 12:36:41.146 +01:00 [INF] Request finished in 14.0828ms 200 application/javascript; charset=utf-8
2023-02-23 12:36:41.158 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 12:36:41.192 +01:00 [INF] Request finished in 33.8493ms 200 text/javascript; charset=UTF-8
2023-02-23 12:36:41.285 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 12:36:41.451 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 165.6606 ms
2023-02-23 12:36:41.452 +01:00 [INF] Request finished in 166.6963ms 200 application/json;charset=utf-8
2023-02-23 12:37:46.157 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-23 12:37:46.167 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 12:37:46.226 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-23 12:37:46.676 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-23 12:37:47.430 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 12:37:47.430 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 12:37:47.430 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 12:37:47.470 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 12:37:48.305 +01:00 [INF] Executed DbCommand (74ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-23 12:37:48.423 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-23 12:37:48.423 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-23 12:37:48.603 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 12:37:48.625 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2381.0346ms
2023-02-23 12:37:48.625 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 12:37:48.625 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 2467.2010 ms
2023-02-23 12:37:48.629 +01:00 [INF] Request finished in 2474.33ms 200 text/plain; charset=utf-8
2023-02-23 12:38:21.438 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate All Report  0
2023-02-23 12:38:21.531 +01:00 [INF] Successfully validated the token.
2023-02-23 12:38:21.539 +01:00 [INF] Authorization was successful.
2023-02-23 12:38:21.539 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 12:38:21.548 +01:00 [INF] Route matched with {action = "GenerateAllReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateAllReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 12:38:27.250 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 12:38:27.295 +01:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-02-23 12:38:47.869 +01:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-02-23 12:39:14.773 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[saleId], [s].[amount], [s].[customerID], [s].[datePaid], [s].[salesType]
FROM [sales] AS [s]
2023-02-23 12:39:32.924 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 12:39:34.852 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 1925.3396 ms
2023-02-23 12:39:34.853 +01:00 [INF] Request finished in 1929.1048ms 200 text/html;charset=utf-8
2023-02-23 12:39:34.891 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 12:39:38.081 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 12:39:38.097 +01:00 [INF] Request finished in 16.669ms 200 application/javascript; charset=utf-8
2023-02-23 12:39:38.104 +01:00 [INF] Request finished in 3212.7731ms 200 text/javascript; charset=UTF-8
2023-02-23 12:39:38.242 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 12:39:38.261 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 19.2830 ms
2023-02-23 12:39:38.262 +01:00 [INF] Request finished in 19.7715ms 200 application/json;charset=utf-8
2023-02-23 12:39:40.380 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 12:39:44.243 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 3859.2539 ms
2023-02-23 12:39:44.244 +01:00 [INF] Request finished in 3863.8934ms 200 text/html;charset=utf-8
2023-02-23 12:39:44.255 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 12:39:44.255 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 12:39:44.257 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 12:39:44.258 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService) in 82709.8562ms
2023-02-23 12:39:44.258 +01:00 [INF] Request finished in 0.6487ms 200 application/javascript; charset=utf-8
2023-02-23 12:39:44.259 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 12:39:44.260 +01:00 [INF] HTTP POST /api/Sales/Generate All Report responded 200 in 82821.1684 ms
2023-02-23 12:39:44.261 +01:00 [INF] Request finished in 82823.3456ms 200 text/plain; charset=utf-8
2023-02-23 12:39:44.283 +01:00 [INF] Request finished in 28.1714ms 200 text/javascript; charset=UTF-8
2023-02-23 12:39:44.420 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 12:39:44.442 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 21.9841 ms
2023-02-23 12:39:44.442 +01:00 [INF] Request finished in 22.3605ms 200 application/json;charset=utf-8
2023-02-23 12:41:50.886 +01:00 [INF] User profile is available. Using 'C:\Users\David Mboko\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-02-23 12:41:51.451 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-02-23 12:41:51.452 +01:00 [INF] Hosting environment: Development
2023-02-23 12:41:51.452 +01:00 [INF] Content root path: C:\Users\David Mboko\Desktop\Git\LampNet-Assignment\catalogueService
2023-02-23 12:41:51.485 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/index.html  
2023-02-23 12:41:51.940 +01:00 [INF] HTTP GET /swagger/index.html responded 200 in 417.6536 ms
2023-02-23 12:41:51.954 +01:00 [INF] Request finished in 473.9556ms 200 text/html;charset=utf-8
2023-02-23 12:41:51.972 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_framework/aspnetcore-browser-refresh.js  
2023-02-23 12:41:51.980 +01:00 [INF] Request finished in 7.5429ms 200 application/javascript; charset=utf-8
2023-02-23 12:41:52.004 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/_vs/browserLink  
2023-02-23 12:41:52.052 +01:00 [INF] Request finished in 48.8106ms 200 text/javascript; charset=UTF-8
2023-02-23 12:41:52.150 +01:00 [INF] Request starting HTTP/2.0 GET https://localhost:44388/swagger/v1/swagger.json  
2023-02-23 12:41:52.421 +01:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 270.1535 ms
2023-02-23 12:41:52.421 +01:00 [INF] Request finished in 271.2352ms 200 application/json;charset=utf-8
2023-02-23 12:42:24.857 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Authenticate/login application/json 67
2023-02-23 12:42:24.872 +01:00 [INF] Executing endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 12:42:24.913 +01:00 [INF] Route matched with {action = "Login", controller = "Authenticate"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(catalogueService.Authentication.LoginModel) on controller JWTAuthentication.Controllers.AuthenticateController (catalogueService).
2023-02-23 12:42:25.413 +01:00 [INF] Login request received is Username: mbokodavid@gmail.com
2023-02-23 12:42:26.215 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'orders'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 12:42:26.215 +01:00 [WRN] No type was specified for the decimal column 'amount' on entity type 'sales'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 12:42:26.215 +01:00 [WRN] No type was specified for the decimal column 'salary' on entity type 'job'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2023-02-23 12:42:26.270 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 12:42:27.033 +01:00 [INF] Executed DbCommand (78ms) [Parameters=[@__ToLower_0='?' (Size = 4000), @__userLogin_password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
WHERE (LOWER([u].[userName]) = @__ToLower_0) AND ([u].[password] = @__userLogin_password_1)
2023-02-23 12:42:27.149 +01:00 [INF] The Username of the current user is: mbokodavid@gmail.com
2023-02-23 12:42:27.149 +01:00 [INF] Username: mbokodavid@gmail.com successfully logged in
2023-02-23 12:42:27.317 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 12:42:27.331 +01:00 [INF] Executed action JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService) in 2408.2188ms
2023-02-23 12:42:27.331 +01:00 [INF] Executed endpoint 'JWTAuthentication.Controllers.AuthenticateController.Login (catalogueService)'
2023-02-23 12:42:27.331 +01:00 [INF] HTTP POST /api/Authenticate/login responded 200 in 2470.2303 ms
2023-02-23 12:42:27.335 +01:00 [INF] Request finished in 2481.8182ms 200 text/plain; charset=utf-8
2023-02-23 12:44:22.801 +01:00 [INF] Request starting HTTP/2.0 POST https://localhost:44388/api/Sales/Generate All Report  0
2023-02-23 12:44:22.882 +01:00 [INF] Successfully validated the token.
2023-02-23 12:44:22.888 +01:00 [INF] Authorization was successful.
2023-02-23 12:44:22.889 +01:00 [INF] Executing endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 12:44:22.897 +01:00 [INF] Route matched with {action = "GenerateAllReport", controller = "Sales"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GenerateAllReportAsync() on controller catalogueService.Controllers.SalesController (catalogueService).
2023-02-23 12:44:29.759 +01:00 [INF] Entity Framework Core 3.1.5 initialized 'catalogueDBContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2023-02-23 12:44:29.797 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[userId], [u].[firstName], [u].[lastName], [u].[locationId], [u].[password], [u].[phoneNumber], [u].[role], [u].[typeId], [u].[userName], [u].[wallet]
FROM [Users] AS [u]
2023-02-23 12:44:29.830 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[customerId], [c].[_usersuserId], [c].[firstName], [c].[lastName], [c].[phoneNumber], [c].[userId]
FROM [Customers] AS [c]
WHERE [c].[userId] = @__id_0
2023-02-23 12:44:29.858 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[saleId], [s].[amount], [s].[customerID], [s].[datePaid], [s].[salesType]
FROM [sales] AS [s]
2023-02-23 12:44:30.270 +01:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-02-23 12:44:30.272 +01:00 [INF] Executed action catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService) in 7375.2341ms
2023-02-23 12:44:30.273 +01:00 [INF] Executed endpoint 'catalogueService.Controllers.SalesController.GenerateAllReportAsync (catalogueService)'
2023-02-23 12:44:30.273 +01:00 [INF] HTTP POST /api/Sales/Generate All Report responded 200 in 7471.5910 ms
2023-02-23 12:44:30.274 +01:00 [INF] Request finished in 7472.7092ms 200 text/plain; charset=utf-8
